{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1498287560,"metadata":{"github-id":"MDU6SXNzdWUyMzgzMDA1Njg=","github-url":"https://github.com/perl11/cperl/issues/299","origin":"github"},"title":"afl-fuzz 2017-06-19: '$*+=**=0' freed temp stack value","message":"See the new test-cases in the repo from #293. https://github.com/rwhitworth/cperl-fuzz\n\nThe most interesting case is: `$* += (** = 0)`\n* `perl -e'$*+=**=0'` =\u003e add with a freed temp lhs. perl and cperl. a perl regression since 5.18.\nAssertion failed: (PL_valid_types_NV_set[SvTYPE(sv) \u0026 SVt_MASK]), function Perl_sv_setnv, file sv.c, line 1826.\n\nAll cases boil down to this one, if it's add, multiply, bit_and, modulo, ...\n\nUntil 5.16 this temp. value is not freed via FREETMPS, tmps_ix is different.\nWith 5.18 `**` was announced to be deprecated, btw.\n\nBisected to:\n```\ncommit 8e629ff434d89810db5682216773576e5a345702\nAuthor: Father Chrysostomos \u003csprout@cpan.org\u003e\nDate:   Sun May 20 23:37:36 2012 -0700\n\n    Donâ€™t stringify GV in numeric cx outside warnings scope\n\n    The GV is only stringified for the sake of the warning message, so\n    there is no point in wasting CPU cycle if it will be unused.\n```\nReverting this optimization fixes it.\n`$# += (** = 0)` interestingly works fine.","files":null}]}