{"version":1,"ops":[{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566679859,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxNzkzNQ=="},"target":"d13e4e0dfa2024a03dbf3fc824b62963113951b276f6a9052227a5a8388b22d0","message":"https://www.facebook.com/groups/perlprogrammers/permalink/2629938067038965/\n\nMiroslav Popov shared his first post.\nNew Member · 13 hrs\nInconsistency (maybe) in Perl11(cperl); http://perl11.org/cperl/\n\nI'm looking at the example of *Add call by-ref via \\$arg*\n```\n   sub myfunc(int \\$i) : int { $i++; }\n    my $i;\n    print myfunc($i); =\u003e 1\n    print $i;         =\u003e 1\n```\n\n  I think that the first print must output 0 (or undef) instead of 1 because myfunc uses a postfix increment.  So, myfunc must return undef. I'm not sure if the :int return type of the function forces casting of undef to int -\u003e 0.\n-----\nFor sure the proper example would be to use ++$i instead.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566679971,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxODA2Mw=="},"target":"d13e4e0dfa2024a03dbf3fc824b62963113951b276f6a9052227a5a8388b22d0","message":"https://www.facebook.com/groups/perlprogrammers/permalink/2629938067038965/\n\nMiroslav Popov shared his first post.\nNew Member · 13 hrs\nInconsistency (maybe) in Perl11(cperl); http://perl11.org/cperl/\n\nI'm looking at the example of *Add call by-ref via \\$arg*\n```\n   sub myfunc(int \\$i) : int { $i++; }\n    my $i;\n    print myfunc($i); =\u003e 1\n    print $i;         =\u003e 1\n```\n\n  I think that the first print must output 0 (or undef) instead of 1 because myfunc uses a postfix increment.  So, myfunc must return undef. I'm not sure if the :int return type of the function forces casting of undef to int -\u003e 0.\n-----\nFor sure the proper example would be to use ++$i instead.\nBut also check if the call really honors the post-dec, and compare with perl6.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566679983,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxODA4Mw=="},"target":"d13e4e0dfa2024a03dbf3fc824b62963113951b276f6a9052227a5a8388b22d0","message":"https://www.facebook.com/groups/perlprogrammers/permalink/2629938067038965/\n\nMiroslav Popov shared his first post.\nNew Member · 13 hrs\nInconsistency (maybe) in Perl11(cperl); http://perl11.org/cperl/\n\nI'm looking at the example of *Add call by-ref via \\$arg*\n```\n   sub myfunc(int \\$i) : int { $i++; }\n    my $i;\n    print myfunc($i); =\u003e 1\n    print $i;         =\u003e 1\n```\n\n  I think that the first print must output 0 (or undef) instead of 1 because myfunc uses a postfix increment.  So, myfunc must return undef. I'm not sure if the :int return type of the function forces casting of undef to int -\u003e 0.\n-----\nFor sure the proper example would be to use ++$i instead.\nBut also check if the call really honors the post-inc, and compare with perl6.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566680113,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxODI2NQ=="},"target":"d13e4e0dfa2024a03dbf3fc824b62963113951b276f6a9052227a5a8388b22d0","message":"https://www.facebook.com/groups/perlprogrammers/permalink/2629938067038965/\n\nMiroslav Popov shared his first post.\nNew Member · 13 hrs\nInconsistency (maybe) in Perl11(cperl); http://perl11.org/cperl/\n\nI'm looking at the example of *Add call by-ref via \\$arg*\n```\n   sub myfunc(int \\$i) : int { $i++; }\n    my $i;\n    print myfunc($i); =\u003e 1\n    print $i;         =\u003e 1\n```\n\n  I think that the first print must output 0 (or undef) instead of 1 because myfunc uses a postfix increment.  So, myfunc must return undef. I'm not sure if the :int return type of the function forces casting of undef to int -\u003e 0.\n-----\nFor sure the proper example would be to use ++$i instead.\nBut also check if the call really honors the post-inc (cperl does), and compare with perl6.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566680935,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxOTQ3Mw=="},"target":"d13e4e0dfa2024a03dbf3fc824b62963113951b276f6a9052227a5a8388b22d0","message":"https://www.facebook.com/groups/perlprogrammers/permalink/2629938067038965/\n\nMiroslav Popov shared his first post.\nNew Member · 13 hrs\nInconsistency (maybe) in Perl11(cperl); http://perl11.org/cperl/\n\nI'm looking at the example of *Add call by-ref via \\$arg*\n```\n   sub myfunc(int \\$i) : int { $i++; }\n    my $i;\n    print myfunc($i); =\u003e 1\n    print $i;         =\u003e 1\n```\n\n  I think that the first print must output 0 (or undef) instead of 1 because myfunc uses a postfix increment.  So, myfunc must return undef. I'm not sure if the :int return type of the function forces casting of undef to int -\u003e 0.\n-----\nFor sure the proper example would be to use ++$i instead.\nBut also check if the call really honors the post-inc (cperl does), and compare with perl6.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566680038,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI1ODE2MTcyMjk="},"added":["documentation"],"removed":[]},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566681077,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDU4MDQ2Nw==","github-url":"https://github.com/perl11/cperl/issues/402#issuecomment-524580467"},"message":"perl5 turns the undef to 0 on $i++ (postinc) as special-case. Otherwise the 1st print would have been empty, correct.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566681077,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODMxOTczMA=="},"target":"4a87538840e1322adf47fcc53f545f800dc4636f8254b7284efffeb42dce51f5","message":"perl5 turns the undef to 0 on $i++ (postinc) as special-case. Otherwise the 1st print would have been empty, correct. It's not any cperl type-specific change which does it, although the cperl type would have also turned the undef into a 0 also.","files":null},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1566755414,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjU4MjA1MDcyOQ=="},"status":2}]}