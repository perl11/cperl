{"version":1,"ops":[{"type":5,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1466769893,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDcwMzEwODIyNQ=="},"added":["regression"],"removed":[]},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1466771471,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODMzMzgzMw==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228333833"},"message":"That's interesting because I cannot repro it. On all of my cperl's. But similar Adam Kennedy t/02main.t tests are broken in 3 other distributions: Time::Tiny, Date::Tiny, DateTime::Tiny (DateTime::locale broken since 5.22. unrelated to cperl, -f force install). (#159)\n\nHope that I can repro it somehow, because it's a SEGV","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1466771956,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODMzNTIzNA==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228335234"},"message":"I will try to put together a simpler travis repro over the course of today.","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1466772011,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODMzNTM3NA==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228335374"},"message":"A backtrace from a DEBUGGING cperl would be nice","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1466776333,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODM1MTE1OQ==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228351159"},"message":"Ok, this is [definitely reproducible](https://travis-ci.org/ribasushi/cperl_sigsegv_repro/builds/140028175#L7257-L7259) undef -DDEBUGGING with a [very simple .travis.yml](https://github.com/ribasushi/cperl_sigsegv_repro/commit/7b423375767eb94c).\n\nI am not sure how to get a backtrace automatically (all I know is how to run gdb and manually input the necessary commends). Can you give me some hints?\n\nAlternatively if you submit a PullRequest against this repository - the CI will re-trigger again. So essentially all you need to do is to edit my .travis.yml and hit \"Submit PR\".","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1466778612,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODM2MTM3Ng==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228361376"},"message":"I can try on a debian or ubunto system later, but currently I'm on a conference with no access to my machines. Will do on monday. I'll add it to #159","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1466857980,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODUzNzk1Ng==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228537956"},"message":"Got you [a backtrace](https://travis-ci.org/ribasushi/cperl_sigsegv_repro/builds/140211220#L7299-L7315):\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\n__strlen_sse2_pminub () at ../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S:39\n39  ../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S: No such file or directory.\n#0  __strlen_sse2_pminub () at ../sysdeps/x86_64/multiarch/strlen-sse2-pminub.S:39\n#1  0x0000000000536629 in Perl_sv_vcatpvfn_flags (my_perl=0x965010, sv=0xcd3ce8, pat=0xd052f7 \"%str::'\", patlen=\u003coptimized out\u003e, args=0x7fffffffd7e8, svargs=0x0, svmax=0, maybe_tainted=0x0, flags=0) at sv.c:11949\n#2  0x0000000000539b53 in Perl_sv_vsetpvfn (my_perl=0x965010, sv=0xcd3ce8, pat=0xd052b8 \"Attempt to access disallowed key '%-p' in the restricted hash '%str::'\", patlen=70, args=\u003coptimized out\u003e, svargs=\u003coptimized out\u003e, svmax=0, maybe_tainted=0x0) at sv.c:10879\n#3  0x00000000004ef5b8 in Perl_vmess (my_perl=0x965010, pat=0xd052b8 \"Attempt to access disallowed key '%-p' in the restricted hash '%str::'\", args=0x7fffffffd7e8) at util.c:1545\n#4  0x00000000004ee873 in Perl_vcroak (my_perl=0x965010, pat=\u003coptimized out\u003e, args=\u003coptimized out\u003e) at util.c:1774\n#5  0x00000000004ee9b7 in Perl_croak (my_perl=\u003coptimized out\u003e, pat=\u003coptimized out\u003e) at util.c:1821\n#6  0x000000000050d812 in S_hv_notallowed (my_perl=0x965010, flags=\u003coptimized out\u003e, key=0x983e98 \"isa\", klen=3, msg=0xd052b8 \"Attempt to access disallowed key '%-p' in the restricted hash '%str::'\") at hv.c:221\n#7  0x000000000051068a in S_hv_delete_common (hash=\u003coptimized out\u003e, d_flags=\u003coptimized out\u003e, k_flags=\u003coptimized out\u003e, klen=\u003coptimized out\u003e, key=\u003coptimized out\u003e, keysv=\u003coptimized out\u003e, hv=\u003coptimized out\u003e, my_perl=\u003coptimized out\u003e) at hv.c:1384\n#8  Perl_hv_common (my_perl=0x965010, hv=\u003coptimized out\u003e, keysv=\u003coptimized out\u003e, key=0x983e98 \"isa\", klen=\u003coptimized out\u003e, flags=1024, action=0, val=0x0, hash=\u003coptimized out\u003e) at hv.c:413\n#9  0x000000000052bc7b in Perl_pp_method_named (my_perl=0x965010) at pp_hot.c:5008\n#10 0x00000000004ec85b in Perl_runops_debug (my_perl=0x965010) at dump.c:2274\n#11 0x0000000000458b9c in S_run_body (oldscope=1, my_perl=0x965010) at perl.c:2548\n#12 perl_run (my_perl=0x965010) at perl.c:2476\n#13 0x000000000041ed07 in main (argc=3, argv=0x7fffffffdcc8, env=0x7fffffffdce8) at perlmain.c:116\n```\n\nNote for posterity: this is [how one gets gdb backtraces in unattended mode](https://travis-ci.org/ribasushi/cperl_sigsegv_repro/builds/140211220#L7244):\n`gdb -batch -ex \"run\" -ex \"bt\" --args perl -Ilib t/02_main.t`","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1467101184,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODk4MDQyNA==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228980424"},"message":"This reproducible SEGV is currently marked as 5.24.1 - shouldn't it be bumped down to 5.24.**0** ?","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1467101352,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODk4MTAzMA==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228981030"},"message":"It's a problem in Class::Inspector which accesses a not existing key in a protected namespace. It's not really cperl specific (besides fixing the crash of course), but I thought of relaxing the stash protection rules a bit for the coretypes, since so many modules don't care about protected stashes.","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1467101419,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODk4MTI4NA==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228981284"},"message":"\u003e besides fixing the crash of course\n\nI meant this specifically deserving the 5.24.0, yes.","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1467101471,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODk4MTQ4NQ==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228981485"},"message":"Fix the crash for 5.24.0 in the error. This is not cperl specific, also upstream in the perl5 method cache.\n\nFor 5.24.1 think about relaxing protected coretype stashes, not erroring, just returning undef if !exists and is_coretype.\n\nFor modules not caring about protected stashes I added this line:\n\n```\n  no strict 'refs'; # skip locked stashes\n  unless (Internals::SvREADONLY(%{\"$c\\::\"}) and !exists($c::{isa})) {\n```\n\nbut really the method lookup is broken for those upstream.\n/\\* XXX This cannot deal with protected stashes yet. Should not error when the name exists */\nPerl_gv_fetchmethod_pvn_flags","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1467101603,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyODk4MTk2OQ==","github-url":"https://github.com/perl11/cperl/issues/171#issuecomment-228981969"},"message":"\u003e Fix the crash for 5.24.0 in the error.\n\nExcellent!","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1468250087,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDcxODg2MzAwNg=="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1468250087,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDcxODg2MzAwOA=="},"added":["upstream"],"removed":[]},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1468320901,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NzE5OTYxMTYz"},"status":2}]}