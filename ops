{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1442003866,"metadata":{"github-id":"MDU6SXNzdWUxMDYwODk1MjY=","github-url":"https://github.com/perl11/cperl/issues/26","origin":"github"},"title":"Revert qw-as-parens deprecation for for loops","message":"The rationale to remove the `for qw()` syntax was bogus and annoying.\nre-instate it for `for` loops, but not for the rest.\ndo not insist on the backwards syntax to require `(qw(  ... ))` around the `for` list.\n\nKeep qw() as list for for and foreach but not as lists for\nif, given, when, while, until, elsif and function calls.\n\nUse of qw(...) as parentheses is disallowed for:\n\n```\n    if qw(a) {}\n    unless qw(a) {}\n    if (0) {} elsif qw(a) {}\n    given qw(a) {}\n    when qw(a) {}\n    while qw(a) {}\n    until qw(a) {}\n    $obj-\u003emeth qw(a b c)\n    do foo qw(a b c)\n    do $subref qw(a b c)\n    \u0026foo qw(a b c)\n    $a[0] qw(a b c)\n```\n\nbut allowed for (foreach also):\n\n```\n    for qw(a b c) {}\n    for $x qw(a b c) {}\n    for my $x qw(a b c) {}\n    for my \\$x qw(a b c) {}\n```\n\ncommit 417a992d4dc78be79e44d19e029d9742d0334128\nAuthor: Zefram zefram@fysh.org\nDate:   Fri May 25 22:25:21 2012 +0100\n\n```\nremove deprecated qw-as-parens behaviour\n```\n\ncommit ea25a9b2cf73948b1e8c5675de027e0ad13277bd\nAuthor: Zefram zefram@fysh.org\nDate:   Wed Sep 8 09:51:29 2010 +0200\n\n```\nmake qw(...) first-class syntax\n\nThis makes a qw(...) list literal a distinct token type for the\nparser, where previously it was munged into a \"(\",THING,\")\" sequence.\nThe change means that qw(...) can't accidentally supply parens to parts\nof the grammar that want real parens.  Due to many bits of code taking\nadvantage of that by \"foreach my $x qw(...) {}\", this patch also includes\na hack to coerce qw(...) to the old-style parenthesised THING, emitting\na deprecation warning along the way.\n```","files":null}]}