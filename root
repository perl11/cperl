{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1473162754,"metadata":{"github-id":"MDU6SXNzdWUxNzUyMjc5MjA=","github-url":"https://github.com/perl11/cperl/issues/194","origin":"github"},"title":"Error when accessing overflown array indices, too many hash keys","message":"`$ary[2147483648]` should not silently access `-1` on 32 bit (64 bit analog with index `9223372036854775808`, i.e. INT64_MAX+1).\n\nrather check the UVness of indices and error with \"Too many elements\".\n\nalso do not ignore too many hash keys, when inserting a new element or when splitting a hash to exceed the U32 limit. Those keys cannot not be iterated over, and the hash is effectively ignored and thus they collide all in the last element. A nice DDos on 64bit servers without even need to know the seed, if it's possible to insert that many keys over the wire.\n\nI guess this is mildly security relevant. backported to 5.24c also.","files":null}]}