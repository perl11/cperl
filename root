{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1513763005,"metadata":{"github-id":"MDU6SXNzdWUyODM1MDMxMjg=","github-url":"https://github.com/perl11/cperl/issues/347","origin":"github"},"title":"hash slice autovivify","message":"hash slices autovivify if used as sub args or as for lists. This is a bug, not a feature.\nsingle hash elements do not autovivify, and unrolled loops neither.\nSee https://rt.perl.org//Public/Bug/Display.html?id=2166\nAt least add a warning until it is fixed.\nYes, hslices are useful sometimes. But still broken. The best fix is to assign to a temp array, and use this for loops and sub args. This is the best portable way.\n\n```\nmy %h; foreach (@h{a, b}) {} keys %h =\u003e 2\n\nsub foo {}; foo($h{a}, @h{\"b\", \"c\"}); keys %h =\u003e 2\n```\nI found no single instance in any core or CPAN module where it was *ab*used as feature, i.e. that the keys should be vivified within or after sub args or loops.\n\nOccurences:\n* cpan/Module-Load-Conditional/lib/Module/Load/Conditional.pm:238\n* HTTP/Tiny.pm:1275\n* cpan/Devel-NYTProf/blib/script/nytprofmerge:338\n* IO/Socket/IP.pm line 636\n\nnon-core:\n* Sub/Install.pm line 117\n* Sub/Exporter.pm line 262\n* Module-Build/t/destination.t lines 34,44,148,166 (ditto for other modules reusing this)\n* Module/Build/Tiny.pm line 119\n* Eval/Closure.pm (3x)\n\nSee the `bugfix/gh347-hslice` branch\nSee also http://consttype.blogspot.de/2009/03/autovivification-in-perl-5.html","files":null}]}