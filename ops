{"version":1,"ops":[{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1503489827,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyNDMwODAwMw==","github-url":"https://github.com/perl11/cperl/issues/328#issuecomment-324308003"},"message":"I appreciate your concerns. I packaged perl also by myself for cygwin for a decade, and had to download updates by myself. But it will not happen.\n\nWhy so much bloat? \n* The biggest problem is that packagers often do not include cpan essential packages, so the core package had to include the cpan client to install the missing packages by himself. Only fedora and debian can afford a split. And they do already. But even they don't include the compilers. Which is a major problem for users. Nobody is using it.\n* 90% of the bloat are cpan client dependencies.\n* 2nd: some packages are essential, like serializers (JSON, YAML, Storable), compiler (B::C), debugger, profiler (Devel::NYTProf), and cannot be maintained nor packaged by others. In fact about half of the essential packages are not maintained at all, neither by cpan nor by p5p.\nRelying on external packages turned out to be fatal for frameworks and infrastructure. JSON::PP and friends are used over Cpanel::JSON::XS which is 10x faster and slimmer. YAML is used over YAML::Syck or YAML::XS, even if they are completely broken or over architectured. E.g. cpan defaults to YAML on distroprefs (~20s boot delay). cperl fixed and switched to YAML::XS to avoid this delay. YAML::Syck would also be fine but uses just 1.1, and this should not be in core.\nCpan::Meta default to it's own YAML::Tiny, because they need more security, but cperl got rid of that and switched to the fixed YAML::XS also. But the whole toolchain and testing infra got over architectured lately.\nThen there are few packages included which are needed to catch core errors, which would otherwise not been found. Such as Internals::DumpArenas.\nTechnically Math::BigInt::GMP needs to be in core also, because the pure perl variants are a joke, but I didn't get there yet.\nEverything which has a proper XS variant should be in core instead of the slow pure perl variant. Unicode should be compiled shared XS modules, not the slow and huge script nonsense. That's 2MB run-time bloatware, unshared amongst forks.\n\nBut in the long term who won? \nStrawberry by providing everything, even the toolchain. redhat and debian got beaten for providing base. Many issues arise from that, people missing core modules.\n\nBut your request of course does make sense, to provide targets and build rules/scripts for splitted packages. Pull requests for a base/modules/doc split will be accepted. I\"ll eventually provide them myself also.\nIt's a trivial packaging splitup, p5p doesn't provide anything there, only cperl in Porting.\nMy packages are currently 10 MB, without docs much smaller.","files":null},{"type":3,"author":{"id":"8b0b18bc7c9b2859775d443c6cbe868ad90ec4a1"},"timestamp":1503493157,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyNDMyMjAwMw==","github-url":"https://github.com/perl11/cperl/issues/328#issuecomment-324322003"},"message":"Thank you for such fast and detailed response.\n\nYes, my point was to provide slim base installation as an option, not to dump whole bundled ecosystem and maintain interpreter alone.\n\nI've tried to tinker with Makefile and installperl scripts but it's too tangled for my poor knowledge about Perl toolchain to do it right. However I'll be happy to help testing base installation option when it's added in cperl.","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1503493891,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyNDMyNTc3NQ==","github-url":"https://github.com/perl11/cperl/issues/328#issuecomment-324325775"},"message":"Technically it might be done via `installperl --base/--no-base` (docs already done seperately).\nAnd a Makefile target for `install-base`, `install-nobase`.\nBut usually you would just strip them apart as every other packager does it: In the seperate packaging script, after `make install DESTDIR=`.\nE.g. fedora/debian/cygwin split debug symbols into its own packages, and create seperate tars from the one destdir. In cperl such a script is in `Porting/do-make-cperl-release`, which also takes care of reproducible builds.\nThere can be added: `Porting/do-make-cperl-base`, `Porting/do-make-cperl-modules`, `Porting/do-make-cperl-docs`. Simple bash scripts","files":null},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1503728563,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTIyMjQwMDM2NA=="},"title":"Debloated distribution: base-modules-doc","was":"Debloated distribution: base-modules-doc"},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1503740036,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDEyMjI0NDQ1NDA="},"added":["ready"],"removed":[]}]}