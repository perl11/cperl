{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1479303589,"metadata":{"github-id":"MDU6SXNzdWUxODk3MDY1MzU=","github-url":"https://github.com/perl11/cperl/issues/222","origin":"github"},"title":"SvGROW overallocation","message":"e.g. adding \".pm\" to \"warnings\": 8 + 3 = 11. needing a len=12.\nSvLEN is already 12, but sv_grow realloced to 8+3+3=14+1=15-\u003e16.\n\nVarious people decided over time in the front and in the back to add just\nanother byte for safety.  It completely went out of control. \nsv_grow adds the one for COW by itself (even when the caller should do, because usually the caller did the SvIsCOW check).\nThe SvGROW macro logic had it off-by-one, even by 2.\n\nmemory win: (DEBUGGING)\n``` \nminiperl -e0            262890 =\u003e 262833 byte\nminiperl -Ilib -E0      425636 =\u003e 423040 byte\nperl Config ...         797578 =\u003e 796932 byte\n```\n\nPERL_HASH_SEED=0 valgrind --tool=massif --massif-out-file=massif.perl.p0 ./perl -Ilib -MConfig -Mwarnings -Mstrict -V:ccflags ; grep -h mem_heap_B= massif.perl.p0 |cut -c12-|sort -rn|head -n1\n\nwith #141 smallstrings the first even goes down to 262689 bytes.","files":null}]}