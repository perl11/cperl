{"version":1,"ops":[{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1571556800,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU0NDIyNzkzOA==","github-url":"https://github.com/perl11/cperl/issues/405#issuecomment-544227938"},"message":"Interesting observation, I'll check. Definitely a regression","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1571556800,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI5NTYzMDM3NQ=="},"target":"16ed714f46edb20ac88fd79227b5aff4618b76b58471b36d2a581f042009a337","message":"Interesting observation, I'll check. Definitely a regression.\n\nI think you are right. cperl just ignores `use feature 'signatures';` but should use it to seperate () as empty sig not empty prototype. \nWhich is a controversial stance. In C they demanded `(void)` to avoid such ambiguities. `use feature 'signatures';` will eventually be the standard as in cperl, and then `()` as empty proto needs to be declared with the `:prototype ()` syntax. But there's way too many old code using `()` as empty proto. Which will break then.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1571556856,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI5NTYzMDQzNg=="},"target":"16ed714f46edb20ac88fd79227b5aff4618b76b58471b36d2a581f042009a337","message":"Interesting observation, I'll check. Definitely a regression.\n\nI think you are right. cperl just ignores `use feature 'signatures';` but should use it to seperate () as empty sig not empty prototype. \nWhich is a controversial stance. In C they eventually demanded `(void)` to avoid such ambiguities. `use feature 'signatures';` will eventually be the standard as in cperl, and then `()` as empty proto needs to be declared with the `:prototype ()` syntax. But there's way too many old code using `()` as empty proto. Which will break then.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1571556877,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI5NTYzMDQ1Nw=="},"target":"16ed714f46edb20ac88fd79227b5aff4618b76b58471b36d2a581f042009a337","message":"Interesting observation, I'll check. Definitely a regression.\n\nI think you are right. cperl just ignores `use feature 'signatures';` but should use it to seperate `()` as empty sig not empty prototype. \nWhich is a controversial stance. In C they eventually demanded `(void)` to avoid such ambiguities. `use feature 'signatures';` will eventually be the standard as in cperl, and then `()` as empty proto needs to be declared with the `:prototype ()` syntax. But there's way too many old code using `()` as empty proto. Which will break then.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1571557174,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI5NTYzMDg1OA=="},"target":"16ed714f46edb20ac88fd79227b5aff4618b76b58471b36d2a581f042009a337","message":"Interesting observation, I'll check. Definitely a regression.\n\nI think you are right. cperl just ignores `use feature 'signatures';` but should use it to seperate `()` as empty sig not empty prototype. \nWhich is a controversial stance. In C they eventually demanded `(void)` to avoid such ambiguities. `use feature 'signatures';` will eventually be the standard as in cperl, and then `()` as empty proto needs to be declared with the `:prototype ()` syntax. But there's way too many old code using `()` as empty proto. Which will break then.\n\nso the obvious cperl fix is to observe `use feature 'signatures';` for `()`, and then wait what will happen when signatures get out of experimental. It's such a shame that decisions on critical language features like this are still in the hands of the people who are not able to make the right decisions. (cperl wanted to fix exactly that) They are also deliberately ignoring the perl6 specs.","files":null}]}