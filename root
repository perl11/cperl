{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1443019226,"metadata":{"github-id":"MDU6SXNzdWUxMDc5MzQ2ODY=","github-url":"https://github.com/perl11/cperl/issues/50","origin":"github"},"title":"fix base wrong utf8::encode","message":"Nicolas found a bug in base v2.20 added with 892089cd68f447dda\n\nutf8::encode on the filename removed the utf8 flag from the cow'ed package names as bad sideeffect.\nwe only found it out via double encoding in the compiler, with utf8 pkgnames, which was in the end only a B::C bug in precomp setting a wrong SVf_UTF8 flag.\n\nBut an underlying bug is  that `Perl_sv_utf8_encode` forgets to uncow a string. Need to perlbug this fix and come up with a testcase.\n\n`Perl_sv_utf8_upgrade_flags_grow` uncows it in most cases, just not in our, when we pass in a normal UTF8 string, then it goes to\n\n```\n    if (SvUTF8(sv)) {\n    return SvCUR(sv);\n    }\n```\n\nand does not uncow it for us.\n\nWe saw something like this:\n\n```\n$ p -e'$fn=\"ƂƂƂƂ.pm\";utf8::encode($fn);require $fn;'\nCan't locate ÆÆÆÆ.pm in @INC (you may need to install the ÆÆÆÆ module)\n$ p -e'use utf8; $fn=\"ƂƂƂƂ.pm\";utf8::encode($fn);require $fn;'\nCan't locate ƂƂƂƂ.pm in @INC (you may need to install the ƂƂƂƂ module)\n```","files":null}]}