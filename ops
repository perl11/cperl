{"version":1,"ops":[{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465328927,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDM5MzIzNw==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224393237"},"message":"**IMPORTANT**\n\nThe newfangled `Test::More` no longer requires neither reason nor count. Therefore it may be misguided to ask authors of e.g. DBI to fix their [bare-skip](https://github.com/perl5-dbi/dbi/blob/master/t/49dbd_file.t#L83)'s, and instead merge the 5.25.x blead `Test::More` offering...\n\n```\nrabbit@Ahasver:~$ perl -MTest::More\\ 999\nTest::More version 999 required--this is only version 1.302026.\nBEGIN failed--compilation aborted.\n```\n\n```\nrabbit@Ahasver:~$ perl -e 'use Test::More; SKIP: { skip \"foo\", 1; }; done_testing'; echo $?\nok 1 # skip foo\n1..1\n0\n```\n\n```\nrabbit@Ahasver:~$ perl -e 'use Test::More; SKIP: { skip; }; done_testing'; echo $?\nok 1 # skip\n1..1\n0\n```","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465372486,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDUxNTg5NQ==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224515895"},"message":"That's true. \nI'll make the args optional but keep the strict types. \n\nThis is now a **FAQ**:\n\nSo that when you use one or two args for Test::More::skip(), they need to properly typed.\n\nI.e. \n\n```\nskip $why, 1` =\u003e `skip \"$why\", 1\nskip \"why\", scalar(@skips) =\u003e skip \"why\", int(@skips)\nskip \"why\", 2*$skips =\u003e skip \"why\", int(2*$skips)\n```\n\n**Rationale:**\n\nskip() is a special case that the two args are very often mixed up. This error had previously to be detected at run-time with a fragile \\d regex check. And in most cases this problem was never fixed, e.g. in `Module::Build`.\nOnly with checking for strict types I could detect and fix all of the wrong usages, get rid of the unneeded run-time check, the code is better, all errors are detected at compile time, and not covered at run-time and with the new strict types the code is much more readable, what is the `Str $why` and what the `UInt $count` argument.\n\n`$count` can never be a NV, thus :Numeric (which would allow `2*$skip`) is wrong. It needs to be :UInt. The used range op (`pp_flip`) would die at run-time with a overflowed number. `die \"Range iterator outside integer range\"`. $count := -1 will lead to test timeouts. Note that cperl doesn't yet check UInt types at run-time for negative values. This might change in later versions with the `use types` pragma.\n\n`scalar(@array)` for array or hash length is also bad code, it needs to be replaced with `int(@array)`.\nSuch a length can never be a NV or PV, it is always a `UInt`. Using `int()` is clearer, better and faster.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465375658,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4NTQ3MTI4MA=="},"added":["regression"],"removed":[]},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465400346,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDYyOTY4MA==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224629680"},"message":"Ok, I changed the $count from Int to Numeric, and allowed an empty skip with no_plan, as documented. The only backcompat problem is the str requirement, which will fail with plain Scalar(untyped) variables. If a variable, it needs to be stringified or typed. Otherwise I cannot detect the mixup at compile-time.","files":null},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465401130,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Njg2MDAwNTYw"},"status":2},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465456161,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDgxNzA3NA==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224817074"},"message":"Reopening as per https://github.com/perl11/cperl/commit/4fa19ec6c0dd333ac7dc9d8bf16c5db96e8fcb63#commitcomment-17800525","files":null},{"type":4,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465456162,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQ2ODY4NTk2ODY="},"status":1},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465460719,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDgzMDgyOQ==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224830829"},"message":"In particular [this line](https://metacpan.org/source/DOY/Package-Stash-XS-0.28/t/00-compile.t#L66) still [fails like this](https://travis-ci.org/dbsrgits/dbix-class/jobs/136074035#L798-L803) as of [397c9ace1f949](https://travis-ci.org/dbsrgits/dbix-class/jobs/136074035#L684)","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465465219,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg0NzI2OA==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224847268"},"message":"Sure. Package-Stash-XS-0.28 is broken.\nYou cannot load a XS module with this: \n   `$^X -Ilib -e \"require $_; print '$_ ok'\"`\n\n```\n--- ./t/00-compile.t~   2013-07-16 18:17:11.000000000 +0200\n+++ ./t/00-compile.t    2016-06-09 11:36:14.000000000 +0200\n@@ -58,7 +58,7 @@\n     # fake home for cpan-testers\n     # no fake requested ## local $ENV{HOME} = tempdir( CLEANUP =\u003e 1 );\n\n-    like( qx{ $^X -Ilib -e \"require $_; print '$_ ok'\" }, qr/^\\s*$_ ok/s, \"$_ loaded ok\" )\n+    like( qx{ $^X -Mblib -Ilib -e \"require $_; print '$_ ok'\" }, qr/^\\s*$_ ok/s, \"$_ loaded ok\" )\n         for sort @modules;\n\n     SKIP: {\n```\n\nOther than that, the type checker passes now the \n        `skip \"Test::Script needed to test script compilation\", scalar(@scripts) if $@;`\nline.","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465465435,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg0ODA4Mg==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224848082"},"message":"@rurban, please click the actual links I gave you in https://github.com/perl11/cperl/issues/153#issuecomment-224830829\n\nThe logs clearly contradict\n\n\u003e Other than that, the type checker passes now the `skip \"Test::Script needed to test script compilation\", scalar(@scripts) if $@;` line.\n\nI very seldomly talk out of my ass, please take the time to look into my bugreports.","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465465541,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg0ODQ0Ng==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224848446"},"message":"@rurban ... unless `skip() needs to know $how_many tests are in the block at..` is a warning, in which case nothing to see here.","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465465575,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg0ODU2NA==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224848564"},"message":"@rurban Yes, it is a warnings, sorry for the noise :/","files":null},{"type":4,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465465577,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Njg3MDEwOTE1"},"status":2},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465465799,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg0OTM3NA==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224849374"},"message":"See https://github.com/rurban/distroprefs/commit/e3535bd5ac227730da7445083aee77d0cd87861a for the new 2 patches needed for Package::Stash::XS. This has nothing to do with cperl. Just sloppy tests.","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465466018,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNDg1MDE2OQ==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-224850169"},"message":"Yes, I agree. This time I **did** speak out of my ass ;)","files":null},{"type":3,"author":{"id":"aae8eab77a12cafb8bd2903823241c9aebd1280a"},"timestamp":1465541484,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyNTEwNjc0OQ==","github-url":"https://github.com/perl11/cperl/issues/153#issuecomment-225106749"},"message":"Please see https://github.com/rurban/distroprefs/issues/4","files":null}]}