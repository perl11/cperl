{"version":1,"ops":[{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711323,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1MTcxNQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)    # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name, so a dummy anon gv is created.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711331,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1MTc1OQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name, so a dummy anon gv is created.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711362,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1MTkzMQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name, so a dummy anon CvGV is created.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711393,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1MjEyOQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711456,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1MjU2OA=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711489,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1Mjc4MQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535712575,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI1NzkyNw=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\n`$Config{usenamedanoncv}` sets `USE_NAMED_ANONCV`.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535717861,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI4MDcxMQ=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\n`$Config{usenamedanoncv}` sets `USE_NAMED_ANONCV`.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\nAdd `GV_ANON` flag for newXS_len_flags()\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.\n\nWe could then use the @ CvNAME suffix for marking multi methods\n(new@int, new@int,str) (i.e. same name, but different methods),\nas well as marking multiple variants of special blocks (BEGIN@1)\nfor easier identification.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535717960,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTI4MTE2Mg=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should no throw away information for no good reason.\n`$Config{usenamedanoncv}` sets `USE_NAMED_ANONCV`.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\nAdd `GV_ANON` flag for newXS_len_flags()/newCONSTSUB_flags()\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.\n\nWe could then use the @ CvNAME suffix for marking multi methods\n(new@int, new@int,str) (i.e. same name, but different methods),\nas well as marking multiple variants of special blocks (BEGIN@1)\nfor easier identification.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535789374,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTUyOTc2Nw=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should not throw away information (the orphaned subname) for no good reason.\n`$Config{usenamedanoncv}` sets `USE_NAMED_ANONCV`.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\nAdd `GV_ANON` flag for newXS_len_flags()/newCONSTSUB_flags()\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.\n\nWe could then use the @ CvNAME suffix for marking multi methods\n(new@int, new@int,str) (i.e. same name, but different methods),\nas well as marking multiple variants of special blocks (BEGIN@1)\nfor easier identification.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535793955,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNTUzNTM4Mg=="},"target":"72f5c3faa740bc864355125fc468abe7fb6f3a97b854b174fc861dce93630fbf","message":"We should not throw away information (the orphaned subname) for no good reason.\n`$Config{usenamedanoncv}` sets `USE_NAMED_ANONCV`.\nMark anonymised functions with a @ suffix, keeping their old name.\nEsp. with upcoming more and more cvref's without GV.\nAdd `GV_ANON` flag for newXS_len_flags()/newCONSTSUB_flags()\n\ne.g.\n```\n$ cperl -Dt -d:NYTProf -e0\n...\n(-e:0)\tnextstate\n(-e:0)\tpushmark\n(-e:0)\tconst(PV(\"Devel::NYTProf\"))\n(-e:0)\tmethod_named(-\u003eimport)\n(-e:0)\tentersub(import@)   # was entersub(__ANON_) \n(-e:0)\tenterxssub(import@) # was enterxssub(__ANON_) \n(-e:0)\tleavesub\n```\n\nThe import XS method has no name (but an attached CV), so a dummy anon CvGV is created.\nDevel::NYTProf even creates numbered variants, like `BEGIN@4`. This might be too expensive here.\n\nWe could then use the @ CvNAME suffix for marking multi methods\n(new@int, new@int,str) (i.e. same name, but different methods),\nas well as marking multiple variants of special blocks (BEGIN@1)\nfor easier identification.\n\nTo be on the safe side we could also use the \\0 character as multi seperator, but for now keep it simple and reflective.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535711269,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE4MjAyNjY0NjU="},"added":["enhancement"],"removed":[]},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535712537,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTgyMDMwMjI5Mg=="},"title":"usenamedanoncv: use @suffix instead of __ANON__","was":"usenamedanoncv: use @suffix instead of __ANON__"},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535901307,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTgyMjI4NTUwNw=="},"status":2}]}