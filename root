{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1442159422,"metadata":{"github-id":"MDU6SXNzdWUxMDYyMjQxNDY=","github-url":"https://github.com/perl11/cperl/issues/31","origin":"github"},"title":"threads + restricted stashes","message":"cloning a restricted stash (e.g. a coretype) leads to \"Attempt to access disallowed key 'CLONE' in the restricted hash '%main::UInt::'\" error\n\ngv_fetchmethod_autoload which is used to find a `CLONE` or `CLONE_SKIP` method is not usable for protected stashes. This is an upstream bug and not really related to threads. Just that only threads call a method in a restricted stash and fail currently.\n\nFor the time being use `gv_fetchsv(name, GV_NOADD_NOINIT, SVt_PVCV)` there instead to avoid\nthose errors. but try to fix it in gv_fetchmethod_autoload.\n\nBTW: The new gv api is together with the lexicals warnings non-API a highlight of confusion and API horrors.\n\ngv_fetchmethod_autoload is really a gv_fetchmethod_flags because it does not autoload, only with a true 3rd arg. gv_fetchmethod_flags and gv_fetchmethod_pv_flags are not generally usable because of the non-support of binary names, but ok internally for core.\n\ngv_fetchmethod_\\* cannot deal with protected stashes, because it tries a destructive hash lookup in a restricted hash just to find a method name which causes a run-time error. so we have now to protect each gv_fetchmethod_autoload from protected stashes.\n\ngv_fetchmethod_pvs_flags is my new helper for compile-time static strings.\n\nTODO: With protected stashes and an existing AUTOLOAD method do not error and perform the AUTOLOAD. Without autoload just search for the method, but not GV_ADD, thus do not error.","files":null}]}