{"version":1,"ops":[{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535381852,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyMzU1NDQ3NA=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes/ This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n244d26825825c6a1d5bc181e6da699d48bcb51a4 perldelta for #115814 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it can be collapsed to a single `__ANONIO__` symbol per package, as XS packages may want to handle more then one T_STDIO. E.g. stdout, and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535381874,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyMzU1NDY0OQ=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n244d26825825c6a1d5bc181e6da699d48bcb51a4 perldelta for #115814 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it can be collapsed to a single `__ANONIO__` symbol per package, as XS packages may want to handle more then one T_STDIO. E.g. stdout, and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535381971,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyMzU1NTMzNA=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it cannot be collapsed to a single `__ANONIO__` symbol per package as XS packages may want to handle more then one T_STDIO. E.g. stdout and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1536139735,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNjYzOTMyMw=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it cannot be collapsed to a single `__ANONIO__` symbol per package as XS packages may want to handle more then one T_STDIO. E.g. stdout and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram\n#- 06c214d653ac955e506914a26f8f9ab8917a6f41 disable cwd_enoent test - Zefram\n#- 2b13e35c123fa2ccf42c9a8d449764f50b15cd60 Remove unused AUTOGEN_FILES Makefile variable - Dagfinn Ilmari Mannsåker\n#- 523d71b314dc75bd212794cc8392eab8267ea744 Revert \"make PerlIO handle FD_CLOEXEC\" - Abigail\n#- 894f226e51fd4f80c130447477b789cd25f37574 move sub attributes before the signature - David Mitchell\n#- b2f1aa3851347cb95fc82b32e842fd4d6e8ed99c Devel::PPPort: Do not define PERL_MAGIC_qr more times - Pali\n#- 9fc6ca9da4208eb58a2ad8169b81757082a52f85 Skip t/op/state.t tests that need attributes under miniperl - Hugo van der Sanden\n#- 0a9f8f95112ff40e13406b3e5aab49c01487f045 APItest: Correct parameter sign - Karl Williamson\n#- e0280e4921cf0b53edc3e4790ff6f201046adcbc APItest: Fix C++ compiles - Karl Williamson\n#- f61fbe7bb36915d6a598df82ede2511d261e41d3 Revert \"Carp: Avoid string eval\" - Yves Orton\n#- 345db0f66ed0ac7b609bb6bcceaf3a48b5f8e25b Storable: when building in core do not run stacksize every time - Yves Orton\n#- 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\n#- 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos\n#- 1c8104f6f402c92bd12af877323398749dec28a8 remove unused var in sv_eq_flags - Daniel Dragan\n#- 436ddf68a973edeede30e3cdf27a8063d7686eec parse subs and signature subs separately - David Mitchell\n#- 75230cc19006735d29105daf0c6dcaf41880f961 rationalise subroutine parsing rules - David Mitchell\n#- 86ae8d9a6f56e9e71efc1f3e556f6770dc07566e subtly change meaning of XATTRBLOCK, XATTRTERM - David Mitchell\n#- a8c5635617479436b1775ba4ab34e4bc791eda54 detect sub attributes following a signature - David Mitchell\n#- b192f96b711bd7c2418791a14214084ca5d1f4ca add an empty file (to be removed next commit) - Yves Orton\n#- ecad93809368755639b71856840a4d6e6d599ade remove empty file - Yves Orton\n#- 4dcaa9563832b4722c1fa286256c2c8c1ec91fa4 Silence compilter warning - Karl Williamson\n#- a77eff3cee8f0785758b235ecf8fc42a4f945e08 delete unreliable test of Carp crash avoidance - Zefram\n#- 3b98040677439914b935745adaabcc2511ff14d0 fix versions in doc of signature/attribute diag - Zefram\n#- 0cb291171cc75e1aed1c415a7178c1ea9441259b inline.h: Silence compiler warning - Karl Williamson\n#- 5f6af817add6d2df3603e0e94b6eb27ba5fb3970 perlvar: update the docs on \"my $_\" to note its removal - Ricardo Signes\n#- 2407a17ad5d780a1625dddfb668056ab05459194 PATCH: (perl #132227 CVE-2018-6797] heap-buffer-overflow - Karl Williamson\n#- 0faf531f63c88379bd22fe7801555d5aef100c5d Rebuild Configure from latest units - Aaron Crane\n#- 143b7de3f8fd2a2799ab2ce26ffefcf9596eadaa Adapt acknowledgements.pl to perl being in its fourth decade - Leon Timmermans\n#- f75ab299e2c1f32844ff278938ff12a96931649a RT#133131: pp_hot.c: deoptimise pp_iter() when non-standard OP_AND op_ppaddr - Aaron Crane\n#- 64a9c780950becebc7326a31d067801ec9b187a2 Revert \"set PERL_EXIT_DESTRUCT_END in all embeddings\" - David Mitchell\n#- 9f9606382c45ba5e9600dddf96abfe956762af99 revert perl_run() 0 -\u003e 256 return mapping - David Mitchell","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1536139890,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNjY0MDMwNw=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n# Rejected\n```\n     40 Zefram\n     10 Karl Williamson\n      9 David Mitchell\n      8 Father Chrysostomos\n      4 Yves Orton\n      4 Jarkko Hietaniemi\n      2 Aaron Crane\n      1 Ævar Arnfjörð Bjarmason\n      1 Sullivan Beck\n      1 Sawyer X\n      1 Ricardo Signes\n      1 Pali\n      1 Leon Timmermans\n      1 Hugo van der Sanden\n      1 Daniel Dragan\n      1 Dagfinn Ilmari Mannsåker\n      1 Alberto Simões\n      1 Abigail\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it cannot be collapsed to a single `__ANONIO__` symbol per package as XS packages may want to handle more then one T_STDIO. E.g. stdout and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram\n#- 06c214d653ac955e506914a26f8f9ab8917a6f41 disable cwd_enoent test - Zefram\n#- 2b13e35c123fa2ccf42c9a8d449764f50b15cd60 Remove unused AUTOGEN_FILES Makefile variable - Dagfinn Ilmari Mannsåker\n#- 523d71b314dc75bd212794cc8392eab8267ea744 Revert \"make PerlIO handle FD_CLOEXEC\" - Abigail\n#- 894f226e51fd4f80c130447477b789cd25f37574 move sub attributes before the signature - David Mitchell\n#- b2f1aa3851347cb95fc82b32e842fd4d6e8ed99c Devel::PPPort: Do not define PERL_MAGIC_qr more times - Pali\n#- 9fc6ca9da4208eb58a2ad8169b81757082a52f85 Skip t/op/state.t tests that need attributes under miniperl - Hugo van der Sanden\n#- 0a9f8f95112ff40e13406b3e5aab49c01487f045 APItest: Correct parameter sign - Karl Williamson\n#- e0280e4921cf0b53edc3e4790ff6f201046adcbc APItest: Fix C++ compiles - Karl Williamson\n#- f61fbe7bb36915d6a598df82ede2511d261e41d3 Revert \"Carp: Avoid string eval\" - Yves Orton\n#- 345db0f66ed0ac7b609bb6bcceaf3a48b5f8e25b Storable: when building in core do not run stacksize every time - Yves Orton\n#- 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\n#- 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos\n#- 1c8104f6f402c92bd12af877323398749dec28a8 remove unused var in sv_eq_flags - Daniel Dragan\n#- 436ddf68a973edeede30e3cdf27a8063d7686eec parse subs and signature subs separately - David Mitchell\n#- 75230cc19006735d29105daf0c6dcaf41880f961 rationalise subroutine parsing rules - David Mitchell\n#- 86ae8d9a6f56e9e71efc1f3e556f6770dc07566e subtly change meaning of XATTRBLOCK, XATTRTERM - David Mitchell\n#- a8c5635617479436b1775ba4ab34e4bc791eda54 detect sub attributes following a signature - David Mitchell\n#- b192f96b711bd7c2418791a14214084ca5d1f4ca add an empty file (to be removed next commit) - Yves Orton\n#- ecad93809368755639b71856840a4d6e6d599ade remove empty file - Yves Orton\n#- 4dcaa9563832b4722c1fa286256c2c8c1ec91fa4 Silence compilter warning - Karl Williamson\n#- a77eff3cee8f0785758b235ecf8fc42a4f945e08 delete unreliable test of Carp crash avoidance - Zefram\n#- 3b98040677439914b935745adaabcc2511ff14d0 fix versions in doc of signature/attribute diag - Zefram\n#- 0cb291171cc75e1aed1c415a7178c1ea9441259b inline.h: Silence compiler warning - Karl Williamson\n#- 5f6af817add6d2df3603e0e94b6eb27ba5fb3970 perlvar: update the docs on \"my $_\" to note its removal - Ricardo Signes\n#- 2407a17ad5d780a1625dddfb668056ab05459194 PATCH: (perl #132227 CVE-2018-6797] heap-buffer-overflow - Karl Williamson\n#- 0faf531f63c88379bd22fe7801555d5aef100c5d Rebuild Configure from latest units - Aaron Crane\n#- 143b7de3f8fd2a2799ab2ce26ffefcf9596eadaa Adapt acknowledgements.pl to perl being in its fourth decade - Leon Timmermans\n#- f75ab299e2c1f32844ff278938ff12a96931649a RT#133131: pp_hot.c: deoptimise pp_iter() when non-standard OP_AND op_ppaddr - Aaron Crane\n#- 64a9c780950becebc7326a31d067801ec9b187a2 Revert \"set PERL_EXIT_DESTRUCT_END in all embeddings\" - David Mitchell\n#- 9f9606382c45ba5e9600dddf96abfe956762af99 revert perl_run() 0 -\u003e 256 return mapping - David Mitchell","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1536140322,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNjY0MzI2MA=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n# Rejected\n```\n     40/229 Zefram\n     10/652 Karl Williamson\n      9/149 David Mitchell\n      8/96 Father Chrysostomos\n      4/35 Yves Orton\n      4/13 Jarkko Hietaniemi\n      2/108 Aaron Crane\n      1/3 Ævar Arnfjörð Bjarmason\n      1/79 Sawyer X\n      1/1 Ricardo Signes\n      1/13 Pali\n      1/2 Leon Timmermans\n      1/2 Hugo van der Sanden\n      1/16 Daniel Dragan\n      1/34 Dagfinn Ilmari Mannsåker\n      1/1 Alberto Simões\n      1/13 Abigail\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it cannot be collapsed to a single `__ANONIO__` symbol per package as XS packages may want to handle more then one T_STDIO. E.g. stdout and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list so far:\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram\n#- 06c214d653ac955e506914a26f8f9ab8917a6f41 disable cwd_enoent test - Zefram\n#- 2b13e35c123fa2ccf42c9a8d449764f50b15cd60 Remove unused AUTOGEN_FILES Makefile variable - Dagfinn Ilmari Mannsåker\n#- 523d71b314dc75bd212794cc8392eab8267ea744 Revert \"make PerlIO handle FD_CLOEXEC\" - Abigail\n#- 894f226e51fd4f80c130447477b789cd25f37574 move sub attributes before the signature - David Mitchell\n#- b2f1aa3851347cb95fc82b32e842fd4d6e8ed99c Devel::PPPort: Do not define PERL_MAGIC_qr more times - Pali\n#- 9fc6ca9da4208eb58a2ad8169b81757082a52f85 Skip t/op/state.t tests that need attributes under miniperl - Hugo van der Sanden\n#- 0a9f8f95112ff40e13406b3e5aab49c01487f045 APItest: Correct parameter sign - Karl Williamson\n#- e0280e4921cf0b53edc3e4790ff6f201046adcbc APItest: Fix C++ compiles - Karl Williamson\n#- f61fbe7bb36915d6a598df82ede2511d261e41d3 Revert \"Carp: Avoid string eval\" - Yves Orton\n#- 345db0f66ed0ac7b609bb6bcceaf3a48b5f8e25b Storable: when building in core do not run stacksize every time - Yves Orton\n#- 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\n#- 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos\n#- 1c8104f6f402c92bd12af877323398749dec28a8 remove unused var in sv_eq_flags - Daniel Dragan\n#- 436ddf68a973edeede30e3cdf27a8063d7686eec parse subs and signature subs separately - David Mitchell\n#- 75230cc19006735d29105daf0c6dcaf41880f961 rationalise subroutine parsing rules - David Mitchell\n#- 86ae8d9a6f56e9e71efc1f3e556f6770dc07566e subtly change meaning of XATTRBLOCK, XATTRTERM - David Mitchell\n#- a8c5635617479436b1775ba4ab34e4bc791eda54 detect sub attributes following a signature - David Mitchell\n#- b192f96b711bd7c2418791a14214084ca5d1f4ca add an empty file (to be removed next commit) - Yves Orton\n#- ecad93809368755639b71856840a4d6e6d599ade remove empty file - Yves Orton\n#- 4dcaa9563832b4722c1fa286256c2c8c1ec91fa4 Silence compilter warning - Karl Williamson\n#- a77eff3cee8f0785758b235ecf8fc42a4f945e08 delete unreliable test of Carp crash avoidance - Zefram\n#- 3b98040677439914b935745adaabcc2511ff14d0 fix versions in doc of signature/attribute diag - Zefram\n#- 0cb291171cc75e1aed1c415a7178c1ea9441259b inline.h: Silence compiler warning - Karl Williamson\n#- 5f6af817add6d2df3603e0e94b6eb27ba5fb3970 perlvar: update the docs on \"my $_\" to note its removal - Ricardo Signes\n#- 2407a17ad5d780a1625dddfb668056ab05459194 PATCH: (perl #132227 CVE-2018-6797] heap-buffer-overflow - Karl Williamson\n#- 0faf531f63c88379bd22fe7801555d5aef100c5d Rebuild Configure from latest units - Aaron Crane\n#- 143b7de3f8fd2a2799ab2ce26ffefcf9596eadaa Adapt acknowledgements.pl to perl being in its fourth decade - Leon Timmermans\n#- f75ab299e2c1f32844ff278938ff12a96931649a RT#133131: pp_hot.c: deoptimise pp_iter() when non-standard OP_AND op_ppaddr - Aaron Crane\n#- 64a9c780950becebc7326a31d067801ec9b187a2 Revert \"set PERL_EXIT_DESTRUCT_END in all embeddings\" - David Mitchell\n#- 9f9606382c45ba5e9600dddf96abfe956762af99 revert perl_run() 0 -\u003e 256 return mapping - David Mitchell","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1536146565,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDEyNjY3NjkyMw=="},"target":"97665ba16ad1f64575c7b2ef1a1aa3875b74678128d607e952569b9754327b59","message":"This is a difficult one, mostly because Zefram went absurdly destructive in many of his changes. Not only the dumb_match branch, also changing some policies and more. Need to look more closely into his changes. Father broke the T_STDIO, T_IN and T_OUT typemaps by forcing double-close on existing file handles, which is fatal with glibc (#357). He went on by just ignoring the crashing test.\nSo far I have 36 rejections for Zefram, 4 important ones for Father Chrysostomos, 3 for Jarkko and khw, 1 for Ævar.\n\nThere's lot of good stuff by khw: mph (compiled uniprops for case folding and LB), wordwise string search, no SSE though yet. CLOEXEC support and more robust cleanup by Zefram, tr/// fixups by davem.\n\n```\ng cp -x `grep -v '^#' .old/merge-5.279|head -n10|cut -c-40`\n```\n\n# Rejected\n```\n     40/229 Zefram\n     10/652 Karl Williamson\n      9/149 David Mitchell\n      8/96 Father Chrysostomos\n      4/35 Yves Orton\n      4/13 Jarkko Hietaniemi\n      2/108 Aaron Crane\n      1/3 Ævar Arnfjörð Bjarmason\n      1/79 Sawyer X\n      1/1 Ricardo Signes\n      1/13 Pali\n      1/2 Leon Timmermans\n      1/2 Hugo van der Sanden\n      1/16 Daniel Dragan\n      1/34 Dagfinn Ilmari Mannsåker\n      1/1 Alberto Simões\n      1/13 Abigail\n```\n\n* d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\nautovivification is not a bug anymore for them, but a feature. WTF. cperl will still try to fix this bug with the gv revamp.\n\n* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\nThis broke Devel::NYTProf, needed to be fixed up by adding CVf_NODEBUG to this empty CONSTSUB. See https://github.com/timbunce/devel-nytprof/issues/113\n\n* 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\nand 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos \nand esp. d642ec356d13ea4c17077c084c1cda93e9f9e69b Carp: Avoid string eval - Father Chrysostomos \n  These three changes moved the overloading logic from run-time to compile-time, blowing up compiled C files by a huge number (\u003e10x), so that even the simplest one-liners cannot be compiled anymore with \u003c= 8GB RAM. without string eval the compiler is forced to pickup overload also.\noverloading checks are entirely useless in a critical stacktrace. From now on also B::C and B::CC are being useless with perl5, not just the Bytecode compiler which was broken earlier. You really need a patched Carp.\n\n* d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\nstray?\n\n* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n  exit(256) is not exit(0) on windows, only on U8 exitcodes. At least Windows and VMS use short (U16) exitcodes. This change broke running `pod/buildtoc` on Windows. See also [perl #132577] where it broke Module::Install also.\n This change needed about 4 later fixups.\n\n* 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\ncperl doesn't have this unhelpful Bad name error message, it rather correctly got the missing string delims right.\n\n* 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\nOf course ancient is pre-5.6. 5.6 is just old, and 5.6.2 still one of the best perl versions, with 5.8+ destroying the semantics of the SV utf8 flag, hash tables, the compiler and lots more.\n\n* I'm not sure yet about 6661956a23de vivify array elements when putting them on stack - Zefram\nLooks like a massive change, too good to be true.\n\n* And b2cd5cb1d8b3c8a7a7  Unicode::UCD: max code point is now IV_MAX - Karl Williamson\nMAX_CP still needs to be 0x10ffff, not IV_MAX. This is used for reverse search in the invlist.\n\n* 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\nbroke [cperl #166] HANGUL FILLER fixups. range complements cannot be sped up like this.\n\n* ~~8c20b11d5137b21b9b47609f4e97e1d5c3d355f1 perluniprops: Improve sorting - Karl Williamson\nTODO broke folding?~~\n\n* 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\nbroke mktables\n\n* 8e991213a1d4f6b7526be79687f9170a9201412d Emulate some C99 macros and typedefs - Karl Williamson\nreplaced U64_CONST with UINT64_C, breaking all modules using it. It was in handy.h, in the public API.\nused an undefined U16_TYPE, not U16TYPE. broke mingw/msvc without C99 compilers.\n\n* 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos and related commits\n 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n\n  This is completely wrong. It also leads to #357 where p5p just decided to ignore this fatal error.\nA IO object in a lexical (obj or ref) must be gensymed, it cannot be collapsed to a single `__ANONIO__` symbol per package as XS packages may want to handle more then one T_STDIO. E.g. stdout and stderr. The name should be kept if already existing. Avoiding the leak leads to double-close, which is fatal on glibc.\n\n* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n  Deleting the good parts and adding wrong parts is some strange concept of clarity.\n\n* 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n  advising to break CPAN by using modern syntax.\n\n* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n  This \"fix\" sounds hardly correct. It breaks taint checks for sure, which are esp. important for system args. TODO [perl #121105](https://rt.perl.org//Public/Bug/Display.html?id=121105)\nIt also broke Win32, VMS and numeric args.\nThe subsequent fixup \n8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\nstill does not handle VMS and taint, but calls GETMAGIC on all args now twice.\n\n---\nComplete list  of rejections\n\n#- a252c8fe5fbed43d9b362ed97d57a5a7764fac62 update newGIVENOP() doc for loss of lexical $_ - Zefram\n#- 76ed45178844dff782880573017d9b7c9fbc0007 regularise \"given\" - Zefram\n#- b69ef0135bfebf0c32023bcb970dbb95957b32e7 regularise \"when\" - Zefram\n#- 1c71ec5e58384a564f5eb9864d03334aa772afcc remove unused arg from newGIVWHENOP() - Zefram\n#- 64805db9f7c4784f6ddf4f97dcbe6fd820f05a45 merge switch sections in perlsyn.pod - Zefram\n#- 98729e54e4bb1f6f9e5e0a21c6e56461abe54dbf revise all given/when documentation - Zefram\n#- 5e1cca32ac612f0b59508a99fbff671a693f39b9 update perlexperiment.pod re smartmatch - Zefram\n#- 5f3202fa3e77c4a20de590df045af4683aaedffa eviscerate smartmatch - Zefram\n#- e32748c9f33b07135a5e2e4f1cdcdf22cd3a93ad remove now-unused \"M\" debugging flag - Zefram\n#- 8a0ed425bf56098485707c69bba62ee2404bef3f test details of smartmatch overloading - Zefram\n#- ab179ac766f9eda4c7f539d09c43b02b45938b5c drop op flag for implicit smartmatch - Zefram\n#- 25233fb4d503834fd10cefc6b551240224a7f31a canonicalise smartmatch overload truth values - Zefram\n#- 1068631d8485410b2f8645d5413bbed47244a4a8 update doc in lib/ about smartmatch - Zefram\n#- fb24bb2d5fb05aef6336a32777331137e881eff5 test $swap arg for smartmatch overload - Zefram\n#- 9e0909b2180c408354ce24b6c742f4b79e783d11 perldelta for smartmatch changes - Zefram\n#- 793c2ded15ca832d1df1fabbc3b2e7562a057697 In some systems st.ino is never negative. - Jarkko Hietaniemi\n#- 8843856e9716655549cce789b3338e1d4c72fffb More robust version of 793c2ded. - Jarkko Hietaniemi\n#- 3676f9e77d46b61f4785aad171f02bed29df0c07 False false. - Jarkko Hietaniemi\n#- 869b8c119a7436d3373e1325925a8b753d0e7805 remove useless \"default\" mechanism - Zefram\n#- 5086635a9f7a492b5a0c6228ecf7a22abbabeef6 avoid gratuitous given/when in test - Zefram\n#- af8bd34d16b94bde32535062ba4e88407be233a0 use LOOP struct for entergiven op - Zefram\n#- df9e1bc13efe0941735d662db5683d62b3851535 use blk_loop format for CXt_GIVEN - Zefram\n#- df16d5564aa82a94953a0bccfc9917bc140ead02 revise block_givwhen for sole use by \"when\" - Zefram\n#- 619bbb9ab0f3cffda05f980b2ebb5bf660ad6962 make loop control apply to \"given\" - Zefram\n#- 97b4caa610942fa2caded4f8ec03ac72089cd30e remove useless \"break\" mechanism - Zefram\n#- b4904f80ff3e727173a3d8a9856827695e1af0ad make \"when\" do implicit \"next\" - Zefram\n#- e98c3eae7b9c9628400af33f6ac77a6feebb4f3f remove unused CXp_FOR_DEF and OPpITER_DEF - Zefram\n#- b1a6328e96a123f6ca713df406f01c2f4a2f2b7b perldelta for more switch changes - Zefram\n#- 40b0df696c4f45c9e0e43ec2121b53bc06a586db make \"outside a loop\" error messages consistent - Zefram\n#- 2ce94a867b15d96bd49eb8807d39df950f3a1087 re_intuit_start(): skip too short variant utf8 pat - David Mitchell\n#- 56e48c10762ae388167c2f2449eea8553b396093 perluniprops/mktables: Add code points matched annotations - Karl Williamson\n#- 76b35304cf4800e9e0f7b370b9f1f40bc6cfb7e0 Make Bad name error less unhelpful - Father Chrysostomos\n#- d3f0c815eccb54ae88550259c06aa395b2274580 remove doc hedge about autovivification - Zefram\n#- 16ea2c1905a8b12a3ddd72561c74de0063cbcc40 merge leavegiven op type into leaveloop - Zefram\n#- 8c49c7c16863f886a6a4da3b585463cd16a8b976 fix \"LOOP_GIVEN\" constant in PL_block_type[] - Zefram\n#- 284a3526271b040abd48aef39f61e8bacbf16645 change \"when\" keyword to \"whereso\" - Zefram\n#- 15e4ac9a427692a356fe62b255db9e08982879f5 internally change \"when\" to \"whereso\" - Zefram\n#- 84ac76a7475419f4ac6e5a6935522f7b7ebb0e2c better name for parameter to newGIVENOP() - Zefram\n#- f68519ee3f12e5ba41a022ef88ce3d6c3901807f add \"whereis\" - Zefram\n#- d6374f3d794e2a640258023e92e8d922409215ec perldelta for more switch changes - Zefram\n#- 86452548f54ae14813026a35a2c67498bfcdf626 mktables: Avoid some work - Karl Williamson\n#- d106cb46261708412bce33e1840ae6e8c17bea20 remove stray NULLOK/NN from apidoc directives - Zefram\n#- 7b0ac4577d4cc7902dfa379f3318a8af1b736a3d pod: start referring to 5.6 and pre-5.6 as \"ancient\" instead of just \"old\" - Ævar Arnfjörð Bjarmason\n#- 6da090e6cb9d18c5db3bb70c8c4d0c7e58183273 Avoid newGVgen in default typemap - Father Chrysostomos\n#- 732d3893ab63739910640c98c1cc83ab7bb1332c Avoid newGVgen in blead-upstream modules - Father Chrysostomos\n#- 76eb84800b51f32ecd4ab68d15ca549f2f67721b Increase $ExtUtils::Typemaps::VERSION to 3.37 - Father Chrysostomos\n#- d269f586dd6705f80163f642c0aa81f0e7a72bca Declaration after statement in typemap - Father Chrysostomos\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#- 42034324c570544c22fe9a73865f20ab45e9d989 show modern usage for {XS,Dyna}Loader - Zefram\n#- da4e040f42421764ef069371d77c008e6b801f45 merge branch zefram/dumb_match - Zefram\n#- 06c214d653ac955e506914a26f8f9ab8917a6f41 disable cwd_enoent test - Zefram\n#- 2b13e35c123fa2ccf42c9a8d449764f50b15cd60 Remove unused AUTOGEN_FILES Makefile variable - Dagfinn Ilmari Mannsåker\n#- 523d71b314dc75bd212794cc8392eab8267ea744 Revert \"make PerlIO handle FD_CLOEXEC\" - Abigail\n#- 894f226e51fd4f80c130447477b789cd25f37574 move sub attributes before the signature - David Mitchell\n#- b2f1aa3851347cb95fc82b32e842fd4d6e8ed99c Devel::PPPort: Do not define PERL_MAGIC_qr more times - Pali\n#- 9fc6ca9da4208eb58a2ad8169b81757082a52f85 Skip t/op/state.t tests that need attributes under miniperl - Hugo van der Sanden\n#- 0a9f8f95112ff40e13406b3e5aab49c01487f045 APItest: Correct parameter sign - Karl Williamson\n#- e0280e4921cf0b53edc3e4790ff6f201046adcbc APItest: Fix C++ compiles - Karl Williamson\n#- f61fbe7bb36915d6a598df82ede2511d261e41d3 Revert \"Carp: Avoid string eval\" - Yves Orton\n#- 345db0f66ed0ac7b609bb6bcceaf3a48b5f8e25b Storable: when building in core do not run stacksize every time - Yves Orton\n#- 5c8d1071aaf72214e66b1a224890384ab6ca5153 Carp: Avoid run-time mods; StrVal workarounds - Father Chrysostomos\n#- 7276ff5bb307b4639027305f3db927826089f646 Carp: Speed up longmess some more - Father Chrysostomos\n#- 1c8104f6f402c92bd12af877323398749dec28a8 remove unused var in sv_eq_flags - Daniel Dragan\n#- 436ddf68a973edeede30e3cdf27a8063d7686eec parse subs and signature subs separately - David Mitchell\n#- 75230cc19006735d29105daf0c6dcaf41880f961 rationalise subroutine parsing rules - David Mitchell\n#- 86ae8d9a6f56e9e71efc1f3e556f6770dc07566e subtly change meaning of XATTRBLOCK, XATTRTERM - David Mitchell\n#- a8c5635617479436b1775ba4ab34e4bc791eda54 detect sub attributes following a signature - David Mitchell\n#- b192f96b711bd7c2418791a14214084ca5d1f4ca add an empty file (to be removed next commit) - Yves Orton\n#- ecad93809368755639b71856840a4d6e6d599ade remove empty file - Yves Orton\n#- 4dcaa9563832b4722c1fa286256c2c8c1ec91fa4 Silence compilter warning - Karl Williamson\n#- a77eff3cee8f0785758b235ecf8fc42a4f945e08 delete unreliable test of Carp crash avoidance - Zefram\n#- 3b98040677439914b935745adaabcc2511ff14d0 fix versions in doc of signature/attribute diag - Zefram\n#- 0cb291171cc75e1aed1c415a7178c1ea9441259b inline.h: Silence compiler warning - Karl Williamson\n#- 5f6af817add6d2df3603e0e94b6eb27ba5fb3970 perlvar: update the docs on \"my $_\" to note its removal - Ricardo Signes\n#- 2407a17ad5d780a1625dddfb668056ab05459194 PATCH: (perl #132227 CVE-2018-6797] heap-buffer-overflow - Karl Williamson\n#- 0faf531f63c88379bd22fe7801555d5aef100c5d Rebuild Configure from latest units - Aaron Crane\n#- 143b7de3f8fd2a2799ab2ce26ffefcf9596eadaa Adapt acknowledgements.pl to perl being in its fourth decade - Leon Timmermans\n#- f75ab299e2c1f32844ff278938ff12a96931649a RT#133131: pp_hot.c: deoptimise pp_iter() when non-standard OP_AND op_ppaddr - Aaron Crane\n#- 64a9c780950becebc7326a31d067801ec9b187a2 Revert \"set PERL_EXIT_DESTRUCT_END in all embeddings\" - David Mitchell\n#- 9f9606382c45ba5e9600dddf96abfe956762af99 revert perl_run() 0 -\u003e 256 return mapping - David Mitchell\n\nList of fixups\n\n#* 0740a29d60ebd4ff72090340b0140ec2210e90c7 stop using \u0026PL_sv_yes as no-op method - Zefram\n#* f2f9e01d8bc23e50f85dd24010773519ca605d2b Emulate some C99 macros and typedefs - Karl Williamson\n#* 0301e899536a22752f40481d8a1d141b7a7dda82 properly define perl_parse() return value - Zefram\n#* d85bc99c9c9a958c5899375414439c680be5e5ac svleak.t: Disable crashing test - Father Chrysostomos\n#* 0165f7b01e9c43629d0c6f4b5eb2e672abeda51a fix doc about filter subroutines' $_[0] - Zefram\n#* f3c710fe342032112ac92fc893f5ef050b4f7024 rewrite \"ref\" documentation for clarity - Zefram\n#* 64def2aeaeb63f92dadc6dfa33486c1d7b311963 perform system() arg processing before fork - Zefram\n#* b2cd5cb1d8b3c8a7a7f033784d5134d2fbd8cad8 Unicode::UCD: max code point is now IV_MAX - Karl Williamson\n#* 8fe3452cc6ac7af8c08c2044cd3757018a9c8887 preserve numericness of system() args on Win32 - Zefram\n#* 8e920bd341e241f50a74dbf8aa343319f204e200 set PERL_EXIT_DESTRUCT_END in all embeddings - Zefram\n#* 483ff77a0144607e2819806f63bec051eed3efb8 Skip failing exit(0) tests on VMS. - Craig A. Berry\n#* 759b442cd504fd04e125d71b981f7092ec3fbea1 t/loc_tools.pl: Add diagnostic output - Karl Williamson\n#* f47d3375897f813737cab9a7ccbc3b404dd73b84 t/op/exec.t: Add missing /i - Karl Williamson\n#* f0fd0980104d50d0db555dcafb3ff329e87cc3c7 tr///: return Size_t count rather than I32 - David Mitchell\n#* 0f3591f94499f7771d7a8e07afb6776a93fc5f9f Follow-up to fd77b29b3be4 - Father Chrysostomos\n#* 47280b208d546ec0bb8c3d14cf015fb8f2665f58 Cache locale UTF8-ness lookups - Karl Williamson\n#* b9a25d155118fddc3a753295697ee5f81c23a0fc vutil.c: White_space only - Karl Williamson\n#* 7a3934240c41fbfc2d9bd119996fc8740d6a6973 locale.c: Replace by function that does the same thing - Karl Williamson\n#* 6a5052ec8da656e5e5ac939ec1bed1dbfff02d00 (perl #127743) fix large object ids in hook sequences - Tony Cook\n#* c0e3b4b51cabf15ed8fc5f564dfeea31c25f5239 (perl #127743) re-work recursion limit handling - Tony Cook\n#* 66b628b3277702a2f289cf559db46f98a6989330 bump $Storable::VERSION to 3.06 - Tony Cook\n#* 1f1dcfb516e063c29a4b9823ad97b1fc58ffc930 ‘Nonelems’ for pushing sparse array on the stack - Father Chrysostomos\n#* 3914756484d43456860eb2b181a29c11ddfe85c0 Correct PathTools dist files and bump to 3.74: - Sawyer X\n#* 16fe3f8a9e2ea46c1f8b8078916520fd6bf0a0b1 move body of pp_concat() to S_do_concat() - David Mitchell\n#* d164443fe7708a332f3408f2a842d986b3148cbb regcomp.c: White space only - Karl Williamson\n#* aa664f48918ef63c2436b3109fee3a49b3ffc592 regcomp.c: Refactor some if-elses - Karl Williamson\n#* 847097976ffcb1acb37db23236cf321e8584bc31 sync-with-cpan: Allow relative dir for tarball - Father Chrysostomos\n#* 5d70f8f9a94124c9e77138d92611f5765f8793ad Carp: Use ${^LAST_FH} if available - Father Chrysostomos\n#* 908f2cb56527d29c9176e478fa7eee0d02a7c77e fix parallel ALL_STATIC Win32 build - Daniel Dragan\n#* 421da25c4318861925129cd1b17263289db3443c utf8.c: Don't dump malformation past first NUL - Karl Williamson\n#* dfaa7b301dd126ac0d0180ca26d6178150a979b9 Regen after backporting and merging - H.Merijn Brand\n#* 202cd98a669eb31ef52b1f7443dbff2683933480 PATCH: [perl #133121] Fix crash in gv_fetchmeth_sv - Sergey Aleynikov","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1520159748,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE1MDI4NjcyNjc="},"added":["blocking"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1523341484,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE1NjUzODAwOTg="},"added":["in progress"],"removed":[]},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535379377,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTgxMDcwNzU2Ng=="},"title":"merge blead for 5.27.3c (5.27.6 - 5.27.11)","was":"merge blead 5.27.6 - 5.28.0"},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535379390,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTgxMDcwODExMQ=="},"title":"merge blead 5.27.6 - 5.27.11","was":"merge blead for 5.27.3c (5.27.6 - 5.27.11)"},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535381778,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTgxMDgwOTE5OQ=="},"title":"merge blead 5.27.6 - 5.28.0","was":"merge blead 5.27.6 - 5.27.11"},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535901407,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNzkzNzg0Nw==","github-url":"https://github.com/perl11/cperl/issues/356#issuecomment-417937847"},"message":"Done. Just need to add the full updated list of rejections here","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535980420,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE4MjM0OTU2Mjk="},"added":["ready"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535980420,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MTgyMzQ5NTYzMQ=="},"added":[],"removed":["blocking"]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1535980420,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MTgyMzQ5NTYzNQ=="},"added":[],"removed":["in progress"]},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1536146481,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTgyNzU2MTA2OA=="},"status":2},{"type":5,"author":{"id":"a6026d259a21a8f3b83ee59000b0e750c0641e38"},"timestamp":1536146484,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MTgyNzU2MTE0OQ=="},"added":[],"removed":["ready"]}]}