{"version":1,"ops":[{"type":1,"author":{"id":"81b853802ee58295b1b56dc1253b74e7b177b9de"},"timestamp":1450572672,"metadata":{"github-id":"MDU6SXNzdWUxMjMxMjEzNzE=","github-url":"https://github.com/perl11/cperl/issues/93","origin":"github"},"title":"XS Config on CPAN release","message":"I sort of have a working XS Config on P5P perl, some parts of it are now in https://github.com/perl11/cperl/commit/7890769b9422d5913e8ae039f775ea4688b6563c . \"make test\" passes on my private temporary repo on P5P blead 5.23 perl. My private repo built and most tests passed on P5P 5.8.9, the test fails on 5.8.9 is due to old modules and test.pl and nothing to do with XS Config (XSConfig.t passes).\n\nThis brings up some logistics of publishing XS Config on PAUSE in a tarball.\n\n1st. I propose that XS Config's PAUSE package will be XSConfig, a root package name, the \"Config\" package will be hidden from PAUSE to prevent \"unauthorized release\" problems, since \"Config\" package is owned by P5P on PAUSE. XSConfig package will have nothing subs or vars inside of it, it is solely so \"cpan install XSConfig\" works.\n\n2nd Who will have firstcome and comaint on XSConfig in PAUSE? It obviously is bulk88 and rurban, but in what order? More logically you should be owner/first come so you can appoint other cpanel employees if needed, but I will probably be the first one to upload the very first XS Config tarball, unless I email you the tarball and you do the very first uploaded to get firstcome/owner in PAUSE and shortly after comaint me.\n\n3rd Will XS Config have its own perl11 repo, or not? Where will these things live, its README, expanded/CPAN specific .gitignore, CPAN specific MANIFEST,  CPAN specific Changes file, CPAN specific test.pl (the test.pl in cperl is not 5.8.9 compatible due to this commit https://github.com/perl11/cperl/commit/aaa63daea7f8ece57d84d8329754f95ea107301e so XS Config on CPAN needs a custom test.pl file), and a direct copy of https://github.com/perl11/cperl/blob/master/regen/regen_lib.pl  (regen_lib.pl can be copied from cperl source code tree with a modified \"make dist\") ? \nThe choices are, everything lives in cperl repo, cperl repo and xs config repo, xs config repo only (moves from /ext to /cpan in cperl), cperl repo and other stuff lives only in the tarball no VCS for README and Changes.\n\nI'd prefer to keep as many files as possible outside of the cperl repo for a smaller cperl tarball/faster clone/checkout/git operations/CI. ext/Config/Config_xs_heavy.pl.PL and ext/Config/Config_mini.pl.PL are never executed during an \"in core\" build.\n\n4th What will be the version number of XS Config for tarball name purpose? 0.01 or 0.001 or 5.022002? The XS Loading Config.pm part of XS Config in cperl right now has 5.022002 as a version number. I am not sure that having a sane $VERSION even makes any sense for a non-upgradable module like Config.pm, I'm fine to leave the XS Config's version number be the cperl version it was extracted out of, plus an alpha number or 4th numerical part after 002 if XS Config is released more often than cperl, so the first release would be 5.022002001 then the 2nd release would be 5.022002002. $VERSION could also be 0.01 and then going up.\n\nNote to self, benchmark PP Config vs XS Config and put the results in the readme/some tarball document so potential users can read it.\n\nMy design for XS Config on CPAN is that it installs into /site like all user installed modules. If the user deletes his /site, he gets back the original PP Config. Overwriting the original Config.pm from a CPAN tarball isn't nice and might break the build if system wide perl is RO and the user is using local::lib or something.","files":null}]}