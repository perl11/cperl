{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1606556675,"metadata":{"github-id":"MDU6SXNzdWU3NTI2Mzc3NTA=","github-url":"https://github.com/perl11/cperl/issues/428","origin":"github"},"title":"Replace the extremely poor drand48 with a proper one","message":"Note that the perl5 design choices for drand48() are extremely poor. (but not entirely unexpected from p5p).\n\n1st: Taking the primitive freebsd rand48() they use ldexp(.., -48)\n       to limit the result to 48 bits, not the much faster bitmasking.\n      The FreeBSD original is sane here.\n \n 2nd: Masking to 48 bits not 53 makes creating uniform double values much harder.\n       Normally you would create 64-bit numbers as with every other rng. Then\n       you have proper int ranges as well as double.\n\nUse a good one instead, which works on 32bit and 64bit systems, \nproducing full range ints and doubles, ~10x faster. e.g wyrand. \nSee https://rurban.github.io/dieharder/QUALITY.html","files":null}]}