{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1500499414,"metadata":{"github-id":"MDU6SXNzdWUyNDQxNzg1NzM=","github-url":"https://github.com/perl11/cperl/issues/308","origin":"github"},"title":"Handle AMT overload caching with classes","message":"fix handling readonly packages, aka classes.\nAllow AMT (overload) cache updates.\n\n`class XX{method m{\"ok $self\"}} XX-\u003enew-\u003em`\nfails with \"Modification of a read-only value attempted\" on the class.\n\nThe string concat looked in the class XX for an overload for the concat \".\" op,\nand failed with no_modify on the class, when trying to update the AMT in the class.\n\nWith classes just skip the AMT caching, as the `@ISA` is also closed, and nobody can change the overloading at run-time.\nWith packages allow such updates of readonly stashes.\n\nFor classes add `Mu` to the lookup chain of overloaded methods. Currently it displays only class -\u003e UNIVERSAL. It needs to be class -\u003e `@ISA` -\u003e Mu -\u003e UNIVERSAL. - Turns out it does already. `-Do` just didn't display ISA walks, just the start of the walk. I've added a -Dov to display the `@ISA` list method lookups also.\n\nAllow many internal method searches in classes, best by using the new hv_fetch*_ifexists() macros\nand a GV_CLASS flag to bypass restrictedness on such stashes.\nE.g. looking for `@ISA`, `AUTOLOAD`, UNIVERSAL, SUPER, mro search.","files":null}]}