{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1495519289,"metadata":{"github-id":"MDU6SXNzdWUyMzA1OTU2MzE=","github-url":"https://github.com/perl11/cperl/issues/291","origin":"github"},"title":"Resolve core attribute arguments, runtime setters, safely","message":"Some builtin attributes will need to resolve symbolnames `:native($libname)` at run-time, not only constants at parse-time. Users might want the same, as for users the import call gets the string also verbatim, which has to call eval on it.\n\nThis was why Attribute::Handlers was added, but this is bad practice, unsafe and should not be used. Esp. not for core builtins, and there's still no way set CV properties at run-time, such as `native \u003c=\u003e dl_load_file(CvFFILIB(cv))` or `CvXSUB  = dl_find_symbol(:symbol($name))`.\nSo we need a way to set those CV properties. \nFor strings maybe the UTF8 status or FLAGS. Or ENCODING, if we add that.\n\nOriginally perl added an op, such as `prototype(cvref|name)`. This does not scale for more properties. It would need new keywords `native` and `symbol` for the ffi. No.\n\n*apply_attrs()* creates the following: `attributes-\u003eimport(stash, sv, args)`, which we should use\nto do `attributes-\u003eimport(__PACKAGE__, \\\u0026cv, \"native\", $libname);`\nattributes.pm/xsutils would then be extended to understand it. We only need to defer the load_module call to run-time.\n\nWe could also add a MODIFY_CODE_ATTRIBUTES handler to core to catch these new attributes.\nBut these work only on package names, not types, and we would only add it for `main::`. Which would make it hard for other packages. So it's a very bad idea.\n\nBetter would be generic introspection, as in a proper language or perl6. i.e. treat a CVREF as object with access to all fields. autobox alike.\nThe setter would be a lvalue method then: `\\\u0026mysql_ffi_fetch-\u003eNATIVE = \"mysqlclient.6.so\";`\nUse with via the cvref or via the GV slot:\n`*mysql_ffi_fetch{CODE}-\u003eNATIVE = \"mysqlclient.6.so\";`\n`*mysql_ffi_fetch{CODE}-\u003eSYMBOL = \"mysql_fetch\";`\nThe 1st cvref method syntax-errors with `Can't modify reference to subroutine entry in list assignment`, the 2nd GV method errors with `Can't call method \"NATIVE\" on unblessed reference` at run-time.\n\nWe need it only for the internal setter at run-time, it doesn't even need to be parsed. Though it would be beneficial to do so, if not as keyword/op.\n\nThis will be fixed with the ffi merge.","files":null}]}