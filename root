{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1489504295,"metadata":{"github-id":"MDU6SXNzdWUyMTQxMDM5MjI=","github-url":"https://github.com/perl11/cperl/issues/261","origin":"github"},"title":"Add S06 macros","message":"Use the existing perl6 [S06 synopsis](https://design.perl6.org/S06.html#Macros) and [testcases](https://github.com/perl6/roast/tree/master/S06-macros).  _\"In the absence of\na signature to the contrary, a macro is called as if it were a method\non the current match object returned from the grammar rule being\nreduced; that is, all the current parse information is available by\ntreating `$self` as if it were a `$/` object.  Macros may return\neither a string to be reparsed, or a syntax tree that needs no further\nparsing.\"_\n\nChange the syntax a little bit to harmonize with perl5:\n\n    {{{ }}} =\u003e `` for unquote splicing.\n\nExpand the ast inside the backticks at compile-time as a subprocess\nwould be expanded with its result. Use `qx()` for subprocesses instead.\n\n    macro infix:\u003cname\u003e () =\u003e macro 'name' :infix ()\n\nI.e. Allow optional single-quoted names for non-identifiers, such as `'!!' :postfix`.\nUse perl5 attributes as perl6 operator overloaders to tell macros if they have\nnon-standard position: infix, prefix, postfix, circumfix, postcircumfix.\n\nDon't support the quasi attributes `:ast/:lang/:unquote`, other than `:COMPILING`.\nSupport the `COMPILING::` pseudo-package for namespace clarification, but not the import syntax `COMPILING\u003c$x\u003e`. The fullname is good and magic enough.\n\nSee the `feature/gh261-macros` branch.","files":null}]}