{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1508697528,"metadata":{"github-id":"MDU6SXNzdWUyNjc0ODgwMzQ=","github-url":"https://github.com/perl11/cperl/issues/336","origin":"github"},"title":"add Internals::gc()","message":"Scan the arenas and free empty ones.\n\nThe heads (PL_arenaroot), the bodies (PL_body_arenas and the PL_body_roots[type] free-list),\nThe opslab's (CvSTART of all CVs) and ops are correctly freed via cv_undef, see -DS.\nCheck on del_SV if an arena is free, and free its memory then.\nAdd a `malloc_trim(0)` call to actually force `free()` to return memory pages to return to the OS, so that the rss is improved. glibc only.\n\nFurthermore check the implementation of the free-list (body_roots), which seems to support only one (just a ptr, not a linked list as the adesc-\u003earena or HE chain), and check for a free arena on del_SV.\nSimilarily the obslab impl. also has an OP overhead of 2 ptrs (next and slab owner), whilst it could be easier implemented as sized arenas as with the body roots. \nThe SV arenas should really be simplified to allocate into one sized arena slot, (no seperation of head and body) but this would make upgrades with references harder, and we don't have small forwards.\n\nFor now see `feature/gh336-gc`, destruction became unstable with it.","files":null}]}