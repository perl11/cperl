{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465468272,"metadata":{"github-id":"MDU6SXNzdWUxNTkzNzYwMzQ=","github-url":"https://github.com/perl11/cperl/issues/156","origin":"github"},"title":"Specialized type calculations","message":"Better specialization for ops which can return multiple types, but where the result type is known at compile-time.\n\ne.g. rv2av in scalar context returns UInt.\nbut int can return a NV (which is just rounded).\n\n`int(2*@ARGV)` =\u003e `const_iv *ARGV rv2av[s] multiply int`\ncan be optimized to `const_iv *ARGV rv2av[s] i_multiply`\n\nTypical examples are also cond ops (if branches, ?: cases), and many more.","files":null}]}