{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1473838472,"metadata":{"github-id":"MDU6SXNzdWUxNzY4MzU3ODQ=","github-url":"https://github.com/perl11/cperl/issues/199","origin":"github"},"title":"new warnings 'security'","message":"Detect, log and in some cases even protect against known and uniquely identifiable security incidents, similar to taint violations.\n\nadd `warn_security()` API to collect the additional info.\nprint \"SECURITY: hash flood from apache@129.2.0.1 in /usr/bla\" to STDERR \nand maybe even to syslog. default: on. turn it off via `no warnings 'security';`\nthis warning is not hookable via `$SIG{__WARN__}`.\nlog the REMOTE_ADDR, username, full process path. maybe for local user the ssh connection.\n\nWhich are:\n- ✓ hash flood `if (collisions++ \u003e 128): warn_security(\"Hash flood\"); if (collisions % 8 == 0) sleep(2)`\n-  ✓ warning 'syscalls' (binary \\0 in calls to the C api: filenames, usernames, ...)\n- ✓ check if known Storable or YAML attacks with objects are uniquely detectable. maybe just the CVE/metasploit example or the \"Corrupted storable ...\" warnings. (_Storable done. no known YAML attack in the wild yet_)\n- ✓ metasploit reverse/bind shell payload (check -e)\n- ✓ CVE-2012-1823 payload from phpcgi (check -e)\n\nthe warning can be fatalized. problem is how to merge with syscalls.\nno warnings 'security' should also turn off 'syscalls'? \nreport twice? once with the old template and once with the new with more info? best is to use the more severe active template. so no warnings 'syscalls' does nothing, as 'security' is still in effect? bad for backcompat. \nThe solution is to first check for 'security', else for 'syscalls'. Turning off 'syscalls' or 'io' will not turn off 'security'.\n\nThe REMOTE_ADDR can be used to block it, similar to ssh, login failure or ping flood protection: fail2ban, ...\n\nSince most DoS attacks are not recognizable in the perl vm, this new warning can be used on the application layer also. So far done in Storable only. \nE.g. a Layer 7 DoS: HTTP POST, Slowloris, ... in the Socket modules. https://www.owasp.org/images/4/43/Layer_7_DDOS.pdf\nhttps://github.com/proactiveRISK/ddos-toolbox/\n\nNotes:\n- with `use re 'taint'` and `s/(.*)/$1/` $1 is already tainted.\n- CVE 2016-1531 exim via PERL5OPT=-d PERL5DB='exec \"/bin/sh\"' ? \n  see https://www.exploit-db.com/exploits/39535/\n  This is a problem with setuid executables running perl_init as root without -T (exim), but not detectable by perl itself. e.g.\n\n```\nPERL5OPT=-d PERL5DB='exec \"whoami\"' ./perl -e0\nusername\nPERL5OPT=-d PERL5DB='exec \"whoami\"' ./perl -T -e0\n```","files":null}]}