{"version":1,"ops":[{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177279,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzNTQ0MTI2MQ==","github-url":"https://github.com/perl11/cperl/issues/387#issuecomment-435441261"},"message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nThe example looks poor, when it can be taken for a named param, will fix that. It's just a list of 2 args, bar and \"baz\".","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177279,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzMTIyMA=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177653,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzMzAyNw=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar? Need to check.\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string here.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177690,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzMzI0NQ=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string here. Weird\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177931,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNDQxNg=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string here. Weird. Any bareword is accepted, not just a known field. \n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178068,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNTA4OA=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178088,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNTIwMg=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent. Not only method specific, but for all subs.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178105,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNTI2OA=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent. Not only method specific, but for all subs. Almost like PHP\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178141,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNTQ2OA=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent. Not only method specific, but for all subs. Almost like PHP. Only caught with use strict.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178623,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzUzNzkwOQ=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent. Not only method specific, but for all subs. Almost like PHP. Only caught with use strict.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time. But given that's a MOP call (Mu::new) it's more like a limitations. Will fix that.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541233742,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0NzY5NTg1Nw=="},"target":"b2824cfcb028005462a8ca7d9acc75ae2316d4dcd6ae9116b82ddafd54fd6f6a","message":"No, cperl does not have support for named params yet, sorry. It's on my todo list, but not high prio.\n\nWhy does it return bar?\nWith `my $foo = Foo-\u003enew( 1 )` it returns 1. \nLooks like the bar argument is converted to a bareword string. Any bareword is accepted, not just a known field. \n\n    perl -Dxto -e'sub Foo::new {1} ; new Foo( xxx );'\nSo that's that. Certainly weird, but consistent. Not only method specific, but for all subs. Almost like PHP. Only caught with use strict.\n\nWhy did it pass the typechecker? A bug! Thanks. Should have been caught even at compile-time. But given that's a MOP call (Mu::new) it's more like a limitation.  At least a runtime typecheck should have caught that. Will fix both cases.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177658,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE5NDM0MzI4NTE="},"added":["bug"],"removed":[]},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541177802,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTk0MzQzNzUxOA=="},"title":"method arg converted to bareword, not typechecked","was":"Mu::new fields (args) not typechecked"},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1541178575,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTk0MzQ2MTA2Nw=="},"title":"Mu::new fields (args) not typechecked","was":"method arg converted to bareword, not typechecked"},{"type":3,"author":{"id":"8b0b18bc7c9b2859775d443c6cbe868ad90ec4a1"},"timestamp":1541184458,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzNTQ3Mzg1NA==","github-url":"https://github.com/perl11/cperl/issues/387#issuecomment-435473854"},"message":"Thanks for explanation!","files":null},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1561711694,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUwNjY1NjgyNA==","github-url":"https://github.com/perl11/cperl/issues/387#issuecomment-506656824"},"message":"I implemented now the run-time typecheck for Mu-\u003enew and pp_signature (all pure-perl calls), but found out that role composition (class does) does not fixup the stash of the new methods/roles yet. The typechecker found this bug. See branch `bugfix/gh387-typecheck-munew`","files":null},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1561979824,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjQ1MDg2MzUxMQ=="},"status":2}]}