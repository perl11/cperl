{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1451232739,"metadata":{"github-id":"MDU6SXNzdWUxMjM5ODQ4Mjc=","github-url":"https://github.com/perl11/cperl/issues/100","origin":"github"},"title":"non-destructive boolean defined op","message":"defined and other boolean ops should not create the intermediate gv and stashes.\n\ncases:\n- gvsv(sv) -\u003e defined\n- gv -\u003e rv2gv -\u003e defined\n- gv -\u003e rv2cv -\u003e defined\n\nrv2sv and rv2gv already have such logic, by setting OPf_SPECIAL, but we want\nif for all boolean ops: defined, or, and, filetests, ...\n\ne.g.\n\n```\nexists $main::xx::{xy}; #=\u003e 0\ndefined $xx::xy::x;     #=\u003e 0\nexists $main::xx::{xy}; #=\u003e 1\n```\n\neasily adjustable in rpeep to not use GV_ADD in gvsv with the private gvsv bit OPpDONT_INIT_GV,\nusing GvSV instead of GvSVn\n\nbut the problem is ck_rvconst, which created this gv already too early, where we didn't see the next op already.","files":null}]}