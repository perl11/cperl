{"version":1,"ops":[{"type":1,"author":{"id":"fd6229879c5dede6d2c352fa76a0837cf9d6a32a"},"timestamp":1514662889,"metadata":{"github-id":"MDU6SXNzdWUyODUyMjAxNjQ=","github-url":"https://github.com/perl11/cperl/issues/353","origin":"github"},"title":"Attribute::Handlers vs. return types","message":"While building a distribution that uses Test::Class I noticed that \"()\" needs to be appended to attribute names as soon as there is a namespace of the same name. I am going to send a patch to the Test::Class author unless cperl can easily be changed to handle such cases unambiguously. \n\nIf the line \"package Test::Whatever\" is removed from the below example, both \"first_test\" and \"second_test\" are output. Otherwise, cperl 5.27 only outputs \"second_test\".\n\n```perl\n# From the Attribute::Handlers documentation:\n#\n#  sub Omni : ATTR {\n#  [...]\n#  But beware that this syntax is very fragile in cperl, where\n#  it clashes with the declaration of a return type.\n\n# If both Test and Test::Whatever are commented, \"first_test\" is output.\n#package Test;\npackage Test::Whatever;\n\npackage MyClass;\n\nuse Attribute::Handlers;\n\nsub Test : ATTR(CODE) {\n    my ($class, $symbol, $code_ref, $attr, $args) = @_;\n    my $name = *{$symbol}{NAME};\n    print STDERR \"symbol: $name\\n\";\n}\n\nsub first_test : Test {\n}\n\nsub second_test : Test() {\n}\n```","files":null}]}