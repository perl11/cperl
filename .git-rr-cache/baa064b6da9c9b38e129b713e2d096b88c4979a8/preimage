/* ex: set ro ft=c: -*- buffer-read-only: t -*-
 *
 *    opcode.h
 *
 *    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
 *    2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
 *    2014, 2015 by Larry Wall and others
 *
 *    You may distribute under the terms of either the GNU General Public
 *    License or the Artistic License, as specified in the README file.
 *
 * !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
 * This file is built by regen/opcode.pl from its data.
 * Any changes made here will be lost!
 */

#ifndef PERL_GLOBAL_STRUCT_INIT

#define Perl_pp_scalar Perl_pp_null
#define Perl_pp_padany Perl_unimplemented_op
#define Perl_pp_regcmaybe Perl_pp_null
#define Perl_pp_transr Perl_pp_trans
#define Perl_pp_chomp Perl_pp_chop
#define Perl_pp_schomp Perl_pp_schop
#define Perl_pp_i_preinc Perl_pp_preinc
#define Perl_pp_predec Perl_pp_preinc
#define Perl_pp_i_predec Perl_pp_preinc
#define Perl_pp_i_postinc Perl_pp_postinc
#define Perl_pp_postdec Perl_pp_postinc
#define Perl_pp_i_postdec Perl_pp_postinc
#define Perl_pp_slt Perl_pp_sle
#define Perl_pp_sgt Perl_pp_sle
#define Perl_pp_sge Perl_pp_sle
#define Perl_pp_bit_xor Perl_pp_bit_or
#define Perl_pp_nbit_xor Perl_pp_nbit_or
#define Perl_pp_sbit_xor Perl_pp_sbit_or
#define Perl_pp_cos Perl_pp_sin
#define Perl_pp_exp Perl_pp_sin
#define Perl_pp_log Perl_pp_sin
#define Perl_pp_sqrt Perl_pp_sin
#define Perl_pp_hex Perl_pp_oct
#define Perl_pp_int_postinc Perl_pp_int_preinc
#define Perl_pp_int_postdec Perl_pp_int_predec
#define Perl_pp_rindex Perl_pp_index
#define Perl_pp_lcfirst Perl_pp_ucfirst
#define Perl_pp_aelemfast_lex Perl_pp_aelemfast
#define Perl_pp_n_aelem Perl_pp_i_aelem
#define Perl_pp_num_aelem Perl_pp_int_aelem
#define Perl_pp_s_aelem Perl_pp_i_aelem
#define Perl_pp_str_aelem Perl_pp_int_aelem
#define Perl_pp_avalues Perl_pp_akeys
#define Perl_pp_values Perl_do_kv
#define Perl_pp_keys Perl_do_kv
#define Perl_pp_rv2hv Perl_pp_rv2av
#define Perl_pp_pop Perl_pp_shift
#define Perl_pp_mapstart Perl_pp_grepstart
#define Perl_pp_dor Perl_pp_defined
#define Perl_pp_andassign Perl_pp_and
#define Perl_pp_orassign Perl_pp_or
#define Perl_pp_dorassign Perl_pp_defined
#define Perl_pp_lineseq Perl_pp_null
#define Perl_pp_scope Perl_pp_null
#define Perl_pp_dump Perl_pp_goto
#define Perl_pp_dbmclose Perl_pp_untie
#define Perl_pp_read Perl_pp_sysread
#define Perl_pp_say Perl_pp_print
#define Perl_pp_seek Perl_pp_sysseek
#define Perl_pp_fcntl Perl_pp_ioctl
#ifdef HAS_SOCKET
#define Perl_pp_send Perl_pp_syswrite
#define Perl_pp_recv Perl_pp_sysread
#else
#define Perl_pp_send Perl_unimplemented_op
#define Perl_pp_recv Perl_unimplemented_op
#define Perl_pp_socket Perl_unimplemented_op
#endif
#ifdef HAS_SOCKET
#define Perl_pp_connect Perl_pp_bind
#define Perl_pp_gsockopt Perl_pp_ssockopt
#define Perl_pp_getsockname Perl_pp_getpeername
#else
#define Perl_pp_bind Perl_unimplemented_op
#define Perl_pp_connect Perl_unimplemented_op
#define Perl_pp_listen Perl_unimplemented_op
#define Perl_pp_accept Perl_unimplemented_op
#define Perl_pp_shutdown Perl_unimplemented_op
#define Perl_pp_gsockopt Perl_unimplemented_op
#define Perl_pp_ssockopt Perl_unimplemented_op
#define Perl_pp_getsockname Perl_unimplemented_op
#define Perl_pp_getpeername Perl_unimplemented_op
#endif
#define Perl_pp_lstat Perl_pp_stat
#define Perl_pp_ftrwrite Perl_pp_ftrread
#define Perl_pp_ftrexec Perl_pp_ftrread
#define Perl_pp_fteread Perl_pp_ftrread
#define Perl_pp_ftewrite Perl_pp_ftrread
#define Perl_pp_fteexec Perl_pp_ftrread
#define Perl_pp_ftsize Perl_pp_ftis
#define Perl_pp_ftmtime Perl_pp_ftis
#define Perl_pp_ftatime Perl_pp_ftis
#define Perl_pp_ftctime Perl_pp_ftis
#define Perl_pp_fteowned Perl_pp_ftrowned
#define Perl_pp_ftzero Perl_pp_ftrowned
#define Perl_pp_ftsock Perl_pp_ftrowned
#define Perl_pp_ftchr Perl_pp_ftrowned
#define Perl_pp_ftblk Perl_pp_ftrowned
#define Perl_pp_ftfile Perl_pp_ftrowned
#define Perl_pp_ftdir Perl_pp_ftrowned
#define Perl_pp_ftpipe Perl_pp_ftrowned
#define Perl_pp_ftsuid Perl_pp_ftrowned
#define Perl_pp_ftsgid Perl_pp_ftrowned
#define Perl_pp_ftsvtx Perl_pp_ftrowned
#define Perl_pp_ftbinary Perl_pp_fttext
#define Perl_pp_unlink Perl_pp_chown
#define Perl_pp_chmod Perl_pp_chown
#define Perl_pp_utime Perl_pp_chown
#define Perl_pp_symlink Perl_pp_link
#define Perl_pp_kill Perl_pp_chown
#define Perl_pp_localtime Perl_pp_gmtime
#define Perl_pp_shmget Perl_pp_semget
#define Perl_pp_shmctl Perl_pp_semctl
#define Perl_pp_shmread Perl_pp_shmwrite
#define Perl_pp_msgget Perl_pp_semget
#define Perl_pp_msgctl Perl_pp_semctl
#define Perl_pp_msgsnd Perl_pp_shmwrite
#define Perl_pp_msgrcv Perl_pp_shmwrite
#define Perl_pp_semop Perl_pp_shmwrite
#define Perl_pp_dofile Perl_pp_require
#define Perl_pp_ghbyname Perl_pp_ghostent
#define Perl_pp_ghbyaddr Perl_pp_ghostent
#define Perl_pp_gnbyname Perl_pp_gnetent
#define Perl_pp_gnbyaddr Perl_pp_gnetent
#define Perl_pp_gpbyname Perl_pp_gprotoent
#define Perl_pp_gpbynumber Perl_pp_gprotoent
#define Perl_pp_gsbyname Perl_pp_gservent
#define Perl_pp_gsbyport Perl_pp_gservent
#define Perl_pp_snetent Perl_pp_shostent
#define Perl_pp_sprotoent Perl_pp_shostent
#define Perl_pp_sservent Perl_pp_shostent
#define Perl_pp_enetent Perl_pp_ehostent
#define Perl_pp_eprotoent Perl_pp_ehostent
#define Perl_pp_eservent Perl_pp_ehostent
#define Perl_pp_gpwnam Perl_pp_gpwent
#define Perl_pp_gpwuid Perl_pp_gpwent
#define Perl_pp_spwent Perl_pp_ehostent
#define Perl_pp_epwent Perl_pp_ehostent
#define Perl_pp_ggrnam Perl_pp_ggrent
#define Perl_pp_ggrgid Perl_pp_ggrent
#define Perl_pp_sgrent Perl_pp_ehostent
#define Perl_pp_egrent Perl_pp_ehostent
#define Perl_pp_custom Perl_unimplemented_op
#define Perl_pp_reach Perl_pp_rkeys
#define Perl_pp_rvalues Perl_pp_rkeys
START_EXTERN_C

#ifndef DOINIT
EXTCONST char* const PL_op_name[];
#else
EXTCONST char* const PL_op_name[] = {
	"null",	/* 0: null operation */
	"stub",	/* 1: stub */
	"scalar",	/* 2: scalar */
	"pushmark",	/* 3: pushmark */
	"wantarray",	/* 4: wantarray */
	"const",	/* 5: constant item */
	"gvsv",	/* 6: scalar variable */
	"gv",	/* 7: glob value */
	"gelem",	/* 8: glob elem */
	"padsv",	/* 9: private variable */
	"padav",	/* 10: private array */
	"padhv",	/* 11: private hash */
	"padany",	/* 12: private value */
	"pushre",	/* 13: push regexp */
	"rv2gv",	/* 14: ref-to-glob cast */
	"rv2sv",	/* 15: scalar dereference */
	"av2arylen",	/* 16: array length */
	"rv2cv",	/* 17: subroutine dereference */
	"anoncode",	/* 18: anonymous subroutine */
	"prototype",	/* 19: subroutine prototype */
	"refgen",	/* 20: reference constructor */
	"srefgen",	/* 21: single ref constructor */
	"ref",	/* 22: reference-type operator */
	"bless",	/* 23: bless */
	"backtick",	/* 24: quoted execution (``, qx) */
	"glob",	/* 25: glob */
	"readline",	/* 26: <HANDLE> */
	"rcatline",	/* 27: append I/O operator */
	"regcmaybe",	/* 28: regexp internal guard */
	"regcreset",	/* 29: regexp internal reset */
	"regcomp",	/* 30: regexp compilation */
	"match",	/* 31: pattern match (m//) */
	"qr",	/* 32: pattern quote (qr//) */
	"subst",	/* 33: substitution (s///) */
	"substcont",	/* 34: substitution iterator */
	"trans",	/* 35: transliteration (tr///) */
	"transr",	/* 36: transliteration (tr///) */
	"sassign",	/* 37: scalar assignment */
	"aassign",	/* 38: list assignment */
	"chop",	/* 39: chop */
	"schop",	/* 40: scalar chop */
	"chomp",	/* 41: chomp */
	"schomp",	/* 42: scalar chomp */
	"defined",	/* 43: defined operator */
	"undef",	/* 44: undef operator */
	"study",	/* 45: study */
	"pos",	/* 46: match position */
	"preinc",	/* 47: preincrement (++) */
	"i_preinc",	/* 48: integer preincrement (++) */
	"predec",	/* 49: predecrement (--) */
	"i_predec",	/* 50: integer predecrement (--) */
	"postinc",	/* 51: postincrement (++) */
	"i_postinc",	/* 52: integer postincrement (++) */
	"postdec",	/* 53: postdecrement (--) */
	"i_postdec",	/* 54: integer postdecrement (--) */
	"pow",	/* 55: exponentiation (**) */
	"multiply",	/* 56: multiplication (*) */
	"i_multiply",	/* 57: integer multiplication (*) */
	"divide",	/* 58: division (/) */
	"i_divide",	/* 59: integer division (/) */
	"modulo",	/* 60: modulus (%) */
	"i_modulo",	/* 61: integer modulus (%) */
	"repeat",	/* 62: repeat (x) */
	"add",	/* 63: addition (+) */
	"i_add",	/* 64: integer addition (+) */
	"subtract",	/* 65: subtraction (-) */
	"i_subtract",	/* 66: integer subtraction (-) */
	"concat",	/* 67: concatenation (.) or string */
	"stringify",	/* 68: string */
	"left_shift",	/* 69: left bitshift (<<) */
	"right_shift",	/* 70: right bitshift (>>) */
	"lt",	/* 71: numeric lt (<) */
	"i_lt",	/* 72: integer lt (<) */
	"gt",	/* 73: numeric gt (>) */
	"i_gt",	/* 74: integer gt (>) */
	"le",	/* 75: numeric le (<=) */
	"i_le",	/* 76: integer le (<=) */
	"ge",	/* 77: numeric ge (>=) */
	"i_ge",	/* 78: integer ge (>=) */
	"eq",	/* 79: numeric eq (==) */
	"i_eq",	/* 80: integer eq (==) */
	"ne",	/* 81: numeric ne (!=) */
	"i_ne",	/* 82: integer ne (!=) */
	"ncmp",	/* 83: numeric comparison (<=>) */
	"i_ncmp",	/* 84: integer comparison (<=>) */
	"slt",	/* 85: string lt */
	"sgt",	/* 86: string gt */
	"sle",	/* 87: string le */
	"sge",	/* 88: string ge */
	"seq",	/* 89: string eq */
	"sne",	/* 90: string ne */
	"scmp",	/* 91: string comparison (cmp) */
	"bit_and",	/* 92: bitwise and (&) */
	"bit_xor",	/* 93: bitwise xor (^) */
	"bit_or",	/* 94: bitwise or (|) */
	"nbit_and",	/* 95: numeric bitiwse and (&) */
	"nbit_xor",	/* 96: numeric bitwise xor (^) */
	"nbit_or",	/* 97: numeric bitwise or (|) */
	"sbit_and",	/* 98: string bitiwse and (&) */
	"sbit_xor",	/* 99: string bitwise xor (^) */
	"sbit_or",	/* 100: string bitwise or (|) */
	"negate",	/* 101: negation (-) */
	"i_negate",	/* 102: integer negation (-) */
	"not",	/* 103: not */
	"complement",	/* 104: 1's complement (~) */
	"ncomplement",	/* 105: numeric 1's complement (~) */
	"scomplement",	/* 106: string 1's complement (~) */
	"smartmatch",	/* 107: smart match */
	"atan2",	/* 108: atan2 */
	"sin",	/* 109: sin */
	"cos",	/* 110: cos */
	"rand",	/* 111: rand */
	"srand",	/* 112: srand */
	"exp",	/* 113: exp */
	"log",	/* 114: log */
	"sqrt",	/* 115: sqrt */
	"int",	/* 116: int */
	"hex",	/* 117: hex */
	"oct",	/* 118: oct */
	"abs",	/* 119: abs */
	"box_int",	/* 120: box int to IV */
	"box_uint",	/* 121: box uint to UV */
	"box_str",	/* 122: box ASCIIZ string to PV */
	"box_num",	/* 123: box double to NV */
	"unbox_int",	/* 124: unbox IV to int */
	"unbox_uint",	/* 125: unbox IV/UV to uint */
	"unbox_str",	/* 126: unbox PV to ASCIIZ */
	"unbox_num",	/* 127: unbox NV to double */
	"uint_lshift",	/* 128: unboxed left bitshift (<<) */
	"uint_rshift",	/* 129: unboxed right bitshift (>>) */
	"int_preinc",	/* 130: unboxed preincrement (++) */
	"int_predec",	/* 131: unboxed predecrement (--) */
	"int_postinc",	/* 132: unboxed postincrement (++) */
	"int_postdec",	/* 133: unboxed postdecrement (--) */
	"int_add",	/* 134: unboxed addition (+) */
	"int_subtract",	/* 135: unboxed subtraction (-) */
	"int_multiply",	/* 136: unboxed multiplication (*) */
	"int_divide",	/* 137: unboxed division (/) */
	"int_modulo",	/* 138: unboxed modulus (%) */
	"int_negate",	/* 139: unboxed negation (-) */
	"int_not",	/* 140: unboxed integer not */
	"int_complement",	/* 141: unboxed 1's complement (~) */
	"int_abs",	/* 142: unboxed abs */
	"int_lt",	/* 143: unboxed integer lt (<) */
	"int_gt",	/* 144: unboxed integer gt (>) */
	"int_le",	/* 145: unboxed integer le (<=) */
	"int_ge",	/* 146: unboxed integer ge (>=) */
	"int_eq",	/* 147: unboxed integer eq (==) */
	"int_ne",	/* 148: unboxed integer ne (!=) */
	"num_add",	/* 149: unboxed num addition (+) */
	"num_subtract",	/* 150: unboxed num subtraction (-) */
	"num_multiply",	/* 151: unboxed num multiplication (*) */
	"num_divide",	/* 152: unboxed num division (/) */
	"num_atan2",	/* 153: unboxed num atan2 */
	"num_sin",	/* 154: unboxed num sin */
	"num_cos",	/* 155: unboxed num cos */
	"num_exp",	/* 156: unboxed num exp */
	"num_log",	/* 157: unboxed num log */
	"num_sqrt",	/* 158: unboxed num sqrt */
<<<<<<<
	"length",	/* 159: length */
	"substr",	/* 160: substr */
	"vec",	/* 161: vec */
	"index",	/* 162: index */
	"rindex",	/* 163: rindex */
	"sprintf",	/* 164: sprintf */
	"formline",	/* 165: formline */
	"ord",	/* 166: ord */
	"chr",	/* 167: chr */
	"crypt",	/* 168: crypt */
	"ucfirst",	/* 169: ucfirst */
	"lcfirst",	/* 170: lcfirst */
	"uc",	/* 171: uc */
	"lc",	/* 172: lc */
	"quotemeta",	/* 173: quotemeta */
	"rv2av",	/* 174: array dereference */
	"aelemfast",	/* 175: constant array element */
	"aelemfast_lex",	/* 176: constant lexical array element */
	"aelem",	/* 177: array element */
	"i_aelem",	/* 178: int array element */
	"int_aelem",	/* 179: unboxed int array element */
	"n_aelem",	/* 180: num array element */
	"num_aelem",	/* 181: unboxed num array element */
	"s_aelem",	/* 182: str array element */
	"str_aelem",	/* 183: unboxed str array element */
	"aslice",	/* 184: array slice */
	"kvaslice",	/* 185: index/value array slice */
	"aeach",	/* 186: each on array */
	"akeys",	/* 187: keys on array */
	"avalues",	/* 188: values on array */
	"each",	/* 189: each */
	"values",	/* 190: values */
	"keys",	/* 191: keys */
	"delete",	/* 192: delete */
	"exists",	/* 193: exists */
	"rv2hv",	/* 194: hash dereference */
	"helem",	/* 195: hash element */
	"str_helem",	/* 196: unboxed hash element */
	"str_delete",	/* 197: unboxed delete */
	"str_exists",	/* 198: unboxed exists */
	"hslice",	/* 199: hash slice */
	"kvhslice",	/* 200: key/value hash slice */
	"multideref",	/* 201: array or hash lookup */
	"unpack",	/* 202: unpack */
	"pack",	/* 203: pack */
	"split",	/* 204: split */
	"join",	/* 205: join or string */
	"list",	/* 206: list */
	"lslice",	/* 207: list slice */
	"anonlist",	/* 208: anonymous array ([]) */
	"anonhash",	/* 209: anonymous hash ({}) */
	"splice",	/* 210: splice */
	"push",	/* 211: push */
	"pop",	/* 212: pop */
	"shift",	/* 213: shift */
	"unshift",	/* 214: unshift */
	"sort",	/* 215: sort */
	"reverse",	/* 216: reverse */
	"grepstart",	/* 217: grep */
	"grepwhile",	/* 218: grep iterator */
	"mapstart",	/* 219: map */
	"mapwhile",	/* 220: map iterator */
	"range",	/* 221: flipflop */
	"flip",	/* 222: range (or flip) */
	"flop",	/* 223: range (or flop) */
	"and",	/* 224: logical and (&&) */
	"or",	/* 225: logical or (||) */
	"xor",	/* 226: logical xor */
	"dor",	/* 227: defined or (//) */
	"cond_expr",	/* 228: conditional expression */
	"andassign",	/* 229: logical and assignment (&&=) */
	"orassign",	/* 230: logical or assignment (||=) */
	"dorassign",	/* 231: defined or assignment (//=) */
	"method",	/* 232: method lookup */
	"entersub",	/* 233: subroutine entry */
	"enterxssub",	/* 234: XS subroutine entry */
	"leavesub",	/* 235: subroutine exit */
	"leavesublv",	/* 236: lvalue subroutine return */
	"signature",	/* 237: subroutine signature processing */
	"caller",	/* 238: caller */
	"warn",	/* 239: warn */
	"die",	/* 240: die */
	"reset",	/* 241: symbol reset */
	"lineseq",	/* 242: line sequence */
	"nextstate",	/* 243: next statement */
	"dbstate",	/* 244: debug next statement */
	"unstack",	/* 245: iteration finalizer */
	"enter",	/* 246: block entry */
	"leave",	/* 247: block exit */
	"scope",	/* 248: block */
	"enteriter",	/* 249: foreach loop entry */
	"iter",	/* 250: foreach loop iterator */
	"enterloop",	/* 251: loop entry */
	"leaveloop",	/* 252: loop exit */
	"return",	/* 253: return */
	"last",	/* 254: last */
	"next",	/* 255: next */
	"redo",	/* 256: redo */
	"dump",	/* 257: dump */
	"goto",	/* 258: goto */
	"exit",	/* 259: exit */
	"method_named",	/* 260: named method */
	"method_super",	/* 261: named super method */
	"method_redir",	/* 262: redirect named method */
	"method_redir_super",	/* 263: redirect named super */
	"entergiven",	/* 264: given() */
	"leavegiven",	/* 265: leave given block */
	"enterwhen",	/* 266: when() */
	"leavewhen",	/* 267: leave when block */
	"break",	/* 268: break */
	"continue",	/* 269: continue */
	"open",	/* 270: open */
	"close",	/* 271: close */
	"pipe_op",	/* 272: pipe */
	"fileno",	/* 273: fileno */
	"umask",	/* 274: umask */
	"binmode",	/* 275: binmode */
	"tie",	/* 276: tie */
	"untie",	/* 277: untie */
	"tied",	/* 278: tied */
	"dbmopen",	/* 279: dbmopen */
	"dbmclose",	/* 280: dbmclose */
	"sselect",	/* 281: select system call */
	"select",	/* 282: select */
	"getc",	/* 283: getc */
	"read",	/* 284: read */
	"enterwrite",	/* 285: write */
	"leavewrite",	/* 286: write exit */
	"prtf",	/* 287: printf */
	"print",	/* 288: print */
	"say",	/* 289: say */
	"sysopen",	/* 290: sysopen */
	"sysseek",	/* 291: sysseek */
	"sysread",	/* 292: sysread */
	"syswrite",	/* 293: syswrite */
	"eof",	/* 294: eof */
	"tell",	/* 295: tell */
	"seek",	/* 296: seek */
	"truncate",	/* 297: truncate */
	"fcntl",	/* 298: fcntl */
	"ioctl",	/* 299: ioctl */
	"flock",	/* 300: flock */
	"send",	/* 301: send */
	"recv",	/* 302: recv */
	"socket",	/* 303: socket */
	"sockpair",	/* 304: socketpair */
	"bind",	/* 305: bind */
	"connect",	/* 306: connect */
	"listen",	/* 307: listen */
	"accept",	/* 308: accept */
	"shutdown",	/* 309: shutdown */
	"gsockopt",	/* 310: getsockopt */
	"ssockopt",	/* 311: setsockopt */
	"getsockname",	/* 312: getsockname */
	"getpeername",	/* 313: getpeername */
	"lstat",	/* 314: lstat */
	"stat",	/* 315: stat */
	"ftrread",	/* 316: -R */
	"ftrwrite",	/* 317: -W */
	"ftrexec",	/* 318: -X */
	"fteread",	/* 319: -r */
	"ftewrite",	/* 320: -w */
	"fteexec",	/* 321: -x */
	"ftis",	/* 322: -e */
	"ftsize",	/* 323: -s */
	"ftmtime",	/* 324: -M */
	"ftatime",	/* 325: -A */
	"ftctime",	/* 326: -C */
	"ftrowned",	/* 327: -O */
	"fteowned",	/* 328: -o */
	"ftzero",	/* 329: -z */
	"ftsock",	/* 330: -S */
	"ftchr",	/* 331: -c */
	"ftblk",	/* 332: -b */
	"ftfile",	/* 333: -f */
	"ftdir",	/* 334: -d */
	"ftpipe",	/* 335: -p */
	"ftsuid",	/* 336: -u */
	"ftsgid",	/* 337: -g */
	"ftsvtx",	/* 338: -k */
	"ftlink",	/* 339: -l */
	"fttty",	/* 340: -t */
	"fttext",	/* 341: -T */
	"ftbinary",	/* 342: -B */
	"chdir",	/* 343: chdir */
	"chown",	/* 344: chown */
	"chroot",	/* 345: chroot */
	"unlink",	/* 346: unlink */
	"chmod",	/* 347: chmod */
	"utime",	/* 348: utime */
	"rename",	/* 349: rename */
	"link",	/* 350: link */
	"symlink",	/* 351: symlink */
	"readlink",	/* 352: readlink */
	"mkdir",	/* 353: mkdir */
	"rmdir",	/* 354: rmdir */
	"open_dir",	/* 355: opendir */
	"readdir",	/* 356: readdir */
	"telldir",	/* 357: telldir */
	"seekdir",	/* 358: seekdir */
	"rewinddir",	/* 359: rewinddir */
	"closedir",	/* 360: closedir */
	"fork",	/* 361: fork */
	"wait",	/* 362: wait */
	"waitpid",	/* 363: waitpid */
	"system",	/* 364: system */
	"exec",	/* 365: exec */
	"kill",	/* 366: kill */
	"getppid",	/* 367: getppid */
	"getpgrp",	/* 368: getpgrp */
	"setpgrp",	/* 369: setpgrp */
	"getpriority",	/* 370: getpriority */
	"setpriority",	/* 371: setpriority */
	"time",	/* 372: time */
	"tms",	/* 373: times */
	"localtime",	/* 374: localtime */
	"gmtime",	/* 375: gmtime */
	"alarm",	/* 376: alarm */
	"sleep",	/* 377: sleep */
	"shmget",	/* 378: shmget */
	"shmctl",	/* 379: shmctl */
	"shmread",	/* 380: shmread */
	"shmwrite",	/* 381: shmwrite */
	"msgget",	/* 382: msgget */
	"msgctl",	/* 383: msgctl */
	"msgsnd",	/* 384: msgsnd */
	"msgrcv",	/* 385: msgrcv */
	"semop",	/* 386: semop */
	"semget",	/* 387: semget */
	"semctl",	/* 388: semctl */
	"require",	/* 389: require */
	"dofile",	/* 390: do "file" */
	"hintseval",	/* 391: eval hints */
	"entereval",	/* 392: eval "string" */
	"leaveeval",	/* 393: eval "string" exit */
	"entertry",	/* 394: eval {block} */
	"leavetry",	/* 395: eval {block} exit */
	"ghbyname",	/* 396: gethostbyname */
	"ghbyaddr",	/* 397: gethostbyaddr */
	"ghostent",	/* 398: gethostent */
	"gnbyname",	/* 399: getnetbyname */
	"gnbyaddr",	/* 400: getnetbyaddr */
	"gnetent",	/* 401: getnetent */
	"gpbyname",	/* 402: getprotobyname */
	"gpbynumber",	/* 403: getprotobynumber */
	"gprotoent",	/* 404: getprotoent */
	"gsbyname",	/* 405: getservbyname */
	"gsbyport",	/* 406: getservbyport */
	"gservent",	/* 407: getservent */
	"shostent",	/* 408: sethostent */
	"snetent",	/* 409: setnetent */
	"sprotoent",	/* 410: setprotoent */
	"sservent",	/* 411: setservent */
	"ehostent",	/* 412: endhostent */
	"enetent",	/* 413: endnetent */
	"eprotoent",	/* 414: endprotoent */
	"eservent",	/* 415: endservent */
	"gpwnam",	/* 416: getpwnam */
	"gpwuid",	/* 417: getpwuid */
	"gpwent",	/* 418: getpwent */
	"spwent",	/* 419: setpwent */
	"epwent",	/* 420: endpwent */
	"ggrnam",	/* 421: getgrnam */
	"ggrgid",	/* 422: getgrgid */
	"ggrent",	/* 423: getgrent */
	"sgrent",	/* 424: setgrent */
	"egrent",	/* 425: endgrent */
	"getlogin",	/* 426: getlogin */
	"syscall",	/* 427: syscall */
	"lock",	/* 428: lock */
	"once",	/* 429: once */
	"custom",	/* 430: unknown custom operator */
	"reach",	/* 431: each on reference */
	"rkeys",	/* 432: keys on reference */
	"rvalues",	/* 433: values on reference */
	"coreargs",	/* 434: CORE:: subroutine */
	"runcv",	/* 435: __SUB__ */
	"fc",	/* 436: fc */
	"padcv",	/* 437: private subroutine */
	"introcv",	/* 438: private subroutine */
	"clonecv",	/* 439: private subroutine */
	"padrange",	/* 440: list of private variables */
	"refassign",	/* 441: lvalue ref assignment */
	"lvref",	/* 442: lvalue ref assignment */
	"lvrefslice",	/* 443: lvalue ref assignment */
	"lvavref",	/* 444: lvalue array reference */
	"anonconst",	/* 445: anonymous constant */
	"freed",	/* 446: freed op */
=======
	"str_concat",	/* 159: unboxed concatenation */
	"str_length",	/* 160: unboxed length */
	"length",	/* 161: length */
	"substr",	/* 162: substr */
	"vec",	/* 163: vec */
	"index",	/* 164: index */
	"rindex",	/* 165: rindex */
	"sprintf",	/* 166: sprintf */
	"formline",	/* 167: formline */
	"ord",	/* 168: ord */
	"chr",	/* 169: chr */
	"crypt",	/* 170: crypt */
	"ucfirst",	/* 171: ucfirst */
	"lcfirst",	/* 172: lcfirst */
	"uc",	/* 173: uc */
	"lc",	/* 174: lc */
	"quotemeta",	/* 175: quotemeta */
	"rv2av",	/* 176: array dereference */
	"aelemfast",	/* 177: constant array element */
	"aelemfast_lex",	/* 178: constant lexical array element */
	"aelem",	/* 179: array element */
	"i_aelem",	/* 180: int array element */
	"int_aelem",	/* 181: unboxed int array element */
	"n_aelem",	/* 182: num array element */
	"num_aelem",	/* 183: unboxed num array element */
	"s_aelem",	/* 184: str array element */
	"str_aelem",	/* 185: unboxed str array element */
	"aslice",	/* 186: array slice */
	"kvaslice",	/* 187: index/value array slice */
	"aeach",	/* 188: each on array */
	"akeys",	/* 189: keys on array */
	"avalues",	/* 190: values on array */
	"each",	/* 191: each */
	"values",	/* 192: values */
	"keys",	/* 193: keys */
	"delete",	/* 194: delete */
	"exists",	/* 195: exists */
	"rv2hv",	/* 196: hash dereference */
	"helem",	/* 197: hash element */
	"str_helem",	/* 198: unboxed hash element */
	"str_delete",	/* 199: unboxed delete */
	"str_exists",	/* 200: unboxed exists */
	"hslice",	/* 201: hash slice */
	"kvhslice",	/* 202: key/value hash slice */
	"multideref",	/* 203: array or hash lookup */
	"unpack",	/* 204: unpack */
	"pack",	/* 205: pack */
	"split",	/* 206: split */
	"join",	/* 207: join or string */
	"list",	/* 208: list */
	"lslice",	/* 209: list slice */
	"anonlist",	/* 210: anonymous array ([]) */
	"anonhash",	/* 211: anonymous hash ({}) */
	"splice",	/* 212: splice */
	"push",	/* 213: push */
	"pop",	/* 214: pop */
	"shift",	/* 215: shift */
	"unshift",	/* 216: unshift */
	"sort",	/* 217: sort */
	"reverse",	/* 218: reverse */
	"grepstart",	/* 219: grep */
	"grepwhile",	/* 220: grep iterator */
	"mapstart",	/* 221: map */
	"mapwhile",	/* 222: map iterator */
	"range",	/* 223: flipflop */
	"flip",	/* 224: range (or flip) */
	"flop",	/* 225: range (or flop) */
	"and",	/* 226: logical and (&&) */
	"or",	/* 227: logical or (||) */
	"xor",	/* 228: logical xor */
	"dor",	/* 229: defined or (//) */
	"cond_expr",	/* 230: conditional expression */
	"andassign",	/* 231: logical and assignment (&&=) */
	"orassign",	/* 232: logical or assignment (||=) */
	"dorassign",	/* 233: defined or assignment (//=) */
	"method",	/* 234: method lookup */
	"entersub",	/* 235: subroutine entry */
	"enterxssub",	/* 236: XS subroutine entry */
	"leavesub",	/* 237: subroutine exit */
	"leavesublv",	/* 238: lvalue subroutine return */
	"caller",	/* 239: caller */
	"warn",	/* 240: warn */
	"die",	/* 241: die */
	"reset",	/* 242: symbol reset */
	"lineseq",	/* 243: line sequence */
	"nextstate",	/* 244: next statement */
	"dbstate",	/* 245: debug next statement */
	"unstack",	/* 246: iteration finalizer */
	"enter",	/* 247: block entry */
	"leave",	/* 248: block exit */
	"scope",	/* 249: block */
	"enteriter",	/* 250: foreach loop entry */
	"iter",	/* 251: foreach loop iterator */
	"enterloop",	/* 252: loop entry */
	"leaveloop",	/* 253: loop exit */
	"return",	/* 254: return */
	"last",	/* 255: last */
	"next",	/* 256: next */
	"redo",	/* 257: redo */
	"dump",	/* 258: dump */
	"goto",	/* 259: goto */
	"exit",	/* 260: exit */
	"method_named",	/* 261: named method */
	"method_super",	/* 262: named super method */
	"method_redir",	/* 263: redirect named method */
	"method_redir_super",	/* 264: redirect named super */
	"entergiven",	/* 265: given() */
	"leavegiven",	/* 266: leave given block */
	"enterwhen",	/* 267: when() */
	"leavewhen",	/* 268: leave when block */
	"break",	/* 269: break */
	"continue",	/* 270: continue */
	"open",	/* 271: open */
	"close",	/* 272: close */
	"pipe_op",	/* 273: pipe */
	"fileno",	/* 274: fileno */
	"umask",	/* 275: umask */
	"binmode",	/* 276: binmode */
	"tie",	/* 277: tie */
	"untie",	/* 278: untie */
	"tied",	/* 279: tied */
	"dbmopen",	/* 280: dbmopen */
	"dbmclose",	/* 281: dbmclose */
	"sselect",	/* 282: select system call */
	"select",	/* 283: select */
	"getc",	/* 284: getc */
	"read",	/* 285: read */
	"enterwrite",	/* 286: write */
	"leavewrite",	/* 287: write exit */
	"prtf",	/* 288: printf */
	"print",	/* 289: print */
	"say",	/* 290: say */
	"sysopen",	/* 291: sysopen */
	"sysseek",	/* 292: sysseek */
	"sysread",	/* 293: sysread */
	"syswrite",	/* 294: syswrite */
	"eof",	/* 295: eof */
	"tell",	/* 296: tell */
	"seek",	/* 297: seek */
	"truncate",	/* 298: truncate */
	"fcntl",	/* 299: fcntl */
	"ioctl",	/* 300: ioctl */
	"flock",	/* 301: flock */
	"send",	/* 302: send */
	"recv",	/* 303: recv */
	"socket",	/* 304: socket */
	"sockpair",	/* 305: socketpair */
	"bind",	/* 306: bind */
	"connect",	/* 307: connect */
	"listen",	/* 308: listen */
	"accept",	/* 309: accept */
	"shutdown",	/* 310: shutdown */
	"gsockopt",	/* 311: getsockopt */
	"ssockopt",	/* 312: setsockopt */
	"getsockname",	/* 313: getsockname */
	"getpeername",	/* 314: getpeername */
	"lstat",	/* 315: lstat */
	"stat",	/* 316: stat */
	"ftrread",	/* 317: -R */
	"ftrwrite",	/* 318: -W */
	"ftrexec",	/* 319: -X */
	"fteread",	/* 320: -r */
	"ftewrite",	/* 321: -w */
	"fteexec",	/* 322: -x */
	"ftis",	/* 323: -e */
	"ftsize",	/* 324: -s */
	"ftmtime",	/* 325: -M */
	"ftatime",	/* 326: -A */
	"ftctime",	/* 327: -C */
	"ftrowned",	/* 328: -O */
	"fteowned",	/* 329: -o */
	"ftzero",	/* 330: -z */
	"ftsock",	/* 331: -S */
	"ftchr",	/* 332: -c */
	"ftblk",	/* 333: -b */
	"ftfile",	/* 334: -f */
	"ftdir",	/* 335: -d */
	"ftpipe",	/* 336: -p */
	"ftsuid",	/* 337: -u */
	"ftsgid",	/* 338: -g */
	"ftsvtx",	/* 339: -k */
	"ftlink",	/* 340: -l */
	"fttty",	/* 341: -t */
	"fttext",	/* 342: -T */
	"ftbinary",	/* 343: -B */
	"chdir",	/* 344: chdir */
	"chown",	/* 345: chown */
	"chroot",	/* 346: chroot */
	"unlink",	/* 347: unlink */
	"chmod",	/* 348: chmod */
	"utime",	/* 349: utime */
	"rename",	/* 350: rename */
	"link",	/* 351: link */
	"symlink",	/* 352: symlink */
	"readlink",	/* 353: readlink */
	"mkdir",	/* 354: mkdir */
	"rmdir",	/* 355: rmdir */
	"open_dir",	/* 356: opendir */
	"readdir",	/* 357: readdir */
	"telldir",	/* 358: telldir */
	"seekdir",	/* 359: seekdir */
	"rewinddir",	/* 360: rewinddir */
	"closedir",	/* 361: closedir */
	"fork",	/* 362: fork */
	"wait",	/* 363: wait */
	"waitpid",	/* 364: waitpid */
	"system",	/* 365: system */
	"exec",	/* 366: exec */
	"kill",	/* 367: kill */
	"getppid",	/* 368: getppid */
	"getpgrp",	/* 369: getpgrp */
	"setpgrp",	/* 370: setpgrp */
	"getpriority",	/* 371: getpriority */
	"setpriority",	/* 372: setpriority */
	"time",	/* 373: time */
	"tms",	/* 374: times */
	"localtime",	/* 375: localtime */
	"gmtime",	/* 376: gmtime */
	"alarm",	/* 377: alarm */
	"sleep",	/* 378: sleep */
	"shmget",	/* 379: shmget */
	"shmctl",	/* 380: shmctl */
	"shmread",	/* 381: shmread */
	"shmwrite",	/* 382: shmwrite */
	"msgget",	/* 383: msgget */
	"msgctl",	/* 384: msgctl */
	"msgsnd",	/* 385: msgsnd */
	"msgrcv",	/* 386: msgrcv */
	"semop",	/* 387: semop */
	"semget",	/* 388: semget */
	"semctl",	/* 389: semctl */
	"require",	/* 390: require */
	"dofile",	/* 391: do "file" */
	"hintseval",	/* 392: eval hints */
	"entereval",	/* 393: eval "string" */
	"leaveeval",	/* 394: eval "string" exit */
	"entertry",	/* 395: eval {block} */
	"leavetry",	/* 396: eval {block} exit */
	"ghbyname",	/* 397: gethostbyname */
	"ghbyaddr",	/* 398: gethostbyaddr */
	"ghostent",	/* 399: gethostent */
	"gnbyname",	/* 400: getnetbyname */
	"gnbyaddr",	/* 401: getnetbyaddr */
	"gnetent",	/* 402: getnetent */
	"gpbyname",	/* 403: getprotobyname */
	"gpbynumber",	/* 404: getprotobynumber */
	"gprotoent",	/* 405: getprotoent */
	"gsbyname",	/* 406: getservbyname */
	"gsbyport",	/* 407: getservbyport */
	"gservent",	/* 408: getservent */
	"shostent",	/* 409: sethostent */
	"snetent",	/* 410: setnetent */
	"sprotoent",	/* 411: setprotoent */
	"sservent",	/* 412: setservent */
	"ehostent",	/* 413: endhostent */
	"enetent",	/* 414: endnetent */
	"eprotoent",	/* 415: endprotoent */
	"eservent",	/* 416: endservent */
	"gpwnam",	/* 417: getpwnam */
	"gpwuid",	/* 418: getpwuid */
	"gpwent",	/* 419: getpwent */
	"spwent",	/* 420: setpwent */
	"epwent",	/* 421: endpwent */
	"ggrnam",	/* 422: getgrnam */
	"ggrgid",	/* 423: getgrgid */
	"ggrent",	/* 424: getgrent */
	"sgrent",	/* 425: setgrent */
	"egrent",	/* 426: endgrent */
	"getlogin",	/* 427: getlogin */
	"syscall",	/* 428: syscall */
	"lock",	/* 429: lock */
	"once",	/* 430: once */
	"custom",	/* 431: unknown custom operator */
	"reach",	/* 432: each on reference */
	"rkeys",	/* 433: keys on reference */
	"rvalues",	/* 434: values on reference */
	"coreargs",	/* 435: CORE:: subroutine */
	"runcv",	/* 436: __SUB__ */
	"fc",	/* 437: fc */
	"padcv",	/* 438: private subroutine */
	"introcv",	/* 439: private subroutine */
	"clonecv",	/* 440: private subroutine */
	"padrange",	/* 441: list of private variables */
	"refassign",	/* 442: lvalue ref assignment */
	"lvref",	/* 443: lvalue ref assignment */
	"lvrefslice",	/* 444: lvalue ref assignment */
	"lvavref",	/* 445: lvalue array reference */
	"anonconst",	/* 446: anonymous constant */
	"freed",	/* 447: freed op */
>>>>>>>
};
#endif

#ifndef DOINIT
EXTCONST char* const PL_op_desc[];
#else
EXTCONST char* const PL_op_desc[] = {
	"null operation",	/* 0: null */
	"stub",	/* 1: stub */
	"scalar",	/* 2: scalar */
	"pushmark",	/* 3: pushmark */
	"wantarray",	/* 4: wantarray */
	"constant item",	/* 5: const */
	"scalar variable",	/* 6: gvsv */
	"glob value",	/* 7: gv */
	"glob elem",	/* 8: gelem */
	"private variable",	/* 9: padsv */
	"private array",	/* 10: padav */
	"private hash",	/* 11: padhv */
	"private value",	/* 12: padany */
	"push regexp",	/* 13: pushre */
	"ref-to-glob cast",	/* 14: rv2gv */
	"scalar dereference",	/* 15: rv2sv */
	"array length",	/* 16: av2arylen */
	"subroutine dereference",	/* 17: rv2cv */
	"anonymous subroutine",	/* 18: anoncode */
	"subroutine prototype",	/* 19: prototype */
	"reference constructor",	/* 20: refgen */
	"single ref constructor",	/* 21: srefgen */
	"reference-type operator",	/* 22: ref */
	"bless",	/* 23: bless */
	"quoted execution (``, qx)",	/* 24: backtick */
	"glob",	/* 25: glob */
	"<HANDLE>",	/* 26: readline */
	"append I/O operator",	/* 27: rcatline */
	"regexp internal guard",	/* 28: regcmaybe */
	"regexp internal reset",	/* 29: regcreset */
	"regexp compilation",	/* 30: regcomp */
	"pattern match (m//)",	/* 31: match */
	"pattern quote (qr//)",	/* 32: qr */
	"substitution (s///)",	/* 33: subst */
	"substitution iterator",	/* 34: substcont */
	"transliteration (tr///)",	/* 35: trans */
	"transliteration (tr///)",	/* 36: transr */
	"scalar assignment",	/* 37: sassign */
	"list assignment",	/* 38: aassign */
	"chop",	/* 39: chop */
	"scalar chop",	/* 40: schop */
	"chomp",	/* 41: chomp */
	"scalar chomp",	/* 42: schomp */
	"defined operator",	/* 43: defined */
	"undef operator",	/* 44: undef */
	"study",	/* 45: study */
	"match position",	/* 46: pos */
	"preincrement (++)",	/* 47: preinc */
	"integer preincrement (++)",	/* 48: i_preinc */
	"predecrement (--)",	/* 49: predec */
	"integer predecrement (--)",	/* 50: i_predec */
	"postincrement (++)",	/* 51: postinc */
	"integer postincrement (++)",	/* 52: i_postinc */
	"postdecrement (--)",	/* 53: postdec */
	"integer postdecrement (--)",	/* 54: i_postdec */
	"exponentiation (**)",	/* 55: pow */
	"multiplication (*)",	/* 56: multiply */
	"integer multiplication (*)",	/* 57: i_multiply */
	"division (/)",	/* 58: divide */
	"integer division (/)",	/* 59: i_divide */
	"modulus (%)",	/* 60: modulo */
	"integer modulus (%)",	/* 61: i_modulo */
	"repeat (x)",	/* 62: repeat */
	"addition (+)",	/* 63: add */
	"integer addition (+)",	/* 64: i_add */
	"subtraction (-)",	/* 65: subtract */
	"integer subtraction (-)",	/* 66: i_subtract */
	"concatenation (.) or string",	/* 67: concat */
	"string",	/* 68: stringify */
	"left bitshift (<<)",	/* 69: left_shift */
	"right bitshift (>>)",	/* 70: right_shift */
	"numeric lt (<)",	/* 71: lt */
	"integer lt (<)",	/* 72: i_lt */
	"numeric gt (>)",	/* 73: gt */
	"integer gt (>)",	/* 74: i_gt */
	"numeric le (<=)",	/* 75: le */
	"integer le (<=)",	/* 76: i_le */
	"numeric ge (>=)",	/* 77: ge */
	"integer ge (>=)",	/* 78: i_ge */
	"numeric eq (==)",	/* 79: eq */
	"integer eq (==)",	/* 80: i_eq */
	"numeric ne (!=)",	/* 81: ne */
	"integer ne (!=)",	/* 82: i_ne */
	"numeric comparison (<=>)",	/* 83: ncmp */
	"integer comparison (<=>)",	/* 84: i_ncmp */
	"string lt",	/* 85: slt */
	"string gt",	/* 86: sgt */
	"string le",	/* 87: sle */
	"string ge",	/* 88: sge */
	"string eq",	/* 89: seq */
	"string ne",	/* 90: sne */
	"string comparison (cmp)",	/* 91: scmp */
	"bitwise and (&)",	/* 92: bit_and */
	"bitwise xor (^)",	/* 93: bit_xor */
	"bitwise or (|)",	/* 94: bit_or */
	"numeric bitiwse and (&)",	/* 95: nbit_and */
	"numeric bitwise xor (^)",	/* 96: nbit_xor */
	"numeric bitwise or (|)",	/* 97: nbit_or */
	"string bitiwse and (&)",	/* 98: sbit_and */
	"string bitwise xor (^)",	/* 99: sbit_xor */
	"string bitwise or (|)",	/* 100: sbit_or */
	"negation (-)",	/* 101: negate */
	"integer negation (-)",	/* 102: i_negate */
	"not",	/* 103: not */
	"1's complement (~)",	/* 104: complement */
	"numeric 1's complement (~)",	/* 105: ncomplement */
	"string 1's complement (~)",	/* 106: scomplement */
	"smart match",	/* 107: smartmatch */
	"atan2",	/* 108: atan2 */
	"sin",	/* 109: sin */
	"cos",	/* 110: cos */
	"rand",	/* 111: rand */
	"srand",	/* 112: srand */
	"exp",	/* 113: exp */
	"log",	/* 114: log */
	"sqrt",	/* 115: sqrt */
	"int",	/* 116: int */
	"hex",	/* 117: hex */
	"oct",	/* 118: oct */
	"abs",	/* 119: abs */
	"box int to IV",	/* 120: box_int */
	"box uint to UV",	/* 121: box_uint */
	"box ASCIIZ string to PV",	/* 122: box_str */
	"box double to NV",	/* 123: box_num */
	"unbox IV to int",	/* 124: unbox_int */
	"unbox IV/UV to uint",	/* 125: unbox_uint */
	"unbox PV to ASCIIZ",	/* 126: unbox_str */
	"unbox NV to double",	/* 127: unbox_num */
	"unboxed left bitshift (<<)",	/* 128: uint_lshift */
	"unboxed right bitshift (>>)",	/* 129: uint_rshift */
	"unboxed preincrement (++)",	/* 130: int_preinc */
	"unboxed predecrement (--)",	/* 131: int_predec */
	"unboxed postincrement (++)",	/* 132: int_postinc */
	"unboxed postdecrement (--)",	/* 133: int_postdec */
	"unboxed addition (+)",	/* 134: int_add */
	"unboxed subtraction (-)",	/* 135: int_subtract */
	"unboxed multiplication (*)",	/* 136: int_multiply */
	"unboxed division (/)",	/* 137: int_divide */
	"unboxed modulus (%)",	/* 138: int_modulo */
	"unboxed negation (-)",	/* 139: int_negate */
	"unboxed integer not",	/* 140: int_not */
	"unboxed 1's complement (~)",	/* 141: int_complement */
	"unboxed abs",	/* 142: int_abs */
	"unboxed integer lt (<)",	/* 143: int_lt */
	"unboxed integer gt (>)",	/* 144: int_gt */
	"unboxed integer le (<=)",	/* 145: int_le */
	"unboxed integer ge (>=)",	/* 146: int_ge */
	"unboxed integer eq (==)",	/* 147: int_eq */
	"unboxed integer ne (!=)",	/* 148: int_ne */
	"unboxed num addition (+)",	/* 149: num_add */
	"unboxed num subtraction (-)",	/* 150: num_subtract */
	"unboxed num multiplication (*)",	/* 151: num_multiply */
	"unboxed num division (/)",	/* 152: num_divide */
	"unboxed num atan2",	/* 153: num_atan2 */
	"unboxed num sin",	/* 154: num_sin */
	"unboxed num cos",	/* 155: num_cos */
	"unboxed num exp",	/* 156: num_exp */
	"unboxed num log",	/* 157: num_log */
	"unboxed num sqrt",	/* 158: num_sqrt */
<<<<<<<
	"length",	/* 159: length */
	"substr",	/* 160: substr */
	"vec",	/* 161: vec */
	"index",	/* 162: index */
	"rindex",	/* 163: rindex */
	"sprintf",	/* 164: sprintf */
	"formline",	/* 165: formline */
	"ord",	/* 166: ord */
	"chr",	/* 167: chr */
	"crypt",	/* 168: crypt */
	"ucfirst",	/* 169: ucfirst */
	"lcfirst",	/* 170: lcfirst */
	"uc",	/* 171: uc */
	"lc",	/* 172: lc */
	"quotemeta",	/* 173: quotemeta */
	"array dereference",	/* 174: rv2av */
	"constant array element",	/* 175: aelemfast */
	"constant lexical array element",	/* 176: aelemfast_lex */
	"array element",	/* 177: aelem */
	"int array element",	/* 178: i_aelem */
	"unboxed int array element",	/* 179: int_aelem */
	"num array element",	/* 180: n_aelem */
	"unboxed num array element",	/* 181: num_aelem */
	"str array element",	/* 182: s_aelem */
	"unboxed str array element",	/* 183: str_aelem */
	"array slice",	/* 184: aslice */
	"index/value array slice",	/* 185: kvaslice */
	"each on array",	/* 186: aeach */
	"keys on array",	/* 187: akeys */
	"values on array",	/* 188: avalues */
	"each",	/* 189: each */
	"values",	/* 190: values */
	"keys",	/* 191: keys */
	"delete",	/* 192: delete */
	"exists",	/* 193: exists */
	"hash dereference",	/* 194: rv2hv */
	"hash element",	/* 195: helem */
	"unboxed hash element",	/* 196: str_helem */
	"unboxed delete",	/* 197: str_delete */
	"unboxed exists",	/* 198: str_exists */
	"hash slice",	/* 199: hslice */
	"key/value hash slice",	/* 200: kvhslice */
	"array or hash lookup",	/* 201: multideref */
	"unpack",	/* 202: unpack */
	"pack",	/* 203: pack */
	"split",	/* 204: split */
	"join or string",	/* 205: join */
	"list",	/* 206: list */
	"list slice",	/* 207: lslice */
	"anonymous array ([])",	/* 208: anonlist */
	"anonymous hash ({})",	/* 209: anonhash */
	"splice",	/* 210: splice */
	"push",	/* 211: push */
	"pop",	/* 212: pop */
	"shift",	/* 213: shift */
	"unshift",	/* 214: unshift */
	"sort",	/* 215: sort */
	"reverse",	/* 216: reverse */
	"grep",	/* 217: grepstart */
	"grep iterator",	/* 218: grepwhile */
	"map",	/* 219: mapstart */
	"map iterator",	/* 220: mapwhile */
	"flipflop",	/* 221: range */
	"range (or flip)",	/* 222: flip */
	"range (or flop)",	/* 223: flop */
	"logical and (&&)",	/* 224: and */
	"logical or (||)",	/* 225: or */
	"logical xor",	/* 226: xor */
	"defined or (//)",	/* 227: dor */
	"conditional expression",	/* 228: cond_expr */
	"logical and assignment (&&=)",	/* 229: andassign */
	"logical or assignment (||=)",	/* 230: orassign */
	"defined or assignment (//=)",	/* 231: dorassign */
	"method lookup",	/* 232: method */
	"subroutine entry",	/* 233: entersub */
	"XS subroutine entry",	/* 234: enterxssub */
	"subroutine exit",	/* 235: leavesub */
	"lvalue subroutine return",	/* 236: leavesublv */
	"subroutine signature processing",	/* 237: signature */
	"caller",	/* 238: caller */
	"warn",	/* 239: warn */
	"die",	/* 240: die */
	"symbol reset",	/* 241: reset */
	"line sequence",	/* 242: lineseq */
	"next statement",	/* 243: nextstate */
	"debug next statement",	/* 244: dbstate */
	"iteration finalizer",	/* 245: unstack */
	"block entry",	/* 246: enter */
	"block exit",	/* 247: leave */
	"block",	/* 248: scope */
	"foreach loop entry",	/* 249: enteriter */
	"foreach loop iterator",	/* 250: iter */
	"loop entry",	/* 251: enterloop */
	"loop exit",	/* 252: leaveloop */
	"return",	/* 253: return */
	"last",	/* 254: last */
	"next",	/* 255: next */
	"redo",	/* 256: redo */
	"dump",	/* 257: dump */
	"goto",	/* 258: goto */
	"exit",	/* 259: exit */
	"named method",	/* 260: method_named */
	"named super method",	/* 261: method_super */
	"redirect named method",	/* 262: method_redir */
	"redirect named super",	/* 263: method_redir_super */
	"given()",	/* 264: entergiven */
	"leave given block",	/* 265: leavegiven */
	"when()",	/* 266: enterwhen */
	"leave when block",	/* 267: leavewhen */
	"break",	/* 268: break */
	"continue",	/* 269: continue */
	"open",	/* 270: open */
	"close",	/* 271: close */
	"pipe",	/* 272: pipe_op */
	"fileno",	/* 273: fileno */
	"umask",	/* 274: umask */
	"binmode",	/* 275: binmode */
	"tie",	/* 276: tie */
	"untie",	/* 277: untie */
	"tied",	/* 278: tied */
	"dbmopen",	/* 279: dbmopen */
	"dbmclose",	/* 280: dbmclose */
	"select system call",	/* 281: sselect */
	"select",	/* 282: select */
	"getc",	/* 283: getc */
	"read",	/* 284: read */
	"write",	/* 285: enterwrite */
	"write exit",	/* 286: leavewrite */
	"printf",	/* 287: prtf */
	"print",	/* 288: print */
	"say",	/* 289: say */
	"sysopen",	/* 290: sysopen */
	"sysseek",	/* 291: sysseek */
	"sysread",	/* 292: sysread */
	"syswrite",	/* 293: syswrite */
	"eof",	/* 294: eof */
	"tell",	/* 295: tell */
	"seek",	/* 296: seek */
	"truncate",	/* 297: truncate */
	"fcntl",	/* 298: fcntl */
	"ioctl",	/* 299: ioctl */
	"flock",	/* 300: flock */
	"send",	/* 301: send */
	"recv",	/* 302: recv */
	"socket",	/* 303: socket */
	"socketpair",	/* 304: sockpair */
	"bind",	/* 305: bind */
	"connect",	/* 306: connect */
	"listen",	/* 307: listen */
	"accept",	/* 308: accept */
	"shutdown",	/* 309: shutdown */
	"getsockopt",	/* 310: gsockopt */
	"setsockopt",	/* 311: ssockopt */
	"getsockname",	/* 312: getsockname */
	"getpeername",	/* 313: getpeername */
	"lstat",	/* 314: lstat */
	"stat",	/* 315: stat */
	"-R",	/* 316: ftrread */
	"-W",	/* 317: ftrwrite */
	"-X",	/* 318: ftrexec */
	"-r",	/* 319: fteread */
	"-w",	/* 320: ftewrite */
	"-x",	/* 321: fteexec */
	"-e",	/* 322: ftis */
	"-s",	/* 323: ftsize */
	"-M",	/* 324: ftmtime */
	"-A",	/* 325: ftatime */
	"-C",	/* 326: ftctime */
	"-O",	/* 327: ftrowned */
	"-o",	/* 328: fteowned */
	"-z",	/* 329: ftzero */
	"-S",	/* 330: ftsock */
	"-c",	/* 331: ftchr */
	"-b",	/* 332: ftblk */
	"-f",	/* 333: ftfile */
	"-d",	/* 334: ftdir */
	"-p",	/* 335: ftpipe */
	"-u",	/* 336: ftsuid */
	"-g",	/* 337: ftsgid */
	"-k",	/* 338: ftsvtx */
	"-l",	/* 339: ftlink */
	"-t",	/* 340: fttty */
	"-T",	/* 341: fttext */
	"-B",	/* 342: ftbinary */
	"chdir",	/* 343: chdir */
	"chown",	/* 344: chown */
	"chroot",	/* 345: chroot */
	"unlink",	/* 346: unlink */
	"chmod",	/* 347: chmod */
	"utime",	/* 348: utime */
	"rename",	/* 349: rename */
	"link",	/* 350: link */
	"symlink",	/* 351: symlink */
	"readlink",	/* 352: readlink */
	"mkdir",	/* 353: mkdir */
	"rmdir",	/* 354: rmdir */
	"opendir",	/* 355: open_dir */
	"readdir",	/* 356: readdir */
	"telldir",	/* 357: telldir */
	"seekdir",	/* 358: seekdir */
	"rewinddir",	/* 359: rewinddir */
	"closedir",	/* 360: closedir */
	"fork",	/* 361: fork */
	"wait",	/* 362: wait */
	"waitpid",	/* 363: waitpid */
	"system",	/* 364: system */
	"exec",	/* 365: exec */
	"kill",	/* 366: kill */
	"getppid",	/* 367: getppid */
	"getpgrp",	/* 368: getpgrp */
	"setpgrp",	/* 369: setpgrp */
	"getpriority",	/* 370: getpriority */
	"setpriority",	/* 371: setpriority */
	"time",	/* 372: time */
	"times",	/* 373: tms */
	"localtime",	/* 374: localtime */
	"gmtime",	/* 375: gmtime */
	"alarm",	/* 376: alarm */
	"sleep",	/* 377: sleep */
	"shmget",	/* 378: shmget */
	"shmctl",	/* 379: shmctl */
	"shmread",	/* 380: shmread */
	"shmwrite",	/* 381: shmwrite */
	"msgget",	/* 382: msgget */
	"msgctl",	/* 383: msgctl */
	"msgsnd",	/* 384: msgsnd */
	"msgrcv",	/* 385: msgrcv */
	"semop",	/* 386: semop */
	"semget",	/* 387: semget */
	"semctl",	/* 388: semctl */
	"require",	/* 389: require */
	"do \"file\"",	/* 390: dofile */
	"eval hints",	/* 391: hintseval */
	"eval \"string\"",	/* 392: entereval */
	"eval \"string\" exit",	/* 393: leaveeval */
	"eval {block}",	/* 394: entertry */
	"eval {block} exit",	/* 395: leavetry */
	"gethostbyname",	/* 396: ghbyname */
	"gethostbyaddr",	/* 397: ghbyaddr */
	"gethostent",	/* 398: ghostent */
	"getnetbyname",	/* 399: gnbyname */
	"getnetbyaddr",	/* 400: gnbyaddr */
	"getnetent",	/* 401: gnetent */
	"getprotobyname",	/* 402: gpbyname */
	"getprotobynumber",	/* 403: gpbynumber */
	"getprotoent",	/* 404: gprotoent */
	"getservbyname",	/* 405: gsbyname */
	"getservbyport",	/* 406: gsbyport */
	"getservent",	/* 407: gservent */
	"sethostent",	/* 408: shostent */
	"setnetent",	/* 409: snetent */
	"setprotoent",	/* 410: sprotoent */
	"setservent",	/* 411: sservent */
	"endhostent",	/* 412: ehostent */
	"endnetent",	/* 413: enetent */
	"endprotoent",	/* 414: eprotoent */
	"endservent",	/* 415: eservent */
	"getpwnam",	/* 416: gpwnam */
	"getpwuid",	/* 417: gpwuid */
	"getpwent",	/* 418: gpwent */
	"setpwent",	/* 419: spwent */
	"endpwent",	/* 420: epwent */
	"getgrnam",	/* 421: ggrnam */
	"getgrgid",	/* 422: ggrgid */
	"getgrent",	/* 423: ggrent */
	"setgrent",	/* 424: sgrent */
	"endgrent",	/* 425: egrent */
	"getlogin",	/* 426: getlogin */
	"syscall",	/* 427: syscall */
	"lock",	/* 428: lock */
	"once",	/* 429: once */
	"unknown custom operator",	/* 430: custom */
	"each on reference",	/* 431: reach */
	"keys on reference",	/* 432: rkeys */
	"values on reference",	/* 433: rvalues */
	"CORE:: subroutine",	/* 434: coreargs */
	"__SUB__",	/* 435: runcv */
	"fc",	/* 436: fc */
	"private subroutine",	/* 437: padcv */
	"private subroutine",	/* 438: introcv */
	"private subroutine",	/* 439: clonecv */
	"list of private variables",	/* 440: padrange */
	"lvalue ref assignment",	/* 441: refassign */
	"lvalue ref assignment",	/* 442: lvref */
	"lvalue ref assignment",	/* 443: lvrefslice */
	"lvalue array reference",	/* 444: lvavref */
	"anonymous constant",	/* 445: anonconst */
	"freed op",	/* 446: freed */
=======
	"unboxed concatenation",	/* 159: str_concat */
	"unboxed length",	/* 160: str_length */
	"length",	/* 161: length */
	"substr",	/* 162: substr */
	"vec",	/* 163: vec */
	"index",	/* 164: index */
	"rindex",	/* 165: rindex */
	"sprintf",	/* 166: sprintf */
	"formline",	/* 167: formline */
	"ord",	/* 168: ord */
	"chr",	/* 169: chr */
	"crypt",	/* 170: crypt */
	"ucfirst",	/* 171: ucfirst */
	"lcfirst",	/* 172: lcfirst */
	"uc",	/* 173: uc */
	"lc",	/* 174: lc */
	"quotemeta",	/* 175: quotemeta */
	"array dereference",	/* 176: rv2av */
	"constant array element",	/* 177: aelemfast */
	"constant lexical array element",	/* 178: aelemfast_lex */
	"array element",	/* 179: aelem */
	"int array element",	/* 180: i_aelem */
	"unboxed int array element",	/* 181: int_aelem */
	"num array element",	/* 182: n_aelem */
	"unboxed num array element",	/* 183: num_aelem */
	"str array element",	/* 184: s_aelem */
	"unboxed str array element",	/* 185: str_aelem */
	"array slice",	/* 186: aslice */
	"index/value array slice",	/* 187: kvaslice */
	"each on array",	/* 188: aeach */
	"keys on array",	/* 189: akeys */
	"values on array",	/* 190: avalues */
	"each",	/* 191: each */
	"values",	/* 192: values */
	"keys",	/* 193: keys */
	"delete",	/* 194: delete */
	"exists",	/* 195: exists */
	"hash dereference",	/* 196: rv2hv */
	"hash element",	/* 197: helem */
	"unboxed hash element",	/* 198: str_helem */
	"unboxed delete",	/* 199: str_delete */
	"unboxed exists",	/* 200: str_exists */
	"hash slice",	/* 201: hslice */
	"key/value hash slice",	/* 202: kvhslice */
	"array or hash lookup",	/* 203: multideref */
	"unpack",	/* 204: unpack */
	"pack",	/* 205: pack */
	"split",	/* 206: split */
	"join or string",	/* 207: join */
	"list",	/* 208: list */
	"list slice",	/* 209: lslice */
	"anonymous array ([])",	/* 210: anonlist */
	"anonymous hash ({})",	/* 211: anonhash */
	"splice",	/* 212: splice */
	"push",	/* 213: push */
	"pop",	/* 214: pop */
	"shift",	/* 215: shift */
	"unshift",	/* 216: unshift */
	"sort",	/* 217: sort */
	"reverse",	/* 218: reverse */
	"grep",	/* 219: grepstart */
	"grep iterator",	/* 220: grepwhile */
	"map",	/* 221: mapstart */
	"map iterator",	/* 222: mapwhile */
	"flipflop",	/* 223: range */
	"range (or flip)",	/* 224: flip */
	"range (or flop)",	/* 225: flop */
	"logical and (&&)",	/* 226: and */
	"logical or (||)",	/* 227: or */
	"logical xor",	/* 228: xor */
	"defined or (//)",	/* 229: dor */
	"conditional expression",	/* 230: cond_expr */
	"logical and assignment (&&=)",	/* 231: andassign */
	"logical or assignment (||=)",	/* 232: orassign */
	"defined or assignment (//=)",	/* 233: dorassign */
	"method lookup",	/* 234: method */
	"subroutine entry",	/* 235: entersub */
	"XS subroutine entry",	/* 236: enterxssub */
	"subroutine exit",	/* 237: leavesub */
	"lvalue subroutine return",	/* 238: leavesublv */
	"caller",	/* 239: caller */
	"warn",	/* 240: warn */
	"die",	/* 241: die */
	"symbol reset",	/* 242: reset */
	"line sequence",	/* 243: lineseq */
	"next statement",	/* 244: nextstate */
	"debug next statement",	/* 245: dbstate */
	"iteration finalizer",	/* 246: unstack */
	"block entry",	/* 247: enter */
	"block exit",	/* 248: leave */
	"block",	/* 249: scope */
	"foreach loop entry",	/* 250: enteriter */
	"foreach loop iterator",	/* 251: iter */
	"loop entry",	/* 252: enterloop */
	"loop exit",	/* 253: leaveloop */
	"return",	/* 254: return */
	"last",	/* 255: last */
	"next",	/* 256: next */
	"redo",	/* 257: redo */
	"dump",	/* 258: dump */
	"goto",	/* 259: goto */
	"exit",	/* 260: exit */
	"named method",	/* 261: method_named */
	"named super method",	/* 262: method_super */
	"redirect named method",	/* 263: method_redir */
	"redirect named super",	/* 264: method_redir_super */
	"given()",	/* 265: entergiven */
	"leave given block",	/* 266: leavegiven */
	"when()",	/* 267: enterwhen */
	"leave when block",	/* 268: leavewhen */
	"break",	/* 269: break */
	"continue",	/* 270: continue */
	"open",	/* 271: open */
	"close",	/* 272: close */
	"pipe",	/* 273: pipe_op */
	"fileno",	/* 274: fileno */
	"umask",	/* 275: umask */
	"binmode",	/* 276: binmode */
	"tie",	/* 277: tie */
	"untie",	/* 278: untie */
	"tied",	/* 279: tied */
	"dbmopen",	/* 280: dbmopen */
	"dbmclose",	/* 281: dbmclose */
	"select system call",	/* 282: sselect */
	"select",	/* 283: select */
	"getc",	/* 284: getc */
	"read",	/* 285: read */
	"write",	/* 286: enterwrite */
	"write exit",	/* 287: leavewrite */
	"printf",	/* 288: prtf */
	"print",	/* 289: print */
	"say",	/* 290: say */
	"sysopen",	/* 291: sysopen */
	"sysseek",	/* 292: sysseek */
	"sysread",	/* 293: sysread */
	"syswrite",	/* 294: syswrite */
	"eof",	/* 295: eof */
	"tell",	/* 296: tell */
	"seek",	/* 297: seek */
	"truncate",	/* 298: truncate */
	"fcntl",	/* 299: fcntl */
	"ioctl",	/* 300: ioctl */
	"flock",	/* 301: flock */
	"send",	/* 302: send */
	"recv",	/* 303: recv */
	"socket",	/* 304: socket */
	"socketpair",	/* 305: sockpair */
	"bind",	/* 306: bind */
	"connect",	/* 307: connect */
	"listen",	/* 308: listen */
	"accept",	/* 309: accept */
	"shutdown",	/* 310: shutdown */
	"getsockopt",	/* 311: gsockopt */
	"setsockopt",	/* 312: ssockopt */
	"getsockname",	/* 313: getsockname */
	"getpeername",	/* 314: getpeername */
	"lstat",	/* 315: lstat */
	"stat",	/* 316: stat */
	"-R",	/* 317: ftrread */
	"-W",	/* 318: ftrwrite */
	"-X",	/* 319: ftrexec */
	"-r",	/* 320: fteread */
	"-w",	/* 321: ftewrite */
	"-x",	/* 322: fteexec */
	"-e",	/* 323: ftis */
	"-s",	/* 324: ftsize */
	"-M",	/* 325: ftmtime */
	"-A",	/* 326: ftatime */
	"-C",	/* 327: ftctime */
	"-O",	/* 328: ftrowned */
	"-o",	/* 329: fteowned */
	"-z",	/* 330: ftzero */
	"-S",	/* 331: ftsock */
	"-c",	/* 332: ftchr */
	"-b",	/* 333: ftblk */
	"-f",	/* 334: ftfile */
	"-d",	/* 335: ftdir */
	"-p",	/* 336: ftpipe */
	"-u",	/* 337: ftsuid */
	"-g",	/* 338: ftsgid */
	"-k",	/* 339: ftsvtx */
	"-l",	/* 340: ftlink */
	"-t",	/* 341: fttty */
	"-T",	/* 342: fttext */
	"-B",	/* 343: ftbinary */
	"chdir",	/* 344: chdir */
	"chown",	/* 345: chown */
	"chroot",	/* 346: chroot */
	"unlink",	/* 347: unlink */
	"chmod",	/* 348: chmod */
	"utime",	/* 349: utime */
	"rename",	/* 350: rename */
	"link",	/* 351: link */
	"symlink",	/* 352: symlink */
	"readlink",	/* 353: readlink */
	"mkdir",	/* 354: mkdir */
	"rmdir",	/* 355: rmdir */
	"opendir",	/* 356: open_dir */
	"readdir",	/* 357: readdir */
	"telldir",	/* 358: telldir */
	"seekdir",	/* 359: seekdir */
	"rewinddir",	/* 360: rewinddir */
	"closedir",	/* 361: closedir */
	"fork",	/* 362: fork */
	"wait",	/* 363: wait */
	"waitpid",	/* 364: waitpid */
	"system",	/* 365: system */
	"exec",	/* 366: exec */
	"kill",	/* 367: kill */
	"getppid",	/* 368: getppid */
	"getpgrp",	/* 369: getpgrp */
	"setpgrp",	/* 370: setpgrp */
	"getpriority",	/* 371: getpriority */
	"setpriority",	/* 372: setpriority */
	"time",	/* 373: time */
	"times",	/* 374: tms */
	"localtime",	/* 375: localtime */
	"gmtime",	/* 376: gmtime */
	"alarm",	/* 377: alarm */
	"sleep",	/* 378: sleep */
	"shmget",	/* 379: shmget */
	"shmctl",	/* 380: shmctl */
	"shmread",	/* 381: shmread */
	"shmwrite",	/* 382: shmwrite */
	"msgget",	/* 383: msgget */
	"msgctl",	/* 384: msgctl */
	"msgsnd",	/* 385: msgsnd */
	"msgrcv",	/* 386: msgrcv */
	"semop",	/* 387: semop */
	"semget",	/* 388: semget */
	"semctl",	/* 389: semctl */
	"require",	/* 390: require */
	"do \"file\"",	/* 391: dofile */
	"eval hints",	/* 392: hintseval */
	"eval \"string\"",	/* 393: entereval */
	"eval \"string\" exit",	/* 394: leaveeval */
	"eval {block}",	/* 395: entertry */
	"eval {block} exit",	/* 396: leavetry */
	"gethostbyname",	/* 397: ghbyname */
	"gethostbyaddr",	/* 398: ghbyaddr */
	"gethostent",	/* 399: ghostent */
	"getnetbyname",	/* 400: gnbyname */
	"getnetbyaddr",	/* 401: gnbyaddr */
	"getnetent",	/* 402: gnetent */
	"getprotobyname",	/* 403: gpbyname */
	"getprotobynumber",	/* 404: gpbynumber */
	"getprotoent",	/* 405: gprotoent */
	"getservbyname",	/* 406: gsbyname */
	"getservbyport",	/* 407: gsbyport */
	"getservent",	/* 408: gservent */
	"sethostent",	/* 409: shostent */
	"setnetent",	/* 410: snetent */
	"setprotoent",	/* 411: sprotoent */
	"setservent",	/* 412: sservent */
	"endhostent",	/* 413: ehostent */
	"endnetent",	/* 414: enetent */
	"endprotoent",	/* 415: eprotoent */
	"endservent",	/* 416: eservent */
	"getpwnam",	/* 417: gpwnam */
	"getpwuid",	/* 418: gpwuid */
	"getpwent",	/* 419: gpwent */
	"setpwent",	/* 420: spwent */
	"endpwent",	/* 421: epwent */
	"getgrnam",	/* 422: ggrnam */
	"getgrgid",	/* 423: ggrgid */
	"getgrent",	/* 424: ggrent */
	"setgrent",	/* 425: sgrent */
	"endgrent",	/* 426: egrent */
	"getlogin",	/* 427: getlogin */
	"syscall",	/* 428: syscall */
	"lock",	/* 429: lock */
	"once",	/* 430: once */
	"unknown custom operator",	/* 431: custom */
	"each on reference",	/* 432: reach */
	"keys on reference",	/* 433: rkeys */
	"values on reference",	/* 434: rvalues */
	"CORE:: subroutine",	/* 435: coreargs */
	"__SUB__",	/* 436: runcv */
	"fc",	/* 437: fc */
	"private subroutine",	/* 438: padcv */
	"private subroutine",	/* 439: introcv */
	"private subroutine",	/* 440: clonecv */
	"list of private variables",	/* 441: padrange */
	"lvalue ref assignment",	/* 442: refassign */
	"lvalue ref assignment",	/* 443: lvref */
	"lvalue ref assignment",	/* 444: lvrefslice */
	"lvalue array reference",	/* 445: lvavref */
	"anonymous constant",	/* 446: anonconst */
	"freed op",	/* 447: freed */
>>>>>>>
};
#endif

#ifndef DOINIT
EXTCONST char* const PL_op_type[];
#else
EXTCONST char* const PL_op_type[] = {
	"():Void",	/* 0: null */
	"():Void",	/* 1: stub */
	"():Void",	/* 2: scalar */
	"():Void",	/* 3: pushmark */
	"",	/* 4: wantarray */
	"():Scalar",	/* 5: const */
	"():Scalar",	/* 6: gvsv */
	"():Scalar",	/* 7: gv */
	"",	/* 8: gelem */
	"",	/* 9: padsv */
	"",	/* 10: padav */
	"",	/* 11: padhv */
	"(:Any):Any",	/* 12: padany */
	"",	/* 13: pushre */
	"",	/* 14: rv2gv */
	"",	/* 15: rv2sv */
	"",	/* 16: av2arylen */
	"",	/* 17: rv2cv */
	"",	/* 18: anoncode */
	"",	/* 19: prototype */
	"",	/* 20: refgen */
	"",	/* 21: srefgen */
	"",	/* 22: ref */
	"",	/* 23: bless */
	"",	/* 24: backtick */
	"",	/* 25: glob */
	"(:Scalar):Any",	/* 26: readline */
	"",	/* 27: rcatline */
	"():Void",	/* 28: regcmaybe */
	"",	/* 29: regcreset */
	"",	/* 30: regcomp */
	"",	/* 31: match */
	"",	/* 32: qr */
	"",	/* 33: subst */
	"",	/* 34: substcont */
	"",	/* 35: trans */
	"",	/* 36: transr */
	"(:Scalar,:Scalar):Scalar",	/* 37: sassign */
	"(:List(:Any),:List(:Any)):List(:Any)",	/* 38: aassign */
	"(:List(:Str)):Scalar",	/* 39: chop */
	"(:Str):Int",	/* 40: schop */
	"(:List(:Str)):Scalar",	/* 41: chomp */
	"(:Str):Int",	/* 42: schomp */
	"",	/* 43: defined */
	"",	/* 44: undef */
	"",	/* 45: study */
	"",	/* 46: pos */
	"(:Scalar):Scalar",	/* 47: preinc */
	"(:Int):Int",	/* 48: i_preinc */
	"(:Scalar):Scalar",	/* 49: predec */
	"(:Int):Int",	/* 50: i_predec */
	"(:Scalar):Scalar",	/* 51: postinc */
	"(:Int):Int",	/* 52: i_postinc */
	"(:Scalar):Scalar",	/* 53: postdec */
	"(:Int):Int",	/* 54: i_postdec */
	"(:Number,:Number):Number",	/* 55: pow */
	"(:Number,:Number):Number",	/* 56: multiply */
	"(:Int,:Int):Int",	/* 57: i_multiply */
	"(:Number,:Number):Number",	/* 58: divide */
	"(:Int,:Int):Int",	/* 59: i_divide */
	"(:Number,:Number):Number",	/* 60: modulo */
	"(:Int,:Int):Int",	/* 61: i_modulo */
	"(:List,:Int):List",	/* 62: repeat */
	"(:Number,:Number):Number",	/* 63: add */
	"(:Int,:Int):Int",	/* 64: i_add */
	"(:Number,:Number):Number",	/* 65: subtract */
	"(:Int,:Int):Int",	/* 66: i_subtract */
	"(:Any,:Any):Str",	/* 67: concat */
	"(:Scalar):Str",	/* 68: stringify */
	"(:Int,:UInt):UInt",	/* 69: left_shift */
	"(:Int,:UInt):UInt",	/* 70: right_shift */
	"(:Scalar,:Scalar):Bool",	/* 71: lt */
	"(:Int,:Int):Bool",	/* 72: i_lt */
	"(:Scalar,:Scalar):Bool",	/* 73: gt */
	"(:Int,:Int):Bool",	/* 74: i_gt */
	"(:Scalar,:Scalar):Bool",	/* 75: le */
	"(:Int,:Int):Bool",	/* 76: i_le */
	"(:Scalar,:Scalar):Bool",	/* 77: ge */
	"(:Int,:Int):Bool",	/* 78: i_ge */
	"(:Scalar,:Scalar):Bool",	/* 79: eq */
	"(:Int,:Int):Bool",	/* 80: i_eq */
	"(:Scalar,:Scalar):Bool",	/* 81: ne */
	"(:Int,:Int):Bool",	/* 82: i_ne */
	"(:Scalar,:Scalar):Int",	/* 83: ncmp */
	"(:Int,:Int):Int",	/* 84: i_ncmp */
	"(:Str,:Str):Bool",	/* 85: slt */
	"(:Str,:Str):Bool",	/* 86: sgt */
	"(:Str,:Str):Bool",	/* 87: sle */
	"(:Str,:Str):Bool",	/* 88: sge */
	"(:Str,:Str):Bool",	/* 89: seq */
	"(:Str,:Str):Bool",	/* 90: sne */
	"(:Str,:Str):Int",	/* 91: scmp */
	"",	/* 92: bit_and */
	"",	/* 93: bit_xor */
	"",	/* 94: bit_or */
	"",	/* 95: nbit_and */
	"",	/* 96: nbit_xor */
	"",	/* 97: nbit_or */
	"",	/* 98: sbit_and */
	"",	/* 99: sbit_xor */
	"",	/* 100: sbit_or */
	"",	/* 101: negate */
	"",	/* 102: i_negate */
	"",	/* 103: not */
	"",	/* 104: complement */
	"",	/* 105: ncomplement */
	"",	/* 106: scomplement */
	"",	/* 107: smartmatch */
	"",	/* 108: atan2 */
	"",	/* 109: sin */
	"",	/* 110: cos */
	"",	/* 111: rand */
	"",	/* 112: srand */
	"",	/* 113: exp */
	"",	/* 114: log */
	"",	/* 115: sqrt */
	"",	/* 116: int */
	"",	/* 117: hex */
	"",	/* 118: oct */
	"",	/* 119: abs */
	"(:int):Int",	/* 120: box_int */
	"(:uint):UInt",	/* 121: box_uint */
	"(:str):Str",	/* 122: box_str */
	"(:num):Num",	/* 123: box_num */
	"(:Int):int",	/* 124: unbox_int */
	"(:Int):uint",	/* 125: unbox_uint */
	"(:Str):str",	/* 126: unbox_str */
	"(:Num):num",	/* 127: unbox_num */
	"(:int,:uint):uint",	/* 128: uint_lshift */
	"(:int,:uint):uint",	/* 129: uint_rshift */
	"(:int):int",	/* 130: int_preinc */
	"(:int):int",	/* 131: int_predec */
	"(:int):int",	/* 132: int_postinc */
	"(:int):int",	/* 133: int_postdec */
	"(:int,:int):int",	/* 134: int_add */
	"(:int,:int):int",	/* 135: int_subtract */
	"(:int,:int):int",	/* 136: int_multiply */
	"(:int,:int):int",	/* 137: int_divide */
	"(:int,:int):int",	/* 138: int_modulo */
	"(:int):int",	/* 139: int_negate */
	"(:int):int",	/* 140: int_not */
	"(:int):int",	/* 141: int_complement */
	"(:int):int",	/* 142: int_abs */
	"(:int,:int):int",	/* 143: int_lt */
	"(:int,:int):int",	/* 144: int_gt */
	"(:int,:int):int",	/* 145: int_le */
	"(:int,:int):int",	/* 146: int_ge */
	"(:int,:int):int",	/* 147: int_eq */
	"(:int,:int):int",	/* 148: int_ne */
	"(:num,:num):num",	/* 149: num_add */
	"(:num,:num):num",	/* 150: num_subtract */
	"(:num,:num):num",	/* 151: num_multiply */
	"(:num,:num):num",	/* 152: num_divide */
	"(:num,:num):num",	/* 153: num_atan2 */
	"(:num):num",	/* 154: num_sin */
	"(:num):num",	/* 155: num_cos */
	"(:num):num",	/* 156: num_exp */
	"(:num):num",	/* 157: num_log */
	"(:num):num",	/* 158: num_sqrt */
<<<<<<<
	"",	/* 159: length */
	"",	/* 160: substr */
	"",	/* 161: vec */
	"",	/* 162: index */
	"",	/* 163: rindex */
	"",	/* 164: sprintf */
	"",	/* 165: formline */
	"",	/* 166: ord */
	"",	/* 167: chr */
	"",	/* 168: crypt */
	"",	/* 169: ucfirst */
	"",	/* 170: lcfirst */
	"",	/* 171: uc */
	"",	/* 172: lc */
	"",	/* 173: quotemeta */
	"",	/* 174: rv2av */
	"",	/* 175: aelemfast */
	"",	/* 176: aelemfast_lex */
	"",	/* 177: aelem */
	"(:Array(:Int),:Int):Int",	/* 178: i_aelem */
	"(:Array(:int),:int):int",	/* 179: int_aelem */
	"(:Array(:Num),:Int):Num",	/* 180: n_aelem */
	"(:Array(:num),:int):num",	/* 181: num_aelem */
	"(:Array(:Str),:Int):Str",	/* 182: s_aelem */
	"(:Array(:str),:int):str",	/* 183: str_aelem */
	"",	/* 184: aslice */
	"",	/* 185: kvaslice */
	"",	/* 186: aeach */
	"",	/* 187: akeys */
	"",	/* 188: avalues */
	"",	/* 189: each */
	"",	/* 190: values */
	"",	/* 191: keys */
	"(:str):Void",	/* 192: delete */
	"(:str):Bool",	/* 193: exists */
	"",	/* 194: rv2hv */
	"(:Hash(:Scalar),:Str):Scalar",	/* 195: helem */
	"(:Hash(:Scalar),:str):Scalar",	/* 196: str_helem */
	"(:str):Void",	/* 197: str_delete */
	"(:str):Bool",	/* 198: str_exists */
	"",	/* 199: hslice */
	"",	/* 200: kvhslice */
	"",	/* 201: multideref */
	"",	/* 202: unpack */
	"",	/* 203: pack */
	"",	/* 204: split */
	"",	/* 205: join */
	"",	/* 206: list */
	"",	/* 207: lslice */
	"",	/* 208: anonlist */
	"",	/* 209: anonhash */
	"",	/* 210: splice */
	"",	/* 211: push */
	"",	/* 212: pop */
	"",	/* 213: shift */
	"",	/* 214: unshift */
	"",	/* 215: sort */
	"",	/* 216: reverse */
	"",	/* 217: grepstart */
	"",	/* 218: grepwhile */
	"",	/* 219: mapstart */
	"",	/* 220: mapwhile */
	"",	/* 221: range */
	"",	/* 222: flip */
	"",	/* 223: flop */
	"(:Scalar,:Scalar):Void",	/* 224: and */
	"",	/* 225: or */
	"",	/* 226: xor */
	"",	/* 227: dor */
	"(:Scalar):Void",	/* 228: cond_expr */
	"",	/* 229: andassign */
	"",	/* 230: orassign */
	"",	/* 231: dorassign */
	"",	/* 232: method */
	"",	/* 233: entersub */
	"",	/* 234: enterxssub */
	"",	/* 235: leavesub */
	"",	/* 236: leavesublv */
	"",	/* 237: signature */
	"",	/* 238: caller */
	"",	/* 239: warn */
	"",	/* 240: die */
	"",	/* 241: reset */
	"():Void",	/* 242: lineseq */
	"():Void",	/* 243: nextstate */
	"():Void",	/* 244: dbstate */
	"():Void",	/* 245: unstack */
	"",	/* 246: enter */
	"",	/* 247: leave */
	"():Void",	/* 248: scope */
	"",	/* 249: enteriter */
	"",	/* 250: iter */
	"",	/* 251: enterloop */
	"",	/* 252: leaveloop */
	"",	/* 253: return */
	"",	/* 254: last */
	"",	/* 255: next */
	"",	/* 256: redo */
	"",	/* 257: dump */
	"",	/* 258: goto */
	"",	/* 259: exit */
	"",	/* 260: method_named */
	"",	/* 261: method_super */
	"",	/* 262: method_redir */
	"",	/* 263: method_redir_super */
	"",	/* 264: entergiven */
	"",	/* 265: leavegiven */
	"",	/* 266: enterwhen */
	"",	/* 267: leavewhen */
	"",	/* 268: break */
	"",	/* 269: continue */
	"",	/* 270: open */
	"",	/* 271: close */
	"",	/* 272: pipe_op */
	"",	/* 273: fileno */
	"",	/* 274: umask */
	"",	/* 275: binmode */
	"",	/* 276: tie */
	"",	/* 277: untie */
	"",	/* 278: tied */
	"",	/* 279: dbmopen */
	"",	/* 280: dbmclose */
	"",	/* 281: sselect */
	"",	/* 282: select */
	"",	/* 283: getc */
	"",	/* 284: read */
	"",	/* 285: enterwrite */
	"",	/* 286: leavewrite */
	"",	/* 287: prtf */
	"",	/* 288: print */
	"",	/* 289: say */
	"",	/* 290: sysopen */
	"",	/* 291: sysseek */
	"",	/* 292: sysread */
	"",	/* 293: syswrite */
	"",	/* 294: eof */
	"",	/* 295: tell */
	"",	/* 296: seek */
	"",	/* 297: truncate */
	"",	/* 298: fcntl */
	"",	/* 299: ioctl */
	"",	/* 300: flock */
	"",	/* 301: send */
	"",	/* 302: recv */
	"",	/* 303: socket */
	"",	/* 304: sockpair */
	"",	/* 305: bind */
	"",	/* 306: connect */
	"",	/* 307: listen */
	"",	/* 308: accept */
	"",	/* 309: shutdown */
	"",	/* 310: gsockopt */
	"",	/* 311: ssockopt */
	"",	/* 312: getsockname */
	"",	/* 313: getpeername */
	"",	/* 314: lstat */
	"",	/* 315: stat */
	"",	/* 316: ftrread */
	"",	/* 317: ftrwrite */
	"",	/* 318: ftrexec */
	"",	/* 319: fteread */
	"",	/* 320: ftewrite */
	"",	/* 321: fteexec */
	"",	/* 322: ftis */
	"",	/* 323: ftsize */
	"",	/* 324: ftmtime */
	"",	/* 325: ftatime */
	"",	/* 326: ftctime */
	"",	/* 327: ftrowned */
	"",	/* 328: fteowned */
	"",	/* 329: ftzero */
	"",	/* 330: ftsock */
	"",	/* 331: ftchr */
	"",	/* 332: ftblk */
	"",	/* 333: ftfile */
	"",	/* 334: ftdir */
	"",	/* 335: ftpipe */
	"",	/* 336: ftsuid */
	"",	/* 337: ftsgid */
	"",	/* 338: ftsvtx */
	"",	/* 339: ftlink */
	"",	/* 340: fttty */
	"",	/* 341: fttext */
	"",	/* 342: ftbinary */
	"",	/* 343: chdir */
	"",	/* 344: chown */
	"",	/* 345: chroot */
	"",	/* 346: unlink */
	"",	/* 347: chmod */
	"",	/* 348: utime */
	"",	/* 349: rename */
	"",	/* 350: link */
	"",	/* 351: symlink */
	"",	/* 352: readlink */
	"",	/* 353: mkdir */
	"",	/* 354: rmdir */
	"",	/* 355: open_dir */
	"",	/* 356: readdir */
	"",	/* 357: telldir */
	"",	/* 358: seekdir */
	"",	/* 359: rewinddir */
	"",	/* 360: closedir */
	"",	/* 361: fork */
	"",	/* 362: wait */
	"",	/* 363: waitpid */
	"",	/* 364: system */
	"",	/* 365: exec */
	"",	/* 366: kill */
	"",	/* 367: getppid */
	"",	/* 368: getpgrp */
	"",	/* 369: setpgrp */
	"",	/* 370: getpriority */
	"",	/* 371: setpriority */
	"",	/* 372: time */
	"",	/* 373: tms */
	"",	/* 374: localtime */
	"",	/* 375: gmtime */
	"",	/* 376: alarm */
	"",	/* 377: sleep */
	"",	/* 378: shmget */
	"",	/* 379: shmctl */
	"",	/* 380: shmread */
	"",	/* 381: shmwrite */
	"",	/* 382: msgget */
	"",	/* 383: msgctl */
	"",	/* 384: msgsnd */
	"",	/* 385: msgrcv */
	"",	/* 386: semop */
	"",	/* 387: semget */
	"",	/* 388: semctl */
	"",	/* 389: require */
	"",	/* 390: dofile */
	"",	/* 391: hintseval */
	"",	/* 392: entereval */
	"",	/* 393: leaveeval */
	"",	/* 394: entertry */
	"",	/* 395: leavetry */
	"",	/* 396: ghbyname */
	"",	/* 397: ghbyaddr */
	"",	/* 398: ghostent */
	"",	/* 399: gnbyname */
	"",	/* 400: gnbyaddr */
	"",	/* 401: gnetent */
	"",	/* 402: gpbyname */
	"",	/* 403: gpbynumber */
	"",	/* 404: gprotoent */
	"",	/* 405: gsbyname */
	"",	/* 406: gsbyport */
	"",	/* 407: gservent */
	"",	/* 408: shostent */
	"",	/* 409: snetent */
	"",	/* 410: sprotoent */
	"",	/* 411: sservent */
	"",	/* 412: ehostent */
	"",	/* 413: enetent */
	"",	/* 414: eprotoent */
	"",	/* 415: eservent */
	"",	/* 416: gpwnam */
	"",	/* 417: gpwuid */
	"",	/* 418: gpwent */
	"",	/* 419: spwent */
	"",	/* 420: epwent */
	"",	/* 421: ggrnam */
	"",	/* 422: ggrgid */
	"",	/* 423: ggrent */
	"",	/* 424: sgrent */
	"",	/* 425: egrent */
	"",	/* 426: getlogin */
	"",	/* 427: syscall */
	"",	/* 428: lock */
	"",	/* 429: once */
	"",	/* 430: custom */
	"",	/* 431: reach */
	"",	/* 432: rkeys */
	"",	/* 433: rvalues */
	"",	/* 434: coreargs */
	"",	/* 435: runcv */
	"",	/* 436: fc */
	"",	/* 437: padcv */
	"",	/* 438: introcv */
	"",	/* 439: clonecv */
	"",	/* 440: padrange */
	"",	/* 441: refassign */
	"",	/* 442: lvref */
	"",	/* 443: lvrefslice */
	"",	/* 444: lvavref */
	"",	/* 445: anonconst */
	"",	/* 446: freed */
=======
	"(:str,:str):str",	/* 159: str_concat */
	"(:str):Int",	/* 160: str_length */
	"",	/* 161: length */
	"",	/* 162: substr */
	"",	/* 163: vec */
	"",	/* 164: index */
	"",	/* 165: rindex */
	"",	/* 166: sprintf */
	"",	/* 167: formline */
	"",	/* 168: ord */
	"",	/* 169: chr */
	"",	/* 170: crypt */
	"",	/* 171: ucfirst */
	"",	/* 172: lcfirst */
	"",	/* 173: uc */
	"",	/* 174: lc */
	"",	/* 175: quotemeta */
	"",	/* 176: rv2av */
	"",	/* 177: aelemfast */
	"",	/* 178: aelemfast_lex */
	"",	/* 179: aelem */
	"(:Array(:Int),:Int):Int",	/* 180: i_aelem */
	"(:Array(:int),:int):int",	/* 181: int_aelem */
	"(:Array(:Num),:Int):Num",	/* 182: n_aelem */
	"(:Array(:num),:int):num",	/* 183: num_aelem */
	"(:Array(:Str),:Int):Str",	/* 184: s_aelem */
	"(:Array(:str),:int):str",	/* 185: str_aelem */
	"",	/* 186: aslice */
	"",	/* 187: kvaslice */
	"",	/* 188: aeach */
	"",	/* 189: akeys */
	"",	/* 190: avalues */
	"",	/* 191: each */
	"",	/* 192: values */
	"",	/* 193: keys */
	"(:str):Void",	/* 194: delete */
	"(:str):Bool",	/* 195: exists */
	"",	/* 196: rv2hv */
	"(:Hash(:Scalar),:Str):Scalar",	/* 197: helem */
	"(:Hash(:Scalar),:str):Scalar",	/* 198: str_helem */
	"(:str):Void",	/* 199: str_delete */
	"(:str):Bool",	/* 200: str_exists */
	"",	/* 201: hslice */
	"",	/* 202: kvhslice */
	"",	/* 203: multideref */
	"",	/* 204: unpack */
	"",	/* 205: pack */
	"",	/* 206: split */
	"",	/* 207: join */
	"",	/* 208: list */
	"",	/* 209: lslice */
	"",	/* 210: anonlist */
	"",	/* 211: anonhash */
	"",	/* 212: splice */
	"",	/* 213: push */
	"",	/* 214: pop */
	"",	/* 215: shift */
	"",	/* 216: unshift */
	"",	/* 217: sort */
	"",	/* 218: reverse */
	"",	/* 219: grepstart */
	"",	/* 220: grepwhile */
	"",	/* 221: mapstart */
	"",	/* 222: mapwhile */
	"",	/* 223: range */
	"",	/* 224: flip */
	"",	/* 225: flop */
	"(:Scalar,:Scalar):Void",	/* 226: and */
	"",	/* 227: or */
	"",	/* 228: xor */
	"",	/* 229: dor */
	"(:Scalar):Void",	/* 230: cond_expr */
	"",	/* 231: andassign */
	"",	/* 232: orassign */
	"",	/* 233: dorassign */
	"",	/* 234: method */
	"",	/* 235: entersub */
	"",	/* 236: enterxssub */
	"",	/* 237: leavesub */
	"",	/* 238: leavesublv */
	"",	/* 239: caller */
	"",	/* 240: warn */
	"",	/* 241: die */
	"",	/* 242: reset */
	"():Void",	/* 243: lineseq */
	"():Void",	/* 244: nextstate */
	"():Void",	/* 245: dbstate */
	"():Void",	/* 246: unstack */
	"",	/* 247: enter */
	"",	/* 248: leave */
	"():Void",	/* 249: scope */
	"",	/* 250: enteriter */
	"",	/* 251: iter */
	"",	/* 252: enterloop */
	"",	/* 253: leaveloop */
	"",	/* 254: return */
	"",	/* 255: last */
	"",	/* 256: next */
	"",	/* 257: redo */
	"",	/* 258: dump */
	"",	/* 259: goto */
	"",	/* 260: exit */
	"",	/* 261: method_named */
	"",	/* 262: method_super */
	"",	/* 263: method_redir */
	"",	/* 264: method_redir_super */
	"",	/* 265: entergiven */
	"",	/* 266: leavegiven */
	"",	/* 267: enterwhen */
	"",	/* 268: leavewhen */
	"",	/* 269: break */
	"",	/* 270: continue */
	"",	/* 271: open */
	"",	/* 272: close */
	"",	/* 273: pipe_op */
	"",	/* 274: fileno */
	"",	/* 275: umask */
	"",	/* 276: binmode */
	"",	/* 277: tie */
	"",	/* 278: untie */
	"",	/* 279: tied */
	"",	/* 280: dbmopen */
	"",	/* 281: dbmclose */
	"",	/* 282: sselect */
	"",	/* 283: select */
	"",	/* 284: getc */
	"",	/* 285: read */
	"",	/* 286: enterwrite */
	"",	/* 287: leavewrite */
	"",	/* 288: prtf */
	"",	/* 289: print */
	"",	/* 290: say */
	"",	/* 291: sysopen */
	"",	/* 292: sysseek */
	"",	/* 293: sysread */
	"",	/* 294: syswrite */
	"",	/* 295: eof */
	"",	/* 296: tell */
	"",	/* 297: seek */
	"",	/* 298: truncate */
	"",	/* 299: fcntl */
	"",	/* 300: ioctl */
	"",	/* 301: flock */
	"",	/* 302: send */
	"",	/* 303: recv */
	"",	/* 304: socket */
	"",	/* 305: sockpair */
	"",	/* 306: bind */
	"",	/* 307: connect */
	"",	/* 308: listen */
	"",	/* 309: accept */
	"",	/* 310: shutdown */
	"",	/* 311: gsockopt */
	"",	/* 312: ssockopt */
	"",	/* 313: getsockname */
	"",	/* 314: getpeername */
	"",	/* 315: lstat */
	"",	/* 316: stat */
	"",	/* 317: ftrread */
	"",	/* 318: ftrwrite */
	"",	/* 319: ftrexec */
	"",	/* 320: fteread */
	"",	/* 321: ftewrite */
	"",	/* 322: fteexec */
	"",	/* 323: ftis */
	"",	/* 324: ftsize */
	"",	/* 325: ftmtime */
	"",	/* 326: ftatime */
	"",	/* 327: ftctime */
	"",	/* 328: ftrowned */
	"",	/* 329: fteowned */
	"",	/* 330: ftzero */
	"",	/* 331: ftsock */
	"",	/* 332: ftchr */
	"",	/* 333: ftblk */
	"",	/* 334: ftfile */
	"",	/* 335: ftdir */
	"",	/* 336: ftpipe */
	"",	/* 337: ftsuid */
	"",	/* 338: ftsgid */
	"",	/* 339: ftsvtx */
	"",	/* 340: ftlink */
	"",	/* 341: fttty */
	"",	/* 342: fttext */
	"",	/* 343: ftbinary */
	"",	/* 344: chdir */
	"",	/* 345: chown */
	"",	/* 346: chroot */
	"",	/* 347: unlink */
	"",	/* 348: chmod */
	"",	/* 349: utime */
	"",	/* 350: rename */
	"",	/* 351: link */
	"",	/* 352: symlink */
	"",	/* 353: readlink */
	"",	/* 354: mkdir */
	"",	/* 355: rmdir */
	"",	/* 356: open_dir */
	"",	/* 357: readdir */
	"",	/* 358: telldir */
	"",	/* 359: seekdir */
	"",	/* 360: rewinddir */
	"",	/* 361: closedir */
	"",	/* 362: fork */
	"",	/* 363: wait */
	"",	/* 364: waitpid */
	"",	/* 365: system */
	"",	/* 366: exec */
	"",	/* 367: kill */
	"",	/* 368: getppid */
	"",	/* 369: getpgrp */
	"",	/* 370: setpgrp */
	"",	/* 371: getpriority */
	"",	/* 372: setpriority */
	"",	/* 373: time */
	"",	/* 374: tms */
	"",	/* 375: localtime */
	"",	/* 376: gmtime */
	"",	/* 377: alarm */
	"",	/* 378: sleep */
	"",	/* 379: shmget */
	"",	/* 380: shmctl */
	"",	/* 381: shmread */
	"",	/* 382: shmwrite */
	"",	/* 383: msgget */
	"",	/* 384: msgctl */
	"",	/* 385: msgsnd */
	"",	/* 386: msgrcv */
	"",	/* 387: semop */
	"",	/* 388: semget */
	"",	/* 389: semctl */
	"",	/* 390: require */
	"",	/* 391: dofile */
	"",	/* 392: hintseval */
	"",	/* 393: entereval */
	"",	/* 394: leaveeval */
	"",	/* 395: entertry */
	"",	/* 396: leavetry */
	"",	/* 397: ghbyname */
	"",	/* 398: ghbyaddr */
	"",	/* 399: ghostent */
	"",	/* 400: gnbyname */
	"",	/* 401: gnbyaddr */
	"",	/* 402: gnetent */
	"",	/* 403: gpbyname */
	"",	/* 404: gpbynumber */
	"",	/* 405: gprotoent */
	"",	/* 406: gsbyname */
	"",	/* 407: gsbyport */
	"",	/* 408: gservent */
	"",	/* 409: shostent */
	"",	/* 410: snetent */
	"",	/* 411: sprotoent */
	"",	/* 412: sservent */
	"",	/* 413: ehostent */
	"",	/* 414: enetent */
	"",	/* 415: eprotoent */
	"",	/* 416: eservent */
	"",	/* 417: gpwnam */
	"",	/* 418: gpwuid */
	"",	/* 419: gpwent */
	"",	/* 420: spwent */
	"",	/* 421: epwent */
	"",	/* 422: ggrnam */
	"",	/* 423: ggrgid */
	"",	/* 424: ggrent */
	"",	/* 425: sgrent */
	"",	/* 426: egrent */
	"",	/* 427: getlogin */
	"",	/* 428: syscall */
	"",	/* 429: lock */
	"",	/* 430: once */
	"",	/* 431: custom */
	"",	/* 432: reach */
	"",	/* 433: rkeys */
	"",	/* 434: rvalues */
	"",	/* 435: coreargs */
	"",	/* 436: runcv */
	"",	/* 437: fc */
	"",	/* 438: padcv */
	"",	/* 439: introcv */
	"",	/* 440: clonecv */
	"",	/* 441: padrange */
	"",	/* 442: refassign */
	"",	/* 443: lvref */
	"",	/* 444: lvrefslice */
	"",	/* 445: lvavref */
	"",	/* 446: anonconst */
	"",	/* 447: freed */
>>>>>>>
};
#endif

END_EXTERN_C

#endif /* !PERL_GLOBAL_STRUCT_INIT */

START_EXTERN_C

#ifdef PERL_GLOBAL_STRUCT_INIT
#  define PERL_PPADDR_INITED
static const Perl_ppaddr_t Gppaddr[]
#else
#  ifndef PERL_GLOBAL_STRUCT
#    define PERL_PPADDR_INITED
EXT Perl_ppaddr_t PL_ppaddr[] /* or perlvars.h */
#  endif
#endif /* PERL_GLOBAL_STRUCT */
#if (defined(DOINIT) && !defined(PERL_GLOBAL_STRUCT)) || defined(PERL_GLOBAL_STRUCT_INIT)
#  define PERL_PPADDR_INITED
= {
	Perl_pp_null,
	Perl_pp_stub,
	Perl_pp_scalar,	/* implemented by Perl_pp_null */
	Perl_pp_pushmark,
	Perl_pp_wantarray,
	Perl_pp_const,
	Perl_pp_gvsv,
	Perl_pp_gv,
	Perl_pp_gelem,
	Perl_pp_padsv,
	Perl_pp_padav,
	Perl_pp_padhv,
	Perl_pp_padany,	/* implemented by Perl_unimplemented_op */
	Perl_pp_pushre,
	Perl_pp_rv2gv,
	Perl_pp_rv2sv,
	Perl_pp_av2arylen,
	Perl_pp_rv2cv,
	Perl_pp_anoncode,
	Perl_pp_prototype,
	Perl_pp_refgen,
	Perl_pp_srefgen,
	Perl_pp_ref,
	Perl_pp_bless,
	Perl_pp_backtick,
	Perl_pp_glob,
	Perl_pp_readline,
	Perl_pp_rcatline,
	Perl_pp_regcmaybe,	/* implemented by Perl_pp_null */
	Perl_pp_regcreset,
	Perl_pp_regcomp,
	Perl_pp_match,
	Perl_pp_qr,
	Perl_pp_subst,
	Perl_pp_substcont,
	Perl_pp_trans,
	Perl_pp_transr,	/* implemented by Perl_pp_trans */
	Perl_pp_sassign,
	Perl_pp_aassign,
	Perl_pp_chop,
	Perl_pp_schop,
	Perl_pp_chomp,	/* implemented by Perl_pp_chop */
	Perl_pp_schomp,	/* implemented by Perl_pp_schop */
	Perl_pp_defined,
	Perl_pp_undef,
	Perl_pp_study,
	Perl_pp_pos,
	Perl_pp_preinc,
	Perl_pp_i_preinc,	/* implemented by Perl_pp_preinc */
	Perl_pp_predec,	/* implemented by Perl_pp_preinc */
	Perl_pp_i_predec,	/* implemented by Perl_pp_preinc */
	Perl_pp_postinc,
	Perl_pp_i_postinc,	/* implemented by Perl_pp_postinc */
	Perl_pp_postdec,	/* implemented by Perl_pp_postinc */
	Perl_pp_i_postdec,	/* implemented by Perl_pp_postinc */
	Perl_pp_pow,
	Perl_pp_multiply,
	Perl_pp_i_multiply,
	Perl_pp_divide,
	Perl_pp_i_divide,
	Perl_pp_modulo,
	Perl_pp_i_modulo,
	Perl_pp_repeat,
	Perl_pp_add,
	Perl_pp_i_add,
	Perl_pp_subtract,
	Perl_pp_i_subtract,
	Perl_pp_concat,
	Perl_pp_stringify,
	Perl_pp_left_shift,
	Perl_pp_right_shift,
	Perl_pp_lt,
	Perl_pp_i_lt,
	Perl_pp_gt,
	Perl_pp_i_gt,
	Perl_pp_le,
	Perl_pp_i_le,
	Perl_pp_ge,
	Perl_pp_i_ge,
	Perl_pp_eq,
	Perl_pp_i_eq,
	Perl_pp_ne,
	Perl_pp_i_ne,
	Perl_pp_ncmp,
	Perl_pp_i_ncmp,
	Perl_pp_slt,	/* implemented by Perl_pp_sle */
	Perl_pp_sgt,	/* implemented by Perl_pp_sle */
	Perl_pp_sle,
	Perl_pp_sge,	/* implemented by Perl_pp_sle */
	Perl_pp_seq,
	Perl_pp_sne,
	Perl_pp_scmp,
	Perl_pp_bit_and,
	Perl_pp_bit_xor,	/* implemented by Perl_pp_bit_or */
	Perl_pp_bit_or,
	Perl_pp_nbit_and,
	Perl_pp_nbit_xor,	/* implemented by Perl_pp_nbit_or */
	Perl_pp_nbit_or,
	Perl_pp_sbit_and,
	Perl_pp_sbit_xor,	/* implemented by Perl_pp_sbit_or */
	Perl_pp_sbit_or,
	Perl_pp_negate,
	Perl_pp_i_negate,
	Perl_pp_not,
	Perl_pp_complement,
	Perl_pp_ncomplement,
	Perl_pp_scomplement,
	Perl_pp_smartmatch,
	Perl_pp_atan2,
	Perl_pp_sin,
	Perl_pp_cos,	/* implemented by Perl_pp_sin */
	Perl_pp_rand,
	Perl_pp_srand,
	Perl_pp_exp,	/* implemented by Perl_pp_sin */
	Perl_pp_log,	/* implemented by Perl_pp_sin */
	Perl_pp_sqrt,	/* implemented by Perl_pp_sin */
	Perl_pp_int,
	Perl_pp_hex,	/* implemented by Perl_pp_oct */
	Perl_pp_oct,
	Perl_pp_abs,
	Perl_pp_box_int,
	Perl_pp_box_uint,
	Perl_pp_box_str,
	Perl_pp_box_num,
	Perl_pp_unbox_int,
	Perl_pp_unbox_uint,
	Perl_pp_unbox_str,
	Perl_pp_unbox_num,
	Perl_pp_uint_lshift,
	Perl_pp_uint_rshift,
	Perl_pp_int_preinc,
	Perl_pp_int_predec,
	Perl_pp_int_postinc,	/* implemented by Perl_pp_int_preinc */
	Perl_pp_int_postdec,	/* implemented by Perl_pp_int_predec */
	Perl_pp_int_add,
	Perl_pp_int_subtract,
	Perl_pp_int_multiply,
	Perl_pp_int_divide,
	Perl_pp_int_modulo,
	Perl_pp_int_negate,
	Perl_pp_int_not,
	Perl_pp_int_complement,
	Perl_pp_int_abs,
	Perl_pp_int_lt,
	Perl_pp_int_gt,
	Perl_pp_int_le,
	Perl_pp_int_ge,
	Perl_pp_int_eq,
	Perl_pp_int_ne,
	Perl_pp_num_add,
	Perl_pp_num_subtract,
	Perl_pp_num_multiply,
	Perl_pp_num_divide,
	Perl_pp_num_atan2,
	Perl_pp_num_sin,
	Perl_pp_num_cos,
	Perl_pp_num_exp,
	Perl_pp_num_log,
	Perl_pp_num_sqrt,
	Perl_pp_length,
	Perl_pp_substr,
	Perl_pp_vec,
	Perl_pp_index,
	Perl_pp_rindex,	/* implemented by Perl_pp_index */
	Perl_pp_sprintf,
	Perl_pp_formline,
	Perl_pp_ord,
	Perl_pp_chr,
	Perl_pp_crypt,
	Perl_pp_ucfirst,
	Perl_pp_lcfirst,	/* implemented by Perl_pp_ucfirst */
	Perl_pp_uc,
	Perl_pp_lc,
	Perl_pp_quotemeta,
	Perl_pp_rv2av,
	Perl_pp_aelemfast,
	Perl_pp_aelemfast_lex,	/* implemented by Perl_pp_aelemfast */
	Perl_pp_aelem,
	Perl_pp_i_aelem,
	Perl_pp_int_aelem,
	Perl_pp_n_aelem,	/* implemented by Perl_pp_i_aelem */
	Perl_pp_num_aelem,	/* implemented by Perl_pp_int_aelem */
	Perl_pp_s_aelem,	/* implemented by Perl_pp_i_aelem */
	Perl_pp_str_aelem,	/* implemented by Perl_pp_int_aelem */
	Perl_pp_aslice,
	Perl_pp_kvaslice,
	Perl_pp_aeach,
	Perl_pp_akeys,
	Perl_pp_avalues,	/* implemented by Perl_pp_akeys */
	Perl_pp_each,
	Perl_pp_values,	/* implemented by Perl_do_kv */
	Perl_pp_keys,	/* implemented by Perl_do_kv */
	Perl_pp_delete,
	Perl_pp_exists,
	Perl_pp_rv2hv,	/* implemented by Perl_pp_rv2av */
	Perl_pp_helem,
	Perl_pp_str_helem,
	Perl_pp_str_delete,
	Perl_pp_str_exists,
	Perl_pp_hslice,
	Perl_pp_kvhslice,
	Perl_pp_multideref,
	Perl_pp_unpack,
	Perl_pp_pack,
	Perl_pp_split,
	Perl_pp_join,
	Perl_pp_list,
	Perl_pp_lslice,
	Perl_pp_anonlist,
	Perl_pp_anonhash,
	Perl_pp_splice,
	Perl_pp_push,
	Perl_pp_pop,	/* implemented by Perl_pp_shift */
	Perl_pp_shift,
	Perl_pp_unshift,
	Perl_pp_sort,
	Perl_pp_reverse,
	Perl_pp_grepstart,
	Perl_pp_grepwhile,
	Perl_pp_mapstart,	/* implemented by Perl_pp_grepstart */
	Perl_pp_mapwhile,
	Perl_pp_range,
	Perl_pp_flip,
	Perl_pp_flop,
	Perl_pp_and,
	Perl_pp_or,
	Perl_pp_xor,
	Perl_pp_dor,	/* implemented by Perl_pp_defined */
	Perl_pp_cond_expr,
	Perl_pp_andassign,	/* implemented by Perl_pp_and */
	Perl_pp_orassign,	/* implemented by Perl_pp_or */
	Perl_pp_dorassign,	/* implemented by Perl_pp_defined */
	Perl_pp_method,
	Perl_pp_entersub,
	Perl_pp_enterxssub,
	Perl_pp_leavesub,
	Perl_pp_leavesublv,
	Perl_pp_caller,
	Perl_pp_warn,
	Perl_pp_die,
	Perl_pp_reset,
	Perl_pp_lineseq,	/* implemented by Perl_pp_null */
	Perl_pp_nextstate,
	Perl_pp_dbstate,
	Perl_pp_unstack,
	Perl_pp_enter,
	Perl_pp_leave,
	Perl_pp_scope,	/* implemented by Perl_pp_null */
	Perl_pp_enteriter,
	Perl_pp_iter,
	Perl_pp_enterloop,
	Perl_pp_leaveloop,
	Perl_pp_return,
	Perl_pp_last,
	Perl_pp_next,
	Perl_pp_redo,
	Perl_pp_dump,	/* implemented by Perl_pp_goto */
	Perl_pp_goto,
	Perl_pp_exit,
	Perl_pp_method_named,
	Perl_pp_method_super,
	Perl_pp_method_redir,
	Perl_pp_method_redir_super,
	Perl_pp_entergiven,
	Perl_pp_leavegiven,
	Perl_pp_enterwhen,
	Perl_pp_leavewhen,
	Perl_pp_break,
	Perl_pp_continue,
	Perl_pp_open,
	Perl_pp_close,
	Perl_pp_pipe_op,
	Perl_pp_fileno,
	Perl_pp_umask,
	Perl_pp_binmode,
	Perl_pp_tie,
	Perl_pp_untie,
	Perl_pp_tied,
	Perl_pp_dbmopen,
	Perl_pp_dbmclose,	/* implemented by Perl_pp_untie */
	Perl_pp_sselect,
	Perl_pp_select,
	Perl_pp_getc,
	Perl_pp_read,	/* implemented by Perl_pp_sysread */
	Perl_pp_enterwrite,
	Perl_pp_leavewrite,
	Perl_pp_prtf,
	Perl_pp_print,
	Perl_pp_say,	/* implemented by Perl_pp_print */
	Perl_pp_sysopen,
	Perl_pp_sysseek,
	Perl_pp_sysread,
	Perl_pp_syswrite,
	Perl_pp_eof,
	Perl_pp_tell,
	Perl_pp_seek,	/* implemented by Perl_pp_sysseek */
	Perl_pp_truncate,
	Perl_pp_fcntl,	/* implemented by Perl_pp_ioctl */
	Perl_pp_ioctl,
	Perl_pp_flock,
	Perl_pp_send,	/* implemented by Perl_pp_syswrite */
	Perl_pp_recv,	/* implemented by Perl_pp_sysread */
	Perl_pp_socket,
	Perl_pp_sockpair,
	Perl_pp_bind,
	Perl_pp_connect,	/* implemented by Perl_pp_bind */
	Perl_pp_listen,
	Perl_pp_accept,
	Perl_pp_shutdown,
	Perl_pp_gsockopt,	/* implemented by Perl_pp_ssockopt */
	Perl_pp_ssockopt,
	Perl_pp_getsockname,	/* implemented by Perl_pp_getpeername */
	Perl_pp_getpeername,
	Perl_pp_lstat,	/* implemented by Perl_pp_stat */
	Perl_pp_stat,
	Perl_pp_ftrread,
	Perl_pp_ftrwrite,	/* implemented by Perl_pp_ftrread */
	Perl_pp_ftrexec,	/* implemented by Perl_pp_ftrread */
	Perl_pp_fteread,	/* implemented by Perl_pp_ftrread */
	Perl_pp_ftewrite,	/* implemented by Perl_pp_ftrread */
	Perl_pp_fteexec,	/* implemented by Perl_pp_ftrread */
	Perl_pp_ftis,
	Perl_pp_ftsize,	/* implemented by Perl_pp_ftis */
	Perl_pp_ftmtime,	/* implemented by Perl_pp_ftis */
	Perl_pp_ftatime,	/* implemented by Perl_pp_ftis */
	Perl_pp_ftctime,	/* implemented by Perl_pp_ftis */
	Perl_pp_ftrowned,
	Perl_pp_fteowned,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftzero,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftsock,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftchr,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftblk,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftfile,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftdir,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftpipe,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftsuid,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftsgid,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftsvtx,	/* implemented by Perl_pp_ftrowned */
	Perl_pp_ftlink,
	Perl_pp_fttty,
	Perl_pp_fttext,
	Perl_pp_ftbinary,	/* implemented by Perl_pp_fttext */
	Perl_pp_chdir,
	Perl_pp_chown,
	Perl_pp_chroot,
	Perl_pp_unlink,	/* implemented by Perl_pp_chown */
	Perl_pp_chmod,	/* implemented by Perl_pp_chown */
	Perl_pp_utime,	/* implemented by Perl_pp_chown */
	Perl_pp_rename,
	Perl_pp_link,
	Perl_pp_symlink,	/* implemented by Perl_pp_link */
	Perl_pp_readlink,
	Perl_pp_mkdir,
	Perl_pp_rmdir,
	Perl_pp_open_dir,
	Perl_pp_readdir,
	Perl_pp_telldir,
	Perl_pp_seekdir,
	Perl_pp_rewinddir,
	Perl_pp_closedir,
	Perl_pp_fork,
	Perl_pp_wait,
	Perl_pp_waitpid,
	Perl_pp_system,
	Perl_pp_exec,
	Perl_pp_kill,	/* implemented by Perl_pp_chown */
	Perl_pp_getppid,
	Perl_pp_getpgrp,
	Perl_pp_setpgrp,
	Perl_pp_getpriority,
	Perl_pp_setpriority,
	Perl_pp_time,
	Perl_pp_tms,
	Perl_pp_localtime,	/* implemented by Perl_pp_gmtime */
	Perl_pp_gmtime,
	Perl_pp_alarm,
	Perl_pp_sleep,
	Perl_pp_shmget,	/* implemented by Perl_pp_semget */
	Perl_pp_shmctl,	/* implemented by Perl_pp_semctl */
	Perl_pp_shmread,	/* implemented by Perl_pp_shmwrite */
	Perl_pp_shmwrite,
	Perl_pp_msgget,	/* implemented by Perl_pp_semget */
	Perl_pp_msgctl,	/* implemented by Perl_pp_semctl */
	Perl_pp_msgsnd,	/* implemented by Perl_pp_shmwrite */
	Perl_pp_msgrcv,	/* implemented by Perl_pp_shmwrite */
	Perl_pp_semop,	/* implemented by Perl_pp_shmwrite */
	Perl_pp_semget,
	Perl_pp_semctl,
	Perl_pp_require,
	Perl_pp_dofile,	/* implemented by Perl_pp_require */
	Perl_pp_hintseval,
	Perl_pp_entereval,
	Perl_pp_leaveeval,
	Perl_pp_entertry,
	Perl_pp_leavetry,
	Perl_pp_ghbyname,	/* implemented by Perl_pp_ghostent */
	Perl_pp_ghbyaddr,	/* implemented by Perl_pp_ghostent */
	Perl_pp_ghostent,
	Perl_pp_gnbyname,	/* implemented by Perl_pp_gnetent */
	Perl_pp_gnbyaddr,	/* implemented by Perl_pp_gnetent */
	Perl_pp_gnetent,
	Perl_pp_gpbyname,	/* implemented by Perl_pp_gprotoent */
	Perl_pp_gpbynumber,	/* implemented by Perl_pp_gprotoent */
	Perl_pp_gprotoent,
	Perl_pp_gsbyname,	/* implemented by Perl_pp_gservent */
	Perl_pp_gsbyport,	/* implemented by Perl_pp_gservent */
	Perl_pp_gservent,
	Perl_pp_shostent,
	Perl_pp_snetent,	/* implemented by Perl_pp_shostent */
	Perl_pp_sprotoent,	/* implemented by Perl_pp_shostent */
	Perl_pp_sservent,	/* implemented by Perl_pp_shostent */
	Perl_pp_ehostent,
	Perl_pp_enetent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_eprotoent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_eservent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_gpwnam,	/* implemented by Perl_pp_gpwent */
	Perl_pp_gpwuid,	/* implemented by Perl_pp_gpwent */
	Perl_pp_gpwent,
	Perl_pp_spwent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_epwent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_ggrnam,	/* implemented by Perl_pp_ggrent */
	Perl_pp_ggrgid,	/* implemented by Perl_pp_ggrent */
	Perl_pp_ggrent,
	Perl_pp_sgrent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_egrent,	/* implemented by Perl_pp_ehostent */
	Perl_pp_getlogin,
	Perl_pp_syscall,
	Perl_pp_lock,
	Perl_pp_once,
	Perl_pp_custom,	/* implemented by Perl_unimplemented_op */
	Perl_pp_reach,	/* implemented by Perl_pp_rkeys */
	Perl_pp_rkeys,
	Perl_pp_rvalues,	/* implemented by Perl_pp_rkeys */
	Perl_pp_coreargs,
	Perl_pp_runcv,
	Perl_pp_fc,
	Perl_pp_padcv,
	Perl_pp_introcv,
	Perl_pp_clonecv,
	Perl_pp_padrange,
	Perl_pp_refassign,
	Perl_pp_lvref,
	Perl_pp_lvrefslice,
	Perl_pp_lvavref,
	Perl_pp_anonconst,
}
#endif
#ifdef PERL_PPADDR_INITED
;
#endif

#ifdef PERL_GLOBAL_STRUCT_INIT
#  define PERL_CHECK_INITED
static const Perl_check_t Gcheck[]
#else
#  ifndef PERL_GLOBAL_STRUCT
#    define PERL_CHECK_INITED
EXT Perl_check_t PL_check[] /* or perlvars.h */
#  endif
#endif
#if (defined(DOINIT) && !defined(PERL_GLOBAL_STRUCT)) || defined(PERL_GLOBAL_STRUCT_INIT)
#  define PERL_CHECK_INITED
= {
	Perl_ck_null,		/* null */
	Perl_ck_null,		/* stub */
	Perl_ck_fun,		/* scalar */
	Perl_ck_null,		/* pushmark */
	Perl_ck_null,		/* wantarray */
	Perl_ck_svconst,	/* const */
	Perl_ck_null,		/* gvsv */
	Perl_ck_null,		/* gv */
	Perl_ck_null,		/* gelem */
	Perl_ck_null,		/* padsv */
	Perl_ck_null,		/* padav */
	Perl_ck_null,		/* padhv */
	Perl_ck_null,		/* padany */
	Perl_ck_null,		/* pushre */
	Perl_ck_rvconst,	/* rv2gv */
	Perl_ck_rvconst,	/* rv2sv */
	Perl_ck_null,		/* av2arylen */
	Perl_ck_rvconst,	/* rv2cv */
	Perl_ck_anoncode,	/* anoncode */
	Perl_ck_prototype,	/* prototype */
	Perl_ck_spair,		/* refgen */
	Perl_ck_null,		/* srefgen */
	Perl_ck_fun,		/* ref */
	Perl_ck_fun,		/* bless */
	Perl_ck_backtick,	/* backtick */
	Perl_ck_glob,		/* glob */
	Perl_ck_readline,	/* readline */
	Perl_ck_null,		/* rcatline */
	Perl_ck_fun,		/* regcmaybe */
	Perl_ck_fun,		/* regcreset */
	Perl_ck_null,		/* regcomp */
	Perl_ck_match,		/* match */
	Perl_ck_match,		/* qr */
	Perl_ck_match,		/* subst */
	Perl_ck_null,		/* substcont */
	Perl_ck_match,		/* trans */
	Perl_ck_match,		/* transr */
	Perl_ck_sassign,	/* sassign */
	Perl_ck_null,		/* aassign */
	Perl_ck_spair,		/* chop */
	Perl_ck_null,		/* schop */
	Perl_ck_spair,		/* chomp */
	Perl_ck_null,		/* schomp */
	Perl_ck_defined,	/* defined */
	Perl_ck_fun,		/* undef */
	Perl_ck_fun,		/* study */
	Perl_ck_fun,		/* pos */
	Perl_ck_lfun,		/* preinc */
	Perl_ck_lfun,		/* i_preinc */
	Perl_ck_lfun,		/* predec */
	Perl_ck_lfun,		/* i_predec */
	Perl_ck_lfun,		/* postinc */
	Perl_ck_lfun,		/* i_postinc */
	Perl_ck_lfun,		/* postdec */
	Perl_ck_lfun,		/* i_postdec */
	Perl_ck_null,		/* pow */
	Perl_ck_null,		/* multiply */
	Perl_ck_null,		/* i_multiply */
	Perl_ck_null,		/* divide */
	Perl_ck_null,		/* i_divide */
	Perl_ck_null,		/* modulo */
	Perl_ck_null,		/* i_modulo */
	Perl_ck_repeat,		/* repeat */
	Perl_ck_null,		/* add */
	Perl_ck_null,		/* i_add */
	Perl_ck_null,		/* subtract */
	Perl_ck_null,		/* i_subtract */
	Perl_ck_concat,		/* concat */
	Perl_ck_stringify,	/* stringify */
	Perl_ck_bitop,		/* left_shift */
	Perl_ck_bitop,		/* right_shift */
	Perl_ck_cmp,		/* lt */
	Perl_ck_cmp,		/* i_lt */
	Perl_ck_cmp,		/* gt */
	Perl_ck_cmp,		/* i_gt */
	Perl_ck_cmp,		/* le */
	Perl_ck_cmp,		/* i_le */
	Perl_ck_cmp,		/* ge */
	Perl_ck_cmp,		/* i_ge */
	Perl_ck_null,		/* eq */
	Perl_ck_null,		/* i_eq */
	Perl_ck_null,		/* ne */
	Perl_ck_null,		/* i_ne */
	Perl_ck_null,		/* ncmp */
	Perl_ck_null,		/* i_ncmp */
	Perl_ck_null,		/* slt */
	Perl_ck_null,		/* sgt */
	Perl_ck_null,		/* sle */
	Perl_ck_null,		/* sge */
	Perl_ck_null,		/* seq */
	Perl_ck_null,		/* sne */
	Perl_ck_null,		/* scmp */
	Perl_ck_bitop,		/* bit_and */
	Perl_ck_bitop,		/* bit_xor */
	Perl_ck_bitop,		/* bit_or */
	Perl_ck_bitop,		/* nbit_and */
	Perl_ck_bitop,		/* nbit_xor */
	Perl_ck_bitop,		/* nbit_or */
	Perl_ck_bitop,		/* sbit_and */
	Perl_ck_bitop,		/* sbit_xor */
	Perl_ck_bitop,		/* sbit_or */
	Perl_ck_null,		/* negate */
	Perl_ck_null,		/* i_negate */
	Perl_ck_null,		/* not */
	Perl_ck_bitop,		/* complement */
	Perl_ck_bitop,		/* ncomplement */
	Perl_ck_bitop,		/* scomplement */
	Perl_ck_smartmatch,	/* smartmatch */
	Perl_ck_fun,		/* atan2 */
	Perl_ck_fun,		/* sin */
	Perl_ck_fun,		/* cos */
	Perl_ck_fun,		/* rand */
	Perl_ck_fun,		/* srand */
	Perl_ck_fun,		/* exp */
	Perl_ck_fun,		/* log */
	Perl_ck_fun,		/* sqrt */
	Perl_ck_fun,		/* int */
	Perl_ck_fun,		/* hex */
	Perl_ck_fun,		/* oct */
	Perl_ck_fun,		/* abs */
	Perl_ck_null,		/* box_int */
	Perl_ck_null,		/* box_uint */
	Perl_ck_null,		/* box_str */
	Perl_ck_null,		/* box_num */
	Perl_ck_null,		/* unbox_int */
	Perl_ck_null,		/* unbox_uint */
	Perl_ck_null,		/* unbox_str */
	Perl_ck_null,		/* unbox_num */
	Perl_ck_bitop,		/* uint_lshift */
	Perl_ck_bitop,		/* uint_rshift */
	Perl_ck_lfun,		/* int_preinc */
	Perl_ck_lfun,		/* int_predec */
	Perl_ck_lfun,		/* int_postinc */
	Perl_ck_lfun,		/* int_postdec */
	Perl_ck_null,		/* int_add */
	Perl_ck_null,		/* int_subtract */
	Perl_ck_null,		/* int_multiply */
	Perl_ck_null,		/* int_divide */
	Perl_ck_null,		/* int_modulo */
	Perl_ck_null,		/* int_negate */
	Perl_ck_null,		/* int_not */
	Perl_ck_bitop,		/* int_complement */
	Perl_ck_fun,		/* int_abs */
	Perl_ck_cmp,		/* int_lt */
	Perl_ck_cmp,		/* int_gt */
	Perl_ck_cmp,		/* int_le */
	Perl_ck_cmp,		/* int_ge */
	Perl_ck_null,		/* int_eq */
	Perl_ck_null,		/* int_ne */
	Perl_ck_null,		/* num_add */
	Perl_ck_null,		/* num_subtract */
	Perl_ck_null,		/* num_multiply */
	Perl_ck_null,		/* num_divide */
	Perl_ck_fun,		/* num_atan2 */
	Perl_ck_fun,		/* num_sin */
	Perl_ck_fun,		/* num_cos */
	Perl_ck_fun,		/* num_exp */
	Perl_ck_fun,		/* num_log */
	Perl_ck_fun,		/* num_sqrt */
	Perl_ck_length,		/* length */
	Perl_ck_substr,		/* substr */
	Perl_ck_fun,		/* vec */
	Perl_ck_index,		/* index */
	Perl_ck_index,		/* rindex */
	Perl_ck_lfun,		/* sprintf */
	Perl_ck_fun,		/* formline */
	Perl_ck_fun,		/* ord */
	Perl_ck_fun,		/* chr */
	Perl_ck_fun,		/* crypt */
	Perl_ck_fun,		/* ucfirst */
	Perl_ck_fun,		/* lcfirst */
	Perl_ck_fun,		/* uc */
	Perl_ck_fun,		/* lc */
	Perl_ck_fun,		/* quotemeta */
	Perl_ck_rvconst,	/* rv2av */
	Perl_ck_null,		/* aelemfast */
	Perl_ck_null,		/* aelemfast_lex */
	Perl_ck_null,		/* aelem */
	Perl_ck_null,		/* i_aelem */
	Perl_ck_null,		/* int_aelem */
	Perl_ck_null,		/* n_aelem */
	Perl_ck_null,		/* num_aelem */
	Perl_ck_null,		/* s_aelem */
	Perl_ck_null,		/* str_aelem */
	Perl_ck_null,		/* aslice */
	Perl_ck_null,		/* kvaslice */
	Perl_ck_each,		/* aeach */
	Perl_ck_each,		/* akeys */
	Perl_ck_each,		/* avalues */
	Perl_ck_each,		/* each */
	Perl_ck_each,		/* values */
	Perl_ck_each,		/* keys */
	Perl_ck_delete,		/* delete */
	Perl_ck_exists,		/* exists */
	Perl_ck_rvconst,	/* rv2hv */
	Perl_ck_null,		/* helem */
	Perl_ck_null,		/* str_helem */
	Perl_ck_delete,		/* str_delete */
	Perl_ck_exists,		/* str_exists */
	Perl_ck_null,		/* hslice */
	Perl_ck_null,		/* kvhslice */
	Perl_ck_null,		/* multideref */
	Perl_ck_fun,		/* unpack */
	Perl_ck_fun,		/* pack */
	Perl_ck_split,		/* split */
	Perl_ck_join,		/* join */
	Perl_ck_null,		/* list */
	Perl_ck_null,		/* lslice */
	Perl_ck_fun,		/* anonlist */
	Perl_ck_fun,		/* anonhash */
	Perl_ck_fun,		/* splice */
	Perl_ck_fun,		/* push */
	Perl_ck_shift,		/* pop */
	Perl_ck_shift,		/* shift */
	Perl_ck_fun,		/* unshift */
	Perl_ck_sort,		/* sort */
	Perl_ck_fun,		/* reverse */
	Perl_ck_grep,		/* grepstart */
	Perl_ck_null,		/* grepwhile */
	Perl_ck_grep,		/* mapstart */
	Perl_ck_null,		/* mapwhile */
	Perl_ck_null,		/* range */
	Perl_ck_null,		/* flip */
	Perl_ck_null,		/* flop */
	Perl_ck_null,		/* and */
	Perl_ck_null,		/* or */
	Perl_ck_null,		/* xor */
	Perl_ck_null,		/* dor */
	Perl_ck_null,		/* cond_expr */
	Perl_ck_null,		/* andassign */
	Perl_ck_null,		/* orassign */
	Perl_ck_null,		/* dorassign */
	Perl_ck_method,		/* method */
	Perl_ck_subr,		/* entersub */
	Perl_ck_subr,		/* enterxssub */
	Perl_ck_null,		/* leavesub */
	Perl_ck_null,		/* leavesublv */
	Perl_ck_fun,		/* caller */
	Perl_ck_fun,		/* warn */
	Perl_ck_fun,		/* die */
	Perl_ck_fun,		/* reset */
	Perl_ck_null,		/* lineseq */
	Perl_ck_null,		/* nextstate */
	Perl_ck_null,		/* dbstate */
	Perl_ck_null,		/* unstack */
	Perl_ck_null,		/* enter */
	Perl_ck_null,		/* leave */
	Perl_ck_null,		/* scope */
	Perl_ck_null,		/* enteriter */
	Perl_ck_null,		/* iter */
	Perl_ck_null,		/* enterloop */
	Perl_ck_null,		/* leaveloop */
	Perl_ck_return,		/* return */
	Perl_ck_null,		/* last */
	Perl_ck_null,		/* next */
	Perl_ck_null,		/* redo */
	Perl_ck_null,		/* dump */
	Perl_ck_null,		/* goto */
	Perl_ck_fun,		/* exit */
	Perl_ck_null,		/* method_named */
	Perl_ck_null,		/* method_super */
	Perl_ck_null,		/* method_redir */
	Perl_ck_null,		/* method_redir_super */
	Perl_ck_null,		/* entergiven */
	Perl_ck_null,		/* leavegiven */
	Perl_ck_null,		/* enterwhen */
	Perl_ck_null,		/* leavewhen */
	Perl_ck_null,		/* break */
	Perl_ck_null,		/* continue */
	Perl_ck_open,		/* open */
	Perl_ck_fun,		/* close */
	Perl_ck_fun,		/* pipe_op */
	Perl_ck_fun,		/* fileno */
	Perl_ck_fun,		/* umask */
	Perl_ck_fun,		/* binmode */
	Perl_ck_fun,		/* tie */
	Perl_ck_fun,		/* untie */
	Perl_ck_fun,		/* tied */
	Perl_ck_fun,		/* dbmopen */
	Perl_ck_fun,		/* dbmclose */
	Perl_ck_select,		/* sselect */
	Perl_ck_select,		/* select */
	Perl_ck_eof,		/* getc */
	Perl_ck_fun,		/* read */
	Perl_ck_fun,		/* enterwrite */
	Perl_ck_null,		/* leavewrite */
	Perl_ck_listiob,	/* prtf */
	Perl_ck_listiob,	/* print */
	Perl_ck_listiob,	/* say */
	Perl_ck_fun,		/* sysopen */
	Perl_ck_fun,		/* sysseek */
	Perl_ck_fun,		/* sysread */
	Perl_ck_fun,		/* syswrite */
	Perl_ck_eof,		/* eof */
	Perl_ck_tell,		/* tell */
	Perl_ck_tell,		/* seek */
	Perl_ck_trunc,		/* truncate */
	Perl_ck_fun,		/* fcntl */
	Perl_ck_fun,		/* ioctl */
	Perl_ck_fun,		/* flock */
	Perl_ck_fun,		/* send */
	Perl_ck_fun,		/* recv */
	Perl_ck_fun,		/* socket */
	Perl_ck_fun,		/* sockpair */
	Perl_ck_fun,		/* bind */
	Perl_ck_fun,		/* connect */
	Perl_ck_fun,		/* listen */
	Perl_ck_fun,		/* accept */
	Perl_ck_fun,		/* shutdown */
	Perl_ck_fun,		/* gsockopt */
	Perl_ck_fun,		/* ssockopt */
	Perl_ck_fun,		/* getsockname */
	Perl_ck_fun,		/* getpeername */
	Perl_ck_ftst,		/* lstat */
	Perl_ck_ftst,		/* stat */
	Perl_ck_ftst,		/* ftrread */
	Perl_ck_ftst,		/* ftrwrite */
	Perl_ck_ftst,		/* ftrexec */
	Perl_ck_ftst,		/* fteread */
	Perl_ck_ftst,		/* ftewrite */
	Perl_ck_ftst,		/* fteexec */
	Perl_ck_ftst,		/* ftis */
	Perl_ck_ftst,		/* ftsize */
	Perl_ck_ftst,		/* ftmtime */
	Perl_ck_ftst,		/* ftatime */
	Perl_ck_ftst,		/* ftctime */
	Perl_ck_ftst,		/* ftrowned */
	Perl_ck_ftst,		/* fteowned */
	Perl_ck_ftst,		/* ftzero */
	Perl_ck_ftst,		/* ftsock */
	Perl_ck_ftst,		/* ftchr */
	Perl_ck_ftst,		/* ftblk */
	Perl_ck_ftst,		/* ftfile */
	Perl_ck_ftst,		/* ftdir */
	Perl_ck_ftst,		/* ftpipe */
	Perl_ck_ftst,		/* ftsuid */
	Perl_ck_ftst,		/* ftsgid */
	Perl_ck_ftst,		/* ftsvtx */
	Perl_ck_ftst,		/* ftlink */
	Perl_ck_ftst,		/* fttty */
	Perl_ck_ftst,		/* fttext */
	Perl_ck_ftst,		/* ftbinary */
	Perl_ck_trunc,		/* chdir */
	Perl_ck_fun,		/* chown */
	Perl_ck_fun,		/* chroot */
	Perl_ck_fun,		/* unlink */
	Perl_ck_fun,		/* chmod */
	Perl_ck_fun,		/* utime */
	Perl_ck_fun,		/* rename */
	Perl_ck_fun,		/* link */
	Perl_ck_fun,		/* symlink */
	Perl_ck_fun,		/* readlink */
	Perl_ck_fun,		/* mkdir */
	Perl_ck_fun,		/* rmdir */
	Perl_ck_fun,		/* open_dir */
	Perl_ck_fun,		/* readdir */
	Perl_ck_fun,		/* telldir */
	Perl_ck_fun,		/* seekdir */
	Perl_ck_fun,		/* rewinddir */
	Perl_ck_fun,		/* closedir */
	Perl_ck_null,		/* fork */
	Perl_ck_null,		/* wait */
	Perl_ck_fun,		/* waitpid */
	Perl_ck_exec,		/* system */
	Perl_ck_exec,		/* exec */
	Perl_ck_fun,		/* kill */
	Perl_ck_null,		/* getppid */
	Perl_ck_fun,		/* getpgrp */
	Perl_ck_fun,		/* setpgrp */
	Perl_ck_fun,		/* getpriority */
	Perl_ck_fun,		/* setpriority */
	Perl_ck_null,		/* time */
	Perl_ck_null,		/* tms */
	Perl_ck_fun,		/* localtime */
	Perl_ck_fun,		/* gmtime */
	Perl_ck_fun,		/* alarm */
	Perl_ck_fun,		/* sleep */
	Perl_ck_fun,		/* shmget */
	Perl_ck_fun,		/* shmctl */
	Perl_ck_fun,		/* shmread */
	Perl_ck_fun,		/* shmwrite */
	Perl_ck_fun,		/* msgget */
	Perl_ck_fun,		/* msgctl */
	Perl_ck_fun,		/* msgsnd */
	Perl_ck_fun,		/* msgrcv */
	Perl_ck_fun,		/* semop */
	Perl_ck_fun,		/* semget */
	Perl_ck_fun,		/* semctl */
	Perl_ck_require,	/* require */
	Perl_ck_fun,		/* dofile */
	Perl_ck_svconst,	/* hintseval */
	Perl_ck_eval,		/* entereval */
	Perl_ck_null,		/* leaveeval */
	Perl_ck_eval,		/* entertry */
	Perl_ck_null,		/* leavetry */
	Perl_ck_fun,		/* ghbyname */
	Perl_ck_fun,		/* ghbyaddr */
	Perl_ck_null,		/* ghostent */
	Perl_ck_fun,		/* gnbyname */
	Perl_ck_fun,		/* gnbyaddr */
	Perl_ck_null,		/* gnetent */
	Perl_ck_fun,		/* gpbyname */
	Perl_ck_fun,		/* gpbynumber */
	Perl_ck_null,		/* gprotoent */
	Perl_ck_fun,		/* gsbyname */
	Perl_ck_fun,		/* gsbyport */
	Perl_ck_null,		/* gservent */
	Perl_ck_fun,		/* shostent */
	Perl_ck_fun,		/* snetent */
	Perl_ck_fun,		/* sprotoent */
	Perl_ck_fun,		/* sservent */
	Perl_ck_null,		/* ehostent */
	Perl_ck_null,		/* enetent */
	Perl_ck_null,		/* eprotoent */
	Perl_ck_null,		/* eservent */
	Perl_ck_fun,		/* gpwnam */
	Perl_ck_fun,		/* gpwuid */
	Perl_ck_null,		/* gpwent */
	Perl_ck_null,		/* spwent */
	Perl_ck_null,		/* epwent */
	Perl_ck_fun,		/* ggrnam */
	Perl_ck_fun,		/* ggrgid */
	Perl_ck_null,		/* ggrent */
	Perl_ck_null,		/* sgrent */
	Perl_ck_null,		/* egrent */
	Perl_ck_null,		/* getlogin */
	Perl_ck_fun,		/* syscall */
	Perl_ck_rfun,		/* lock */
	Perl_ck_null,		/* once */
	Perl_ck_null,		/* custom */
	Perl_ck_each,		/* reach */
	Perl_ck_each,		/* rkeys */
	Perl_ck_each,		/* rvalues */
	Perl_ck_null,		/* coreargs */
	Perl_ck_null,		/* runcv */
	Perl_ck_fun,		/* fc */
	Perl_ck_null,		/* padcv */
	Perl_ck_null,		/* introcv */
	Perl_ck_null,		/* clonecv */
	Perl_ck_null,		/* padrange */
	Perl_ck_refassign,	/* refassign */
	Perl_ck_null,		/* lvref */
	Perl_ck_null,		/* lvrefslice */
	Perl_ck_null,		/* lvavref */
	Perl_ck_null,		/* anonconst */
}
#endif
#ifdef PERL_CHECK_INITED
;
#endif /* #ifdef PERL_CHECK_INITED */

#ifndef PERL_GLOBAL_STRUCT_INIT

#ifndef DOINIT
EXTCONST U32 PL_opargs[];
#else
EXTCONST U32 PL_opargs[] = {
	0x00000100,	/* null */
	0x00000100,	/* stub */
	0x0001b104,	/* scalar */
	0x00000104,	/* pushmark */
	0x00000204,	/* wantarray */
	0x00006104,	/* const */
	0x00006044,	/* gvsv */
	0x00006044,	/* gv */
	0x00112044,	/* gelem */
	0x00000044,	/* padsv */
	0x00000040,	/* padav */
	0x00000040,	/* padhv */
	0x00000040,	/* padany */
	0x00005040,	/* pushre */
	0x00001044,	/* rv2gv */
	0x00001044,	/* rv2sv */
	0x00001204,	/* av2arylen */
	0x00001040,	/* rv2cv */
	0x00006004,	/* anoncode */
	0x0009b084,	/* prototype */
	0x00021001,	/* refgen */
	0x00011006,	/* srefgen */
	0x0009b08c,	/* ref */
	0x00914004,	/* bless */
	0x0009b088,	/* backtick */
	0x00094008,	/* glob */
	0x000eb008,	/* readline */
	0x00006008,	/* rcatline */
	0x00011104,	/* regcmaybe */
	0x00011004,	/* regcreset */
	0x00013004,	/* regcomp */
	0x00005000,	/* match */
	0x00005004,	/* qr */
	0x00015204,	/* subst */
	0x00003204,	/* substcont */
	0x00018204,	/* trans */
	0x00018204,	/* transr */
	0x00112004,	/* sassign */
	0x00222008,	/* aassign */
	0x0002b00d,	/* chop */
	0x0009b08c,	/* schop */
	0x0002b01d,	/* chomp */
	0x0009b09c,	/* schomp */
	0x0009b284,	/* defined */
	0x000fb004,	/* undef */
	0x0009b084,	/* study */
	0x000fb08c,	/* pos */
	0x00011064,	/* preinc */
	0x00011244,	/* i_preinc */
	0x00011064,	/* predec */
	0x00011244,	/* i_predec */
	0x0001102c,	/* postinc */
	0x0001120c,	/* i_postinc */
	0x0001102c,	/* postdec */
	0x0001120c,	/* i_postdec */
	0x0011211e,	/* pow */
	0x0011213e,	/* multiply */
	0x0011231e,	/* i_multiply */
	0x0011213e,	/* divide */
	0x0011231e,	/* i_divide */
	0x0011233e,	/* modulo */
	0x0011231e,	/* i_modulo */
	0x0012200b,	/* repeat */
	0x0011213e,	/* add */
	0x0011231e,	/* i_add */
	0x0011213e,	/* subtract */
	0x0011231e,	/* i_subtract */
	0x0011211e,	/* concat */
	0x0001401e,	/* stringify */
	0x0011211e,	/* left_shift */
	0x0011211e,	/* right_shift */
	0x00112326,	/* lt */
	0x00112306,	/* i_lt */
	0x00112326,	/* gt */
	0x00112306,	/* i_gt */
	0x00112326,	/* le */
	0x00112306,	/* i_le */
	0x00112326,	/* ge */
	0x00112306,	/* i_ge */
	0x00112326,	/* eq */
	0x00112306,	/* i_eq */
	0x00112326,	/* ne */
	0x00112306,	/* i_ne */
	0x0011232e,	/* ncmp */
	0x0011230e,	/* i_ncmp */
	0x00112306,	/* slt */
	0x00112306,	/* sgt */
	0x00112306,	/* sle */
	0x00112306,	/* sge */
	0x00112306,	/* seq */
	0x00112306,	/* sne */
	0x0011230e,	/* scmp */
	0x0011210e,	/* bit_and */
	0x0011210e,	/* bit_xor */
	0x0011210e,	/* bit_or */
	0x0011211e,	/* nbit_and */
	0x0011211e,	/* nbit_xor */
	0x0011211e,	/* nbit_or */
	0x0011200e,	/* sbit_and */
	0x0011200e,	/* sbit_xor */
	0x0011200e,	/* sbit_or */
	0x0001112e,	/* negate */
	0x0001110e,	/* i_negate */
	0x00011106,	/* not */
	0x0001110e,	/* complement */
	0x0001111e,	/* ncomplement */
	0x0001101e,	/* scomplement */
	0x00002004,	/* smartmatch */
	0x0011411e,	/* atan2 */
	0x0009b19e,	/* sin */
	0x0009b19e,	/* cos */
	0x0009b01c,	/* rand */
	0x0009b01c,	/* srand */
	0x0009b19e,	/* exp */
	0x0009b19e,	/* log */
	0x0009b19e,	/* sqrt */
	0x0009b19e,	/* int */
	0x0009b19e,	/* hex */
	0x0009b19e,	/* oct */
	0x0009b19e,	/* abs */
	0x00081104,	/* box_int */
	0x00081104,	/* box_uint */
	0x00091104,	/* box_str */
	0x000a1104,	/* box_num */
	0x00011300,	/* unbox_int */
	0x00011300,	/* unbox_uint */
	0x00011500,	/* unbox_str */
	0x00011900,	/* unbox_num */
	0x00882302,	/* uint_lshift */
	0x00882302,	/* uint_rshift */
	0x00081200,	/* int_preinc */
	0x00081200,	/* int_predec */
	0x00081200,	/* int_postinc */
	0x00081200,	/* int_postdec */
	0x00882302,	/* int_add */
	0x00882302,	/* int_subtract */
	0x00882302,	/* int_multiply */
	0x00882302,	/* int_divide */
	0x00882302,	/* int_modulo */
	0x00081302,	/* int_negate */
	0x00081302,	/* int_not */
	0x00081302,	/* int_complement */
	0x00081302,	/* int_abs */
	0x00882302,	/* int_lt */
	0x00882302,	/* int_gt */
	0x00882302,	/* int_le */
	0x00882302,	/* int_ge */
	0x00882302,	/* int_eq */
	0x00882302,	/* int_ne */
	0x00aa2902,	/* num_add */
	0x00aa2902,	/* num_subtract */
	0x00aa2902,	/* num_multiply */
	0x00aa2902,	/* num_divide */
	0x00aa2902,	/* num_atan2 */
	0x000a1902,	/* num_sin */
	0x000a1902,	/* num_cos */
	0x000a1902,	/* num_exp */
	0x000a1902,	/* num_log */
	0x000a1902,	/* num_sqrt */
	0x0009b09e,	/* length */
	0x9911400c,	/* substr */
	0x0111400c,	/* vec */
	0x0911401c,	/* index */
	0x0911401c,	/* rindex */
	0x0021400f,	/* sprintf */
	0x00214005,	/* formline */
	0x0009b29e,	/* ord */
	0x0009b09e,	/* chr */
	0x0011401e,	/* crypt */
	0x0009b08e,	/* ucfirst */
	0x0009b08e,	/* lcfirst */
	0x0009b08e,	/* uc */
	0x0009b08e,	/* lc */
	0x0009b08e,	/* quotemeta */
	0x00001048,	/* rv2av */
	0x00136044,	/* aelemfast */
	0x00130040,	/* aelemfast_lex */
	0x00132004,	/* aelem */
	0x00132004,	/* i_aelem */
	0x00832200,	/* int_aelem */
	0x00132004,	/* n_aelem */
	0x00a32004,	/* num_aelem */
	0x00132004,	/* s_aelem */
	0x00932400,	/* str_aelem */
	0x00234001,	/* aslice */
	0x00234001,	/* kvaslice */
	0x0003b040,	/* aeach */
	0x0003b008,	/* akeys */
	0x0003b048,	/* avalues */
	0x0004b040,	/* each */
	0x0004b048,	/* values */
	0x0004b008,	/* keys */
	0x0001b000,	/* delete */
	0x0001b204,	/* exists */
	0x00001040,	/* rv2hv */
	0x00142004,	/* helem */
	0x00942400,	/* str_helem */
	0x00942000,	/* str_delete */
	0x00942004,	/* str_exists */
	0x00244001,	/* hslice */
	0x00244001,	/* kvhslice */
	0x0000f044,	/* multideref */
	0x00914080,	/* unpack */
	0x0021400f,	/* pack */
	0x01114008,	/* split */
	0x0021400f,	/* join */
	0x00024001,	/* list */
	0x02242000,	/* lslice */
	0x00024005,	/* anonlist */
	0x00024005,	/* anonhash */
	0x29934001,	/* splice */
	0x0023421d,	/* push */
	0x000bb004,	/* pop */
	0x000bb004,	/* shift */
	0x0023421d,	/* unshift */
	0x002d4001,	/* sort */
	0x00024009,	/* reverse */
	0x00254001,	/* grepstart */
	0x00003008,	/* grepwhile */
	0x00254001,	/* mapstart */
	0x00003008,	/* mapwhile */
	0x00113000,	/* range */
	0x00111000,	/* flip */
	0x00001000,	/* flop */
	0x00003000,	/* and */
	0x00003000,	/* or */
	0x00112006,	/* xor */
	0x00003000,	/* dor */
	0x00003100,	/* cond_expr */
	0x00003004,	/* andassign */
	0x00003004,	/* orassign */
	0x00003004,	/* dorassign */
	0x0000e040,	/* method */
	0x00021041,	/* entersub */
	0x00021041,	/* enterxssub */
	0x00001000,	/* leavesub */
	0x00001000,	/* leavesublv */
	0x0009b008,	/* caller */
	0x0002420d,	/* warn */
	0x0002420d,	/* die */
	0x0009b204,	/* reset */
	0x00004100,	/* lineseq */
	0x0000a004,	/* nextstate */
	0x0000a004,	/* dbstate */
	0x00000004,	/* unstack */
	0x00000000,	/* enter */
	0x00004000,	/* leave */
	0x00004100,	/* scope */
	0x00009040,	/* enteriter */
	0x00000000,	/* iter */
	0x00009040,	/* enterloop */
	0x00002000,	/* leaveloop */
	0x00024001,	/* return */
	0x0000d004,	/* last */
	0x0000d004,	/* next */
	0x0000d004,	/* redo */
	0x0000d044,	/* dump */
	0x0000d004,	/* goto */
	0x0009b004,	/* exit */
	0x0000e040,	/* method_named */
	0x0000e040,	/* method_super */
	0x0000e040,	/* method_redir */
	0x0000e040,	/* method_redir_super */
	0x00003040,	/* entergiven */
	0x00001000,	/* leavegiven */
	0x00003040,	/* enterwhen */
	0x00001000,	/* leavewhen */
	0x00000000,	/* break */
	0x00000000,	/* continue */
	0x0296420d,	/* open */
	0x000eb204,	/* close */
	0x00664204,	/* pipe_op */
	0x0006b20c,	/* fileno */
	0x0009b20c,	/* umask */
	0x00964004,	/* binmode */
	0x02174245,	/* tie */
	0x0007b204,	/* untie */
	0x0007b044,	/* tied */
	0x01144204,	/* dbmopen */
	0x0004b204,	/* dbmclose */
	0x11114008,	/* sselect */
	0x000e400c,	/* select */
	0x000eb00c,	/* getc */
	0x9176420d,	/* read */
	0x000eb204,	/* enterwrite */
	0x00001000,	/* leavewrite */
	0x002e4205,	/* prtf */
	0x002e4205,	/* print */
	0x002e4205,	/* say */
	0x91164004,	/* sysopen */
	0x01164004,	/* sysseek */
	0x9176420d,	/* sysread */
	0x9916420d,	/* syswrite */
	0x000eb204,	/* eof */
	0x000eb00c,	/* tell */
	0x01164004,	/* seek */
	0x00114204,	/* truncate */
	0x0116400c,	/* fcntl */
	0x0116400c,	/* ioctl */
	0x0016421c,	/* flock */
	0x9116420d,	/* send */
	0x1176420d,	/* recv */
	0x11164204,	/* socket */
	0x02664204,	/* sockpair */
	0x00164204,	/* bind */
	0x00164204,	/* connect */
	0x00164204,	/* listen */
	0x0066420c,	/* accept */
	0x0016420c,	/* shutdown */
	0x01164204,	/* gsockopt */
	0x11164204,	/* ssockopt */
	0x0006b204,	/* getsockname */
	0x0006b204,	/* getpeername */
	0x000ec080,	/* lstat */
	0x000ec080,	/* stat */
	0x0006c284,	/* ftrread */
	0x0006c284,	/* ftrwrite */
	0x0006c284,	/* ftrexec */
	0x0006c284,	/* fteread */
	0x0006c284,	/* ftewrite */
	0x0006c284,	/* fteexec */
	0x0006c284,	/* ftis */
	0x0006c28c,	/* ftsize */
	0x0006c08c,	/* ftmtime */
	0x0006c08c,	/* ftatime */
	0x0006c08c,	/* ftctime */
	0x0006c284,	/* ftrowned */
	0x0006c284,	/* fteowned */
	0x0006c284,	/* ftzero */
	0x0006c284,	/* ftsock */
	0x0006c284,	/* ftchr */
	0x0006c284,	/* ftblk */
	0x0006c284,	/* ftfile */
	0x0006c284,	/* ftdir */
	0x0006c284,	/* ftpipe */
	0x0006c284,	/* ftsuid */
	0x0006c284,	/* ftsgid */
	0x0006c284,	/* ftsvtx */
	0x0006c284,	/* ftlink */
	0x0006c204,	/* fttty */
	0x0006c284,	/* fttext */
	0x0006c284,	/* ftbinary */
	0x0009b21c,	/* chdir */
	0x0002421d,	/* chown */
	0x0009b29c,	/* chroot */
	0x0002429d,	/* unlink */
	0x0002421d,	/* chmod */
	0x0002421d,	/* utime */
	0x0011421c,	/* rename */
	0x0011421c,	/* link */
	0x0011421c,	/* symlink */
	0x0009b08c,	/* readlink */
	0x0099429c,	/* mkdir */
	0x0009b29c,	/* rmdir */
	0x00164204,	/* open_dir */
	0x0006b000,	/* readdir */
	0x0006b00c,	/* telldir */
	0x00164004,	/* seekdir */
	0x0006b004,	/* rewinddir */
	0x0006b204,	/* closedir */
	0x0000020c,	/* fork */
	0x0000021c,	/* wait */
	0x0011421c,	/* waitpid */
	0x0029421d,	/* system */
	0x0029421d,	/* exec */
	0x0002421d,	/* kill */
	0x0000021c,	/* getppid */
	0x0009b21c,	/* getpgrp */
	0x0099421c,	/* setpgrp */
	0x0011421c,	/* getpriority */
	0x0111421c,	/* setpriority */
	0x0000021c,	/* time */
	0x00000000,	/* tms */
	0x0009b008,	/* localtime */
	0x0009b008,	/* gmtime */
	0x0009b28c,	/* alarm */
	0x0009b21c,	/* sleep */
	0x0111420d,	/* shmget */
	0x0111420d,	/* shmctl */
	0x1111420d,	/* shmread */
	0x1111420d,	/* shmwrite */
	0x0011420d,	/* msgget */
	0x0111420d,	/* msgctl */
	0x0111420d,	/* msgsnd */
	0x0002420d,	/* msgrcv */
	0x0011420d,	/* semop */
	0x0111420d,	/* semget */
	0x1111420d,	/* semctl */
	0x0009b0c4,	/* require */
	0x00011040,	/* dofile */
	0x00006004,	/* hintseval */
	0x0009b0c0,	/* entereval */
	0x00011000,	/* leaveeval */
	0x00003040,	/* entertry */
	0x00004000,	/* leavetry */
	0x0001b000,	/* ghbyname */
	0x00114000,	/* ghbyaddr */
	0x00000000,	/* ghostent */
	0x0001b000,	/* gnbyname */
	0x00114000,	/* gnbyaddr */
	0x00000000,	/* gnetent */
	0x0001b000,	/* gpbyname */
	0x00014000,	/* gpbynumber */
	0x00000000,	/* gprotoent */
	0x00114000,	/* gsbyname */
	0x00114000,	/* gsbyport */
	0x00000000,	/* gservent */
	0x0001b204,	/* shostent */
	0x0001b204,	/* snetent */
	0x0001b204,	/* sprotoent */
	0x0001b204,	/* sservent */
	0x00000204,	/* ehostent */
	0x00000204,	/* enetent */
	0x00000204,	/* eprotoent */
	0x00000204,	/* eservent */
	0x0001b000,	/* gpwnam */
	0x0001b000,	/* gpwuid */
	0x00000000,	/* gpwent */
	0x00000204,	/* spwent */
	0x00000204,	/* epwent */
	0x0001b000,	/* ggrnam */
	0x0001b000,	/* ggrgid */
	0x00000000,	/* ggrent */
	0x00000204,	/* sgrent */
	0x00000204,	/* egrent */
	0x0000000c,	/* getlogin */
	0x0021420d,	/* syscall */
	0x0007b004,	/* lock */
	0x00003000,	/* once */
	0x00000000,	/* custom */
	0x0001b040,	/* reach */
	0x0001b008,	/* rkeys */
	0x0001b048,	/* rvalues */
	0x00006000,	/* coreargs */
	0x00000004,	/* runcv */
	0x0009b08e,	/* fc */
	0x00000040,	/* padcv */
	0x00000040,	/* introcv */
	0x00000040,	/* clonecv */
	0x00000040,	/* padrange */
	0x00002044,	/* refassign */
	0x0000b040,	/* lvref */
	0x00004040,	/* lvrefslice */
	0x0000b040,	/* lvavref */
	0x00001044,	/* anonconst */
};
#endif

#endif /* !PERL_GLOBAL_STRUCT_INIT */

END_EXTERN_C


#define OPpLVREF_SV             0x00
#define OPpARG1_MASK            0x01
#define OPpCOREARGS_DEREF1      0x01
#define OPpENTERSUB_INARGS      0x01
#define OPpSORT_NUMERIC         0x01
#define OPpTRANS_FROM_UTF       0x01
#define OPpCONST_NOVER          0x02
#define OPpCOREARGS_DEREF2      0x02
#define OPpEVAL_HAS_HH          0x02
#define OPpFT_ACCESS            0x02
#define OPpGREP_LEX             0x02
#define OPpHINT_STRICT_REFS     0x02
#define OPpSORT_INTEGER         0x02
#define OPpTRANS_TO_UTF         0x02
#define OPpARG2_MASK            0x03
#define OPpCONST_SHORTCIRCUIT   0x04
#define OPpDONT_INIT_GV         0x04
#define OPpENTERSUB_HASTARG     0x04
#define OPpEVAL_UNICODE         0x04
#define OPpFT_STACKED           0x04
#define OPpITER_REVERSED        0x04
#define OPpLVREF_ELEM           0x04
#define OPpSLICEWARNING         0x04
#define OPpSORT_REVERSE         0x04
#define OPpTRANS_IDENTICAL      0x04
#define OPpARG3_MASK            0x07
#define OPpPADRANGE_COUNTSHIFT  0x07
#define OPpCONST_STRICT         0x08
#define OPpENTERSUB_AMPER       0x08
#define OPpEVAL_BYTES           0x08
#define OPpFT_STACKING          0x08
#define OPpITER_DEF             0x08
#define OPpLVREF_ITER           0x08
#define OPpMAYBE_LVSUB          0x08
#define OPpREVERSE_INPLACE      0x08
#define OPpSORT_INPLACE         0x08
#define OPpTRANS_SQUASH         0x08
#define OPpARG4_MASK            0x0f
#define OPpCONST_ENTERED        0x10
#define OPpDEREF_AV             0x10
#define OPpEVAL_COPHH           0x10
#define OPpFT_AFTER_t           0x10
#define OPpLVREF_AV             0x10
#define OPpMAYBE_TRUEBOOL       0x10
#define OPpMULTIDEREF_EXISTS    0x10
#define OPpOPEN_IN_RAW          0x10
#define OPpSORT_DESCEND         0x10
#define OPpSUBSTR_REPL_FIRST    0x10
#define OPpTARGET_MY            0x10
#define OPpDEREF_HV             0x20
#define OPpEARLY_CV             0x20
#define OPpEVAL_RE_REPARSING    0x20
#define OPpHUSH_VMSISH          0x20
#define OPpLVREF_HV             0x20
#define OPpMAY_RETURN_CONSTANT  0x20
#define OPpMULTIDEREF_DELETE    0x20
#define OPpOPEN_IN_CRLF         0x20
#define OPpSORT_QSORT           0x20
#define OPpTRANS_COMPLEMENT     0x20
#define OPpTRUEBOOL             0x20
#define OPpDEREF                0x30
#define OPpDEREF_SV             0x30
#define OPpLVREF_CV             0x30
#define OPpLVREF_TYPE           0x30
#define OPpALLOW_FAKE           0x40
#define OPpASSIGN_BACKWARDS     0x40
#define OPpASSIGN_COMMON        0x40
#define OPpCONST_BARE           0x40
#define OPpCOREARGS_SCALARMOD   0x40
#define OPpENTERSUB_DB          0x40
#define OPpEXISTS_SUB           0x40
#define OPpFLIP_LINENUM         0x40
#define OPpLIST_GUESSED         0x40
#define OPpLVAL_DEFER           0x40
#define OPpOPEN_OUT_RAW         0x40
#define OPpOUR_INTRO            0x40
#define OPpPAD_STATE            0x40
#define OPpREFCOUNTED           0x40
#define OPpREPEAT_DOLIST        0x40
#define OPpRUNTIME              0x40
#define OPpSLICE                0x40
#define OPpSORT_STABLE          0x40
#define OPpTRANS_GROWS          0x40
#define OPpPADRANGE_COUNTMASK   0x7f
#define OPpASSIGN_CV_TO_GV      0x80
#define OPpCOREARGS_PUSHMARK    0x80
#define OPpENTERSUB_NOPAREN     0x80
#define OPpLVALUE               0x80
#define OPpLVAL_INTRO           0x80
#define OPpOFFBYONE             0x80
#define OPpOPEN_OUT_CRLF        0x80
#define OPpPV_IS_UTF8           0x80
#define OPpSPLIT_IMPLIM         0x80
#define OPpTRANS_DELETE         0x80
START_EXTERN_C

#ifndef PERL_GLOBAL_STRUCT_INIT

#  ifndef DOINIT

/* data about the flags in op_private */

EXTCONST I16  PL_op_private_bitdef_ix[];
EXTCONST U16  PL_op_private_bitdefs[];
EXTCONST char PL_op_private_labels[];
EXTCONST I16  PL_op_private_bitfields[];
EXTCONST U8   PL_op_private_valid[];

#  else


/* PL_op_private_labels[]: the short descriptions of private flags.
 * All labels are concatenated into a single char array
 * (separated by \0's) for compactness.
 */

EXTCONST char PL_op_private_labels[] = {
    '$','M','O','D','\0',
    '+','1','\0',
    '-','\0',
    '<','U','T','F','\0',
    '>','U','T','F','\0',
    'A','M','P','E','R','\0',
    'A','V','\0',
    'B','A','R','E','\0',
    'B','K','W','A','R','D','\0',
    'B','O','O','L','\0',
    'B','O','O','L','?','\0',
    'B','Y','T','E','S','\0',
    'C','O','M','M','O','N','\0',
    'C','O','M','P','L','\0',
    'C','O','N','S','T','\0',
    'C','O','P','H','H','\0',
    'C','V','\0',
    'C','V','2','G','V','\0',
    'D','B','G','\0',
    'D','E','F','\0',
    'D','E','L','\0',
    'D','E','L','E','T','E','\0',
    'D','E','R','E','F','1','\0',
    'D','E','R','E','F','2','\0',
    'D','E','S','C','\0',
    'D','O','L','I','S','T','\0',
    'D','R','E','F','A','V','\0',
    'D','R','E','F','H','V','\0',
    'D','R','E','F','S','V','\0',
    'E','A','R','L','Y','C','V','\0',
    'E','L','E','M','\0',
    'E','N','T','E','R','E','D','\0',
    'E','X','I','S','T','S','\0',
    'F','A','K','E','\0',
    'F','T','A','C','C','E','S','S','\0',
    'F','T','A','F','T','E','R','t','\0',
    'F','T','S','T','A','C','K','E','D','\0',
    'F','T','S','T','A','C','K','I','N','G','\0',
    'G','R','E','P','L','E','X','\0',
    'G','R','O','W','S','\0',
    'G','U','E','S','S','E','D','\0',
    'H','A','S','_','H','H','\0',
    'H','U','S','H','\0',
    'H','V','\0',
    'I','D','E','N','T','\0',
    'I','M','P','L','I','M','\0',
    'I','N','A','R','G','S','\0',
    'I','N','B','I','N','\0',
    'I','N','C','R','\0',
    'I','N','P','L','A','C','E','\0',
    'I','N','T','\0',
    'I','T','E','R','\0',
    'L','I','N','E','N','U','M','\0',
    'L','V','\0',
    'L','V','D','E','F','E','R','\0',
    'L','V','I','N','T','R','O','\0',
    'L','V','S','U','B','\0',
    'M','A','R','K','\0',
    'N','O','(',')','\0',
    'N','O','I','N','I','T','\0',
    'N','O','V','E','R','\0',
    'N','U','M','\0',
    'O','U','R','I','N','T','R','\0',
    'O','U','T','B','I','N','\0',
    'O','U','T','C','R','\0',
    'Q','S','O','R','T','\0',
    'R','E','F','C','\0',
    'R','E','P','A','R','S','E','\0',
    'R','E','P','L','1','S','T','\0',
    'R','E','V','\0',
    'R','E','V','E','R','S','E','D','\0',
    'R','T','I','M','E','\0',
    'S','H','O','R','T','\0',
    'S','L','I','C','E','\0',
    'S','L','I','C','E','W','A','R','N','\0',
    'S','Q','U','A','S','H','\0',
    'S','T','A','B','L','E','\0',
    'S','T','A','T','E','\0',
    'S','T','R','I','C','T','\0',
    'S','U','B','\0',
    'S','V','\0',
    'T','A','R','G','\0',
    'T','A','R','G','M','Y','\0',
    'U','N','I','\0',
    'U','T','F','\0',

};



/* PL_op_private_bitfields[]: details about each bit field type.
 * Each definition consists of the following list of words:
 *    bitmin
 *    label (index into PL_op_private_labels[]; -1 if no label)
 *    repeat for each enum entry (if any):
 *       enum value
 *       enum label (index into PL_op_private_labels[])
 *    -1
 */

EXTCONST I16 PL_op_private_bitfields[] = {
    0, 8, -1,
    0, 8, -1,
    0, 8, -1,
    0, 8, -1,
    0, 8, -1,
    0, 8, -1,
    4, -1, 1, 137, 2, 144, 3, 151, -1,
    4, -1, 0, 495, 1, 26, 2, 264, 3, 83, -1,

};


/* PL_op_private_bitdef_ix[]: map an op number to a starting position
 * in PL_op_private_bitdefs.  If -1, the op has no bits defined */

EXTCONST I16  PL_op_private_bitdef_ix[] = {
      -1, /* null */
      -1, /* stub */
       0, /* scalar */
       1, /* pushmark */
       3, /* wantarray */
       4, /* const */
       9, /* gvsv */
      11, /* gv */
      12, /* gelem */
      13, /* padsv */
      16, /* padav */
      20, /* padhv */
      -1, /* padany */
      26, /* pushre */
      28, /* rv2gv */
      35, /* rv2sv */
      40, /* av2arylen */
      42, /* rv2cv */
      -1, /* anoncode */
       0, /* prototype */
       0, /* refgen */
       0, /* srefgen */
       0, /* ref */
      49, /* bless */
      50, /* backtick */
      49, /* glob */
       0, /* readline */
      -1, /* rcatline */
       0, /* regcmaybe */
       0, /* regcreset */
       0, /* regcomp */
      26, /* match */
      26, /* qr */
      26, /* subst */
      55, /* substcont */
      57, /* trans */
      57, /* transr */
      65, /* sassign */
      68, /* aassign */
       0, /* chop */
       0, /* schop */
      71, /* chomp */
      71, /* schomp */
       0, /* defined */
       0, /* undef */
       0, /* study */
      40, /* pos */
       0, /* preinc */
       0, /* i_preinc */
       0, /* predec */
       0, /* i_predec */
       0, /* postinc */
       0, /* i_postinc */
       0, /* postdec */
       0, /* i_postdec */
      73, /* pow */
      73, /* multiply */
      73, /* i_multiply */
      73, /* divide */
      73, /* i_divide */
      73, /* modulo */
      73, /* i_modulo */
      75, /* repeat */
      73, /* add */
      73, /* i_add */
      73, /* subtract */
      73, /* i_subtract */
      73, /* concat */
      77, /* stringify */
      73, /* left_shift */
      73, /* right_shift */
      12, /* lt */
      12, /* i_lt */
      12, /* gt */
      12, /* i_gt */
      12, /* le */
      12, /* i_le */
      12, /* ge */
      12, /* i_ge */
      12, /* eq */
      12, /* i_eq */
      12, /* ne */
      12, /* i_ne */
      12, /* ncmp */
      12, /* i_ncmp */
      12, /* slt */
      12, /* sgt */
      12, /* sle */
      12, /* sge */
      12, /* seq */
      12, /* sne */
      12, /* scmp */
      12, /* bit_and */
      12, /* bit_xor */
      12, /* bit_or */
      73, /* nbit_and */
      73, /* nbit_xor */
      73, /* nbit_or */
      12, /* sbit_and */
      12, /* sbit_xor */
      12, /* sbit_or */
       0, /* negate */
       0, /* i_negate */
       0, /* not */
       0, /* complement */
      71, /* ncomplement */
      71, /* scomplement */
      12, /* smartmatch */
      77, /* atan2 */
      71, /* sin */
      71, /* cos */
      77, /* rand */
      77, /* srand */
      71, /* exp */
      71, /* log */
      71, /* sqrt */
      71, /* int */
      71, /* hex */
      71, /* oct */
      71, /* abs */
       0, /* box_int */
       0, /* box_uint */
       0, /* box_str */
       0, /* box_num */
       0, /* unbox_int */
       0, /* unbox_uint */
       0, /* unbox_str */
       0, /* unbox_num */
      12, /* uint_lshift */
      12, /* uint_rshift */
       0, /* int_preinc */
       0, /* int_predec */
       0, /* int_postinc */
       0, /* int_postdec */
      12, /* int_add */
      12, /* int_subtract */
      12, /* int_multiply */
      12, /* int_divide */
      12, /* int_modulo */
       0, /* int_negate */
       0, /* int_not */
       0, /* int_complement */
       0, /* int_abs */
      12, /* int_lt */
      12, /* int_gt */
      12, /* int_le */
      12, /* int_ge */
      12, /* int_eq */
      12, /* int_ne */
      12, /* num_add */
      12, /* num_subtract */
      12, /* num_multiply */
      12, /* num_divide */
      12, /* num_atan2 */
       0, /* num_sin */
       0, /* num_cos */
       0, /* num_exp */
       0, /* num_log */
       0, /* num_sqrt */
      71, /* length */
      79, /* substr */
      82, /* vec */
      77, /* index */
      77, /* rindex */
      49, /* sprintf */
      49, /* formline */
      71, /* ord */
      71, /* chr */
      77, /* crypt */
       0, /* ucfirst */
       0, /* lcfirst */
       0, /* uc */
       0, /* lc */
       0, /* quotemeta */
      84, /* rv2av */
      90, /* aelemfast */
      90, /* aelemfast_lex */
      91, /* aelem */
      12, /* i_aelem */
      12, /* int_aelem */
      12, /* n_aelem */
      12, /* num_aelem */
      12, /* s_aelem */
      12, /* str_aelem */
      96, /* aslice */
      99, /* kvaslice */
       0, /* aeach */
       0, /* akeys */
       0, /* avalues */
       0, /* each */
       0, /* values */
      40, /* keys */
     100, /* delete */
     103, /* exists */
     105, /* rv2hv */
      91, /* helem */
      12, /* str_helem */
      12, /* str_delete */
      12, /* str_exists */
      96, /* hslice */
      99, /* kvhslice */
     113, /* multideref */
      49, /* unpack */
      49, /* pack */
     120, /* split */
      49, /* join */
     122, /* list */
      12, /* lslice */
      49, /* anonlist */
      49, /* anonhash */
      49, /* splice */
      77, /* push */
       0, /* pop */
       0, /* shift */
      77, /* unshift */
     124, /* sort */
     131, /* reverse */
     133, /* grepstart */
     133, /* grepwhile */
     133, /* mapstart */
     133, /* mapwhile */
       0, /* range */
     135, /* flip */
     135, /* flop */
       0, /* and */
       0, /* or */
      12, /* xor */
       0, /* dor */
     137, /* cond_expr */
       0, /* andassign */
       0, /* orassign */
       0, /* dorassign */
       0, /* method */
     139, /* entersub */
     139, /* enterxssub */
     146, /* leavesub */
     146, /* leavesublv */
     148, /* caller */
      49, /* warn */
      49, /* die */
      49, /* reset */
      -1, /* lineseq */
     150, /* nextstate */
     150, /* dbstate */
      -1, /* unstack */
      -1, /* enter */
     151, /* leave */
      -1, /* scope */
     153, /* enteriter */
     157, /* iter */
      -1, /* enterloop */
     158, /* leaveloop */
      -1, /* return */
     160, /* last */
     160, /* next */
     160, /* redo */
     160, /* dump */
     160, /* goto */
      49, /* exit */
       0, /* method_named */
       0, /* method_super */
       0, /* method_redir */
       0, /* method_redir_super */
       0, /* entergiven */
       0, /* leavegiven */
       0, /* enterwhen */
       0, /* leavewhen */
      -1, /* break */
      -1, /* continue */
     162, /* open */
      49, /* close */
      49, /* pipe_op */
      49, /* fileno */
      49, /* umask */
      49, /* binmode */
      49, /* tie */
       0, /* untie */
       0, /* tied */
      49, /* dbmopen */
       0, /* dbmclose */
      49, /* sselect */
      49, /* select */
      49, /* getc */
      49, /* read */
      49, /* enterwrite */
     146, /* leavewrite */
      -1, /* prtf */
      -1, /* print */
      -1, /* say */
      49, /* sysopen */
      49, /* sysseek */
      49, /* sysread */
      49, /* syswrite */
      49, /* eof */
      49, /* tell */
      49, /* seek */
      49, /* truncate */
      49, /* fcntl */
      49, /* ioctl */
      77, /* flock */
      49, /* send */
      49, /* recv */
      49, /* socket */
      49, /* sockpair */
      49, /* bind */
      49, /* connect */
      49, /* listen */
      49, /* accept */
      49, /* shutdown */
      49, /* gsockopt */
      49, /* ssockopt */
       0, /* getsockname */
       0, /* getpeername */
       0, /* lstat */
       0, /* stat */
     167, /* ftrread */
     167, /* ftrwrite */
     167, /* ftrexec */
     167, /* fteread */
     167, /* ftewrite */
     167, /* fteexec */
     172, /* ftis */
     172, /* ftsize */
     172, /* ftmtime */
     172, /* ftatime */
     172, /* ftctime */
     172, /* ftrowned */
     172, /* fteowned */
     172, /* ftzero */
     172, /* ftsock */
     172, /* ftchr */
     172, /* ftblk */
     172, /* ftfile */
     172, /* ftdir */
     172, /* ftpipe */
     172, /* ftsuid */
     172, /* ftsgid */
     172, /* ftsvtx */
     172, /* ftlink */
     172, /* fttty */
     172, /* fttext */
     172, /* ftbinary */
      77, /* chdir */
      77, /* chown */
      71, /* chroot */
      77, /* unlink */
      77, /* chmod */
      77, /* utime */
      77, /* rename */
      77, /* link */
      77, /* symlink */
       0, /* readlink */
      77, /* mkdir */
      71, /* rmdir */
      49, /* open_dir */
       0, /* readdir */
       0, /* telldir */
      49, /* seekdir */
       0, /* rewinddir */
       0, /* closedir */
      -1, /* fork */
     176, /* wait */
      77, /* waitpid */
      77, /* system */
      77, /* exec */
      77, /* kill */
     176, /* getppid */
      77, /* getpgrp */
      77, /* setpgrp */
      77, /* getpriority */
      77, /* setpriority */
     176, /* time */
      -1, /* tms */
       0, /* localtime */
      49, /* gmtime */
       0, /* alarm */
      77, /* sleep */
      49, /* shmget */
      49, /* shmctl */
      49, /* shmread */
      49, /* shmwrite */
      49, /* msgget */
      49, /* msgctl */
      49, /* msgsnd */
      49, /* msgrcv */
      49, /* semop */
      49, /* semget */
      49, /* semctl */
       0, /* require */
       0, /* dofile */
      -1, /* hintseval */
     177, /* entereval */
     146, /* leaveeval */
       0, /* entertry */
      -1, /* leavetry */
       0, /* ghbyname */
      49, /* ghbyaddr */
      -1, /* ghostent */
       0, /* gnbyname */
      49, /* gnbyaddr */
      -1, /* gnetent */
       0, /* gpbyname */
      49, /* gpbynumber */
      -1, /* gprotoent */
      49, /* gsbyname */
      49, /* gsbyport */
      -1, /* gservent */
       0, /* shostent */
       0, /* snetent */
       0, /* sprotoent */
       0, /* sservent */
      -1, /* ehostent */
      -1, /* enetent */
      -1, /* eprotoent */
      -1, /* eservent */
       0, /* gpwnam */
       0, /* gpwuid */
      -1, /* gpwent */
      -1, /* spwent */
      -1, /* epwent */
       0, /* ggrnam */
       0, /* ggrgid */
      -1, /* ggrent */
      -1, /* sgrent */
      -1, /* egrent */
      -1, /* getlogin */
      49, /* syscall */
       0, /* lock */
       0, /* once */
      -1, /* custom */
       0, /* reach */
      40, /* rkeys */
       0, /* rvalues */
     183, /* coreargs */
       3, /* runcv */
       0, /* fc */
      -1, /* padcv */
      -1, /* introcv */
      -1, /* clonecv */
     187, /* padrange */
     189, /* refassign */
     195, /* lvref */
     201, /* lvrefslice */
     202, /* lvavref */
       0, /* anonconst */

};



/* PL_op_private_bitdefs[]: given a starting position in this array (as
 * supplied by PL_op_private_bitdef_ix[]), each word (until a stop bit is
 * seen) defines the meaning of a particular op_private bit for a
 * particular op. Each word consists of:
 *  bit  0:     stop bit: this is the last bit def for the current op
 *  bit  1:     bitfield: if set, this defines a bit field rather than a flag
 *  bits 2..4:  unsigned number in the range 0..7 which is the bit number
 *  bits 5..15: unsigned number in the range 0..2047 which is an index
 *              into PL_op_private_labels[]    (for a flag), or
 *              into PL_op_private_bitfields[] (for a bit field)
 */

EXTCONST U16  PL_op_private_bitdefs[] = {
    0x0003, /* scalar, prototype, refgen, srefgen, ref, readline, regcmaybe, regcreset, regcomp, chop, schop, defined, undef, study, preinc, i_preinc, predec, i_predec, postinc, i_postinc, postdec, i_postdec, negate, i_negate, not, complement, box_int, box_uint, box_str, box_num, unbox_int, unbox_uint, unbox_str, unbox_num, int_preinc, int_predec, int_postinc, int_postdec, int_negate, int_not, int_complement, int_abs, num_sin, num_cos, num_exp, num_log, num_sqrt, ucfirst, lcfirst, uc, lc, quotemeta, aeach, akeys, avalues, each, values, pop, shift, range, and, or, dor, andassign, orassign, dorassign, method, method_named, method_super, method_redir, method_redir_super, entergiven, leavegiven, enterwhen, leavewhen, untie, tied, dbmclose, getsockname, getpeername, lstat, stat, readlink, readdir, telldir, rewinddir, closedir, localtime, alarm, require, dofile, entertry, ghbyname, gnbyname, gpbyname, shostent, snetent, sprotoent, sservent, gpwnam, gpwuid, ggrnam, ggrgid, lock, once, reach, rvalues, fc, anonconst */
    0x29dc, 0x3bd9, /* pushmark */
    0x00bd, /* wantarray, runcv */
    0x03b8, 0x1570, 0x3c8c, 0x3748, 0x2da5, /* const */
    0x29dc, 0x2ef9, /* gvsv */
    0x13d5, /* gv */
    0x0067, /* gelem, lt, i_lt, gt, i_gt, le, i_le, ge, i_ge, eq, i_eq, ne, i_ne, ncmp, i_ncmp, slt, sgt, sle, sge, seq, sne, scmp, bit_and, bit_xor, bit_or, sbit_and, sbit_xor, sbit_or, smartmatch, uint_lshift, uint_rshift, int_add, int_subtract, int_multiply, int_divide, int_modulo, int_lt, int_gt, int_le, int_ge, int_eq, int_ne, num_add, num_subtract, num_multiply, num_divide, num_atan2, i_aelem, int_aelem, n_aelem, num_aelem, s_aelem, str_aelem, str_helem, str_delete, str_exists, lslice, xor */
    0x29dc, 0x3bd8, 0x0257, /* padsv */
    0x29dc, 0x3bd8, 0x2acc, 0x38c9, /* padav */
    0x29dc, 0x3bd8, 0x0534, 0x05d0, 0x2acc, 0x38c9, /* padhv */
    0x3698, 0x3ef1, /* pushre, match, qr, subst */
    0x29dc, 0x1758, 0x0256, 0x2acc, 0x2cc8, 0x3c84, 0x0003, /* rv2gv */
    0x29dc, 0x2ef8, 0x0256, 0x3c84, 0x0003, /* rv2sv */
    0x2acc, 0x0003, /* av2arylen, pos, keys, rkeys */
    0x2c3c, 0x0b98, 0x08f4, 0x028c, 0x3e48, 0x3c84, 0x0003, /* rv2cv */
    0x012f, /* bless, glob, sprintf, formline, unpack, pack, join, anonlist, anonhash, splice, warn, die, reset, exit, close, pipe_op, fileno, umask, binmode, tie, dbmopen, sselect, select, getc, read, enterwrite, sysopen, sysseek, sysread, syswrite, eof, tell, seek, truncate, fcntl, ioctl, send, recv, socket, sockpair, bind, connect, listen, accept, shutdown, gsockopt, ssockopt, open_dir, seekdir, gmtime, shmget, shmctl, shmread, shmwrite, msgget, msgctl, msgsnd, msgrcv, semop, semget, semctl, ghbyaddr, gnbyaddr, gpbynumber, gsbyname, gsbyport, syscall */
    0x30dc, 0x2ff8, 0x24b4, 0x23f0, 0x0003, /* backtick */
    0x3698, 0x0003, /* substcont */
    0x0c9c, 0x1dd8, 0x0834, 0x3ef0, 0x3a0c, 0x2168, 0x01e4, 0x0141, /* trans, transr */
    0x0adc, 0x0458, 0x0067, /* sassign */
    0x0758, 0x2acc, 0x0067, /* aassign */
    0x3ef0, 0x0003, /* chomp, schomp, ncomplement, scomplement, sin, cos, exp, log, sqrt, int, hex, oct, abs, length, ord, chr, chroot, rmdir */
    0x3ef0, 0x0067, /* pow, multiply, i_multiply, divide, i_divide, modulo, i_modulo, add, i_add, subtract, i_subtract, concat, left_shift, right_shift, nbit_and, nbit_xor, nbit_or */
    0x1058, 0x0067, /* repeat */
    0x3ef0, 0x012f, /* stringify, atan2, rand, srand, index, rindex, crypt, push, unshift, flock, chdir, chown, unlink, chmod, utime, rename, link, symlink, mkdir, waitpid, system, exec, kill, getpgrp, setpgrp, getpriority, setpriority, sleep */
    0x33f0, 0x2acc, 0x00cb, /* substr */
    0x2acc, 0x0067, /* vec */
    0x29dc, 0x2ef8, 0x2acc, 0x38c8, 0x3c84, 0x0003, /* rv2av */
    0x01ff, /* aelemfast, aelemfast_lex */
    0x29dc, 0x28d8, 0x0256, 0x2acc, 0x0067, /* aelem, helem */
    0x29dc, 0x2acc, 0x38c9, /* aslice, hslice */
    0x2acd, /* kvaslice, kvhslice */
    0x29dc, 0x3818, 0x0003, /* delete */
    0x3d78, 0x0003, /* exists */
    0x29dc, 0x2ef8, 0x0534, 0x05d0, 0x2acc, 0x38c8, 0x3c84, 0x0003, /* rv2hv */
    0x29dc, 0x28d8, 0x0d14, 0x1670, 0x2acc, 0x3c84, 0x0003, /* multideref */
    0x223c, 0x2ef9, /* split */
    0x29dc, 0x1e99, /* list */
    0x3af8, 0x3194, 0x0fb0, 0x254c, 0x34e8, 0x2644, 0x2e61, /* sort */
    0x254c, 0x0003, /* reverse */
    0x1cc4, 0x0003, /* grepstart, grepwhile, mapstart, mapwhile */
    0x2778, 0x0003, /* flip, flop */
    0x29dc, 0x0003, /* cond_expr */
    0x29dc, 0x0b98, 0x0256, 0x028c, 0x3e48, 0x3c84, 0x2301, /* entersub, enterxssub */
    0x3258, 0x0003, /* leavesub, leavesublv, leavewrite, leaveeval */
    0x00bc, 0x012f, /* caller */
    0x2075, /* nextstate, dbstate */
    0x287c, 0x3259, /* leave */
    0x29dc, 0x2ef8, 0x0c0c, 0x3569, /* enteriter */
    0x3569, /* iter */
    0x287c, 0x0067, /* leaveloop */
    0x405c, 0x0003, /* last, next, redo, dump, goto */
    0x30dc, 0x2ff8, 0x24b4, 0x23f0, 0x012f, /* open */
    0x1910, 0x1b6c, 0x1a28, 0x17e4, 0x0003, /* ftrread, ftrwrite, ftrexec, fteread, ftewrite, fteexec */
    0x1910, 0x1b6c, 0x1a28, 0x0003, /* ftis, ftsize, ftmtime, ftatime, ftctime, ftrowned, fteowned, ftzero, ftsock, ftchr, ftblk, ftfile, ftdir, ftpipe, ftsuid, ftsgid, ftsvtx, ftlink, fttty, fttext, ftbinary */
    0x3ef1, /* wait, getppid, time */
    0x32f4, 0x09b0, 0x068c, 0x3fc8, 0x1f84, 0x0003, /* entereval */
    0x2b9c, 0x0018, 0x0ec4, 0x0de1, /* coreargs */
    0x29dc, 0x019b, /* padrange */
    0x29dc, 0x3bd8, 0x0376, 0x26cc, 0x14c8, 0x0067, /* refassign */
    0x29dc, 0x3bd8, 0x0376, 0x26cc, 0x14c8, 0x0003, /* lvref */
    0x29dd, /* lvrefslice */
    0x29dc, 0x3bd8, 0x0003, /* lvavref */

};


/* PL_op_private_valid: for each op, indexed by op_type, indicate which
 * flags bits in op_private are legal */

EXTCONST U8 PL_op_private_valid[] = {
    /* NULL       */ (0xff),
    /* STUB       */ (0),
    /* SCALAR     */ (OPpARG1_MASK),
    /* PUSHMARK   */ (OPpPAD_STATE|OPpLVAL_INTRO),
    /* WANTARRAY  */ (OPpOFFBYONE),
    /* CONST      */ (OPpCONST_NOVER|OPpCONST_SHORTCIRCUIT|OPpCONST_STRICT|OPpCONST_ENTERED|OPpCONST_BARE),
    /* GVSV       */ (OPpOUR_INTRO|OPpLVAL_INTRO),
    /* GV         */ (OPpEARLY_CV),
    /* GELEM      */ (OPpARG2_MASK),
    /* PADSV      */ (OPpDEREF|OPpPAD_STATE|OPpLVAL_INTRO),
    /* PADAV      */ (OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpPAD_STATE|OPpLVAL_INTRO),
    /* PADHV      */ (OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpMAYBE_TRUEBOOL|OPpTRUEBOOL|OPpPAD_STATE|OPpLVAL_INTRO),
    /* PADANY     */ (0),
    /* PUSHRE     */ (OPpTARGET_MY|OPpRUNTIME),
    /* RV2GV      */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpDONT_INIT_GV|OPpMAYBE_LVSUB|OPpDEREF|OPpALLOW_FAKE|OPpLVAL_INTRO),
    /* RV2SV      */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpDEREF|OPpOUR_INTRO|OPpLVAL_INTRO),
    /* AV2ARYLEN  */ (OPpARG1_MASK|OPpMAYBE_LVSUB),
    /* RV2CV      */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpENTERSUB_HASTARG|OPpENTERSUB_AMPER|OPpMAY_RETURN_CONSTANT|OPpENTERSUB_DB|OPpENTERSUB_NOPAREN),
    /* ANONCODE   */ (0),
    /* PROTOTYPE  */ (OPpARG1_MASK),
    /* REFGEN     */ (OPpARG1_MASK),
    /* SREFGEN    */ (OPpARG1_MASK),
    /* REF        */ (OPpARG1_MASK),
    /* BLESS      */ (OPpARG4_MASK),
    /* BACKTICK   */ (OPpARG1_MASK|OPpOPEN_IN_RAW|OPpOPEN_IN_CRLF|OPpOPEN_OUT_RAW|OPpOPEN_OUT_CRLF),
    /* GLOB       */ (OPpARG4_MASK),
    /* READLINE   */ (OPpARG1_MASK),
    /* RCATLINE   */ (0),
    /* REGCMAYBE  */ (OPpARG1_MASK),
    /* REGCRESET  */ (OPpARG1_MASK),
    /* REGCOMP    */ (OPpARG1_MASK),
    /* MATCH      */ (OPpTARGET_MY|OPpRUNTIME),
    /* QR         */ (OPpTARGET_MY|OPpRUNTIME),
    /* SUBST      */ (OPpTARGET_MY|OPpRUNTIME),
    /* SUBSTCONT  */ (OPpARG1_MASK|OPpRUNTIME),
    /* TRANS      */ (OPpTRANS_FROM_UTF|OPpTRANS_TO_UTF|OPpTRANS_IDENTICAL|OPpTRANS_SQUASH|OPpTARGET_MY|OPpTRANS_COMPLEMENT|OPpTRANS_GROWS|OPpTRANS_DELETE),
    /* TRANSR     */ (OPpTRANS_FROM_UTF|OPpTRANS_TO_UTF|OPpTRANS_IDENTICAL|OPpTRANS_SQUASH|OPpTARGET_MY|OPpTRANS_COMPLEMENT|OPpTRANS_GROWS|OPpTRANS_DELETE),
    /* SASSIGN    */ (OPpARG2_MASK|OPpASSIGN_BACKWARDS|OPpASSIGN_CV_TO_GV),
    /* AASSIGN    */ (OPpARG2_MASK|OPpMAYBE_LVSUB|OPpASSIGN_COMMON),
    /* CHOP       */ (OPpARG1_MASK),
    /* SCHOP      */ (OPpARG1_MASK),
    /* CHOMP      */ (OPpARG1_MASK|OPpTARGET_MY),
    /* SCHOMP     */ (OPpARG1_MASK|OPpTARGET_MY),
    /* DEFINED    */ (OPpARG1_MASK),
    /* UNDEF      */ (OPpARG1_MASK),
    /* STUDY      */ (OPpARG1_MASK),
    /* POS        */ (OPpARG1_MASK|OPpMAYBE_LVSUB),
    /* PREINC     */ (OPpARG1_MASK),
    /* I_PREINC   */ (OPpARG1_MASK),
    /* PREDEC     */ (OPpARG1_MASK),
    /* I_PREDEC   */ (OPpARG1_MASK),
    /* POSTINC    */ (OPpARG1_MASK),
    /* I_POSTINC  */ (OPpARG1_MASK),
    /* POSTDEC    */ (OPpARG1_MASK),
    /* I_POSTDEC  */ (OPpARG1_MASK),
    /* POW        */ (OPpARG2_MASK|OPpTARGET_MY),
    /* MULTIPLY   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* I_MULTIPLY */ (OPpARG2_MASK|OPpTARGET_MY),
    /* DIVIDE     */ (OPpARG2_MASK|OPpTARGET_MY),
    /* I_DIVIDE   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* MODULO     */ (OPpARG2_MASK|OPpTARGET_MY),
    /* I_MODULO   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* REPEAT     */ (OPpARG2_MASK|OPpREPEAT_DOLIST),
    /* ADD        */ (OPpARG2_MASK|OPpTARGET_MY),
    /* I_ADD      */ (OPpARG2_MASK|OPpTARGET_MY),
    /* SUBTRACT   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* I_SUBTRACT */ (OPpARG2_MASK|OPpTARGET_MY),
    /* CONCAT     */ (OPpARG2_MASK|OPpTARGET_MY),
    /* STRINGIFY  */ (OPpARG4_MASK|OPpTARGET_MY),
    /* LEFT_SHIFT */ (OPpARG2_MASK|OPpTARGET_MY),
    /* RIGHT_SHIFT */ (OPpARG2_MASK|OPpTARGET_MY),
    /* LT         */ (OPpARG2_MASK),
    /* I_LT       */ (OPpARG2_MASK),
    /* GT         */ (OPpARG2_MASK),
    /* I_GT       */ (OPpARG2_MASK),
    /* LE         */ (OPpARG2_MASK),
    /* I_LE       */ (OPpARG2_MASK),
    /* GE         */ (OPpARG2_MASK),
    /* I_GE       */ (OPpARG2_MASK),
    /* EQ         */ (OPpARG2_MASK),
    /* I_EQ       */ (OPpARG2_MASK),
    /* NE         */ (OPpARG2_MASK),
    /* I_NE       */ (OPpARG2_MASK),
    /* NCMP       */ (OPpARG2_MASK),
    /* I_NCMP     */ (OPpARG2_MASK),
    /* SLT        */ (OPpARG2_MASK),
    /* SGT        */ (OPpARG2_MASK),
    /* SLE        */ (OPpARG2_MASK),
    /* SGE        */ (OPpARG2_MASK),
    /* SEQ        */ (OPpARG2_MASK),
    /* SNE        */ (OPpARG2_MASK),
    /* SCMP       */ (OPpARG2_MASK),
    /* BIT_AND    */ (OPpARG2_MASK),
    /* BIT_XOR    */ (OPpARG2_MASK),
    /* BIT_OR     */ (OPpARG2_MASK),
    /* NBIT_AND   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* NBIT_XOR   */ (OPpARG2_MASK|OPpTARGET_MY),
    /* NBIT_OR    */ (OPpARG2_MASK|OPpTARGET_MY),
    /* SBIT_AND   */ (OPpARG2_MASK),
    /* SBIT_XOR   */ (OPpARG2_MASK),
    /* SBIT_OR    */ (OPpARG2_MASK),
    /* NEGATE     */ (OPpARG1_MASK),
    /* I_NEGATE   */ (OPpARG1_MASK),
    /* NOT        */ (OPpARG1_MASK),
    /* COMPLEMENT */ (OPpARG1_MASK),
    /* NCOMPLEMENT */ (OPpARG1_MASK|OPpTARGET_MY),
    /* SCOMPLEMENT */ (OPpARG1_MASK|OPpTARGET_MY),
    /* SMARTMATCH */ (OPpARG2_MASK),
    /* ATAN2      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SIN        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* COS        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* RAND       */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SRAND      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* EXP        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* LOG        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* SQRT       */ (OPpARG1_MASK|OPpTARGET_MY),
    /* INT        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* HEX        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* OCT        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* ABS        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* BOX_INT    */ (OPpARG1_MASK),
    /* BOX_UINT   */ (OPpARG1_MASK),
    /* BOX_STR    */ (OPpARG1_MASK),
    /* BOX_NUM    */ (OPpARG1_MASK),
    /* UNBOX_INT  */ (OPpARG1_MASK),
    /* UNBOX_UINT */ (OPpARG1_MASK),
    /* UNBOX_STR  */ (OPpARG1_MASK),
    /* UNBOX_NUM  */ (OPpARG1_MASK),
    /* UINT_LSHIFT */ (OPpARG2_MASK),
    /* UINT_RSHIFT */ (OPpARG2_MASK),
    /* INT_PREINC */ (OPpARG1_MASK),
    /* INT_PREDEC */ (OPpARG1_MASK),
    /* INT_POSTINC */ (OPpARG1_MASK),
    /* INT_POSTDEC */ (OPpARG1_MASK),
    /* INT_ADD    */ (OPpARG2_MASK),
    /* INT_SUBTRACT */ (OPpARG2_MASK),
    /* INT_MULTIPLY */ (OPpARG2_MASK),
    /* INT_DIVIDE */ (OPpARG2_MASK),
    /* INT_MODULO */ (OPpARG2_MASK),
    /* INT_NEGATE */ (OPpARG1_MASK),
    /* INT_NOT    */ (OPpARG1_MASK),
    /* INT_COMPLEMENT */ (OPpARG1_MASK),
    /* INT_ABS    */ (OPpARG1_MASK),
    /* INT_LT     */ (OPpARG2_MASK),
    /* INT_GT     */ (OPpARG2_MASK),
    /* INT_LE     */ (OPpARG2_MASK),
    /* INT_GE     */ (OPpARG2_MASK),
    /* INT_EQ     */ (OPpARG2_MASK),
    /* INT_NE     */ (OPpARG2_MASK),
    /* NUM_ADD    */ (OPpARG2_MASK),
    /* NUM_SUBTRACT */ (OPpARG2_MASK),
    /* NUM_MULTIPLY */ (OPpARG2_MASK),
    /* NUM_DIVIDE */ (OPpARG2_MASK),
    /* NUM_ATAN2  */ (OPpARG2_MASK),
    /* NUM_SIN    */ (OPpARG1_MASK),
    /* NUM_COS    */ (OPpARG1_MASK),
    /* NUM_EXP    */ (OPpARG1_MASK),
    /* NUM_LOG    */ (OPpARG1_MASK),
    /* NUM_SQRT   */ (OPpARG1_MASK),
    /* LENGTH     */ (OPpARG1_MASK|OPpTARGET_MY),
    /* SUBSTR     */ (OPpARG3_MASK|OPpMAYBE_LVSUB|OPpSUBSTR_REPL_FIRST),
    /* VEC        */ (OPpARG2_MASK|OPpMAYBE_LVSUB),
    /* INDEX      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* RINDEX     */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SPRINTF    */ (OPpARG4_MASK),
    /* FORMLINE   */ (OPpARG4_MASK),
    /* ORD        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* CHR        */ (OPpARG1_MASK|OPpTARGET_MY),
    /* CRYPT      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* UCFIRST    */ (OPpARG1_MASK),
    /* LCFIRST    */ (OPpARG1_MASK),
    /* UC         */ (OPpARG1_MASK),
    /* LC         */ (OPpARG1_MASK),
    /* QUOTEMETA  */ (OPpARG1_MASK),
    /* RV2AV      */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpOUR_INTRO|OPpLVAL_INTRO),
    /* AELEMFAST  */ (255),
    /* AELEMFAST_LEX */ (255),
    /* AELEM      */ (OPpARG2_MASK|OPpMAYBE_LVSUB|OPpDEREF|OPpLVAL_DEFER|OPpLVAL_INTRO),
    /* I_AELEM    */ (OPpARG2_MASK),
    /* INT_AELEM  */ (OPpARG2_MASK),
    /* N_AELEM    */ (OPpARG2_MASK),
    /* NUM_AELEM  */ (OPpARG2_MASK),
    /* S_AELEM    */ (OPpARG2_MASK),
    /* STR_AELEM  */ (OPpARG2_MASK),
    /* ASLICE     */ (OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpLVAL_INTRO),
    /* KVASLICE   */ (OPpMAYBE_LVSUB),
    /* AEACH      */ (OPpARG1_MASK),
    /* AKEYS      */ (OPpARG1_MASK),
    /* AVALUES    */ (OPpARG1_MASK),
    /* EACH       */ (OPpARG1_MASK),
    /* VALUES     */ (OPpARG1_MASK),
    /* KEYS       */ (OPpARG1_MASK|OPpMAYBE_LVSUB),
    /* DELETE     */ (OPpARG1_MASK|OPpSLICE|OPpLVAL_INTRO),
    /* EXISTS     */ (OPpARG1_MASK|OPpEXISTS_SUB),
    /* RV2HV      */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpMAYBE_TRUEBOOL|OPpTRUEBOOL|OPpOUR_INTRO|OPpLVAL_INTRO),
    /* HELEM      */ (OPpARG2_MASK|OPpMAYBE_LVSUB|OPpDEREF|OPpLVAL_DEFER|OPpLVAL_INTRO),
    /* STR_HELEM  */ (OPpARG2_MASK),
    /* STR_DELETE */ (OPpARG2_MASK),
    /* STR_EXISTS */ (OPpARG2_MASK),
    /* HSLICE     */ (OPpSLICEWARNING|OPpMAYBE_LVSUB|OPpLVAL_INTRO),
    /* KVHSLICE   */ (OPpMAYBE_LVSUB),
    /* MULTIDEREF */ (OPpARG1_MASK|OPpHINT_STRICT_REFS|OPpMAYBE_LVSUB|OPpMULTIDEREF_EXISTS|OPpMULTIDEREF_DELETE|OPpLVAL_DEFER|OPpLVAL_INTRO),
    /* UNPACK     */ (OPpARG4_MASK),
    /* PACK       */ (OPpARG4_MASK),
    /* SPLIT      */ (OPpOUR_INTRO|OPpSPLIT_IMPLIM),
    /* JOIN       */ (OPpARG4_MASK),
    /* LIST       */ (OPpLIST_GUESSED|OPpLVAL_INTRO),
    /* LSLICE     */ (OPpARG2_MASK),
    /* ANONLIST   */ (OPpARG4_MASK),
    /* ANONHASH   */ (OPpARG4_MASK),
    /* SPLICE     */ (OPpARG4_MASK),
    /* PUSH       */ (OPpARG4_MASK|OPpTARGET_MY),
    /* POP        */ (OPpARG1_MASK),
    /* SHIFT      */ (OPpARG1_MASK),
    /* UNSHIFT    */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SORT       */ (OPpSORT_NUMERIC|OPpSORT_INTEGER|OPpSORT_REVERSE|OPpSORT_INPLACE|OPpSORT_DESCEND|OPpSORT_QSORT|OPpSORT_STABLE),
    /* REVERSE    */ (OPpARG1_MASK|OPpREVERSE_INPLACE),
    /* GREPSTART  */ (OPpARG1_MASK|OPpGREP_LEX),
    /* GREPWHILE  */ (OPpARG1_MASK|OPpGREP_LEX),
    /* MAPSTART   */ (OPpARG1_MASK|OPpGREP_LEX),
    /* MAPWHILE   */ (OPpARG1_MASK|OPpGREP_LEX),
    /* RANGE      */ (OPpARG1_MASK),
    /* FLIP       */ (OPpARG1_MASK|OPpFLIP_LINENUM),
    /* FLOP       */ (OPpARG1_MASK|OPpFLIP_LINENUM),
    /* AND        */ (OPpARG1_MASK),
    /* OR         */ (OPpARG1_MASK),
    /* XOR        */ (OPpARG2_MASK),
    /* DOR        */ (OPpARG1_MASK),
    /* COND_EXPR  */ (OPpARG1_MASK|OPpLVAL_INTRO),
    /* ANDASSIGN  */ (OPpARG1_MASK),
    /* ORASSIGN   */ (OPpARG1_MASK),
    /* DORASSIGN  */ (OPpARG1_MASK),
    /* METHOD     */ (OPpARG1_MASK),
    /* ENTERSUB   */ (OPpENTERSUB_INARGS|OPpHINT_STRICT_REFS|OPpENTERSUB_HASTARG|OPpENTERSUB_AMPER|OPpDEREF|OPpENTERSUB_DB|OPpLVAL_INTRO),
    /* ENTERXSSUB */ (OPpENTERSUB_INARGS|OPpHINT_STRICT_REFS|OPpENTERSUB_HASTARG|OPpENTERSUB_AMPER|OPpDEREF|OPpENTERSUB_DB|OPpLVAL_INTRO),
    /* LEAVESUB   */ (OPpARG1_MASK|OPpREFCOUNTED),
    /* LEAVESUBLV */ (OPpARG1_MASK|OPpREFCOUNTED),
    /* CALLER     */ (OPpARG4_MASK|OPpOFFBYONE),
    /* WARN       */ (OPpARG4_MASK),
    /* DIE        */ (OPpARG4_MASK),
    /* RESET      */ (OPpARG4_MASK),
    /* LINESEQ    */ (0),
    /* NEXTSTATE  */ (OPpHUSH_VMSISH),
    /* DBSTATE    */ (OPpHUSH_VMSISH),
    /* UNSTACK    */ (0),
    /* ENTER      */ (0),
    /* LEAVE      */ (OPpREFCOUNTED|OPpLVALUE),
    /* SCOPE      */ (0),
    /* ENTERITER  */ (OPpITER_REVERSED|OPpITER_DEF|OPpOUR_INTRO|OPpLVAL_INTRO),
    /* ITER       */ (OPpITER_REVERSED),
    /* ENTERLOOP  */ (0),
    /* LEAVELOOP  */ (OPpARG2_MASK|OPpLVALUE),
    /* RETURN     */ (0),
    /* LAST       */ (OPpARG1_MASK|OPpPV_IS_UTF8),
    /* NEXT       */ (OPpARG1_MASK|OPpPV_IS_UTF8),
    /* REDO       */ (OPpARG1_MASK|OPpPV_IS_UTF8),
    /* DUMP       */ (OPpARG1_MASK|OPpPV_IS_UTF8),
    /* GOTO       */ (OPpARG1_MASK|OPpPV_IS_UTF8),
    /* EXIT       */ (OPpARG4_MASK),
    /* METHOD_NAMED */ (OPpARG1_MASK),
    /* METHOD_SUPER */ (OPpARG1_MASK),
    /* METHOD_REDIR */ (OPpARG1_MASK),
    /* METHOD_REDIR_SUPER */ (OPpARG1_MASK),
    /* ENTERGIVEN */ (OPpARG1_MASK),
    /* LEAVEGIVEN */ (OPpARG1_MASK),
    /* ENTERWHEN  */ (OPpARG1_MASK),
    /* LEAVEWHEN  */ (OPpARG1_MASK),
    /* BREAK      */ (0),
    /* CONTINUE   */ (0),
    /* OPEN       */ (OPpARG4_MASK|OPpOPEN_IN_RAW|OPpOPEN_IN_CRLF|OPpOPEN_OUT_RAW|OPpOPEN_OUT_CRLF),
    /* CLOSE      */ (OPpARG4_MASK),
    /* PIPE_OP    */ (OPpARG4_MASK),
    /* FILENO     */ (OPpARG4_MASK),
    /* UMASK      */ (OPpARG4_MASK),
    /* BINMODE    */ (OPpARG4_MASK),
    /* TIE        */ (OPpARG4_MASK),
    /* UNTIE      */ (OPpARG1_MASK),
    /* TIED       */ (OPpARG1_MASK),
    /* DBMOPEN    */ (OPpARG4_MASK),
    /* DBMCLOSE   */ (OPpARG1_MASK),
    /* SSELECT    */ (OPpARG4_MASK),
    /* SELECT     */ (OPpARG4_MASK),
    /* GETC       */ (OPpARG4_MASK),
    /* READ       */ (OPpARG4_MASK),
    /* ENTERWRITE */ (OPpARG4_MASK),
    /* LEAVEWRITE */ (OPpARG1_MASK|OPpREFCOUNTED),
    /* PRTF       */ (0),
    /* PRINT      */ (0),
    /* SAY        */ (0),
    /* SYSOPEN    */ (OPpARG4_MASK),
    /* SYSSEEK    */ (OPpARG4_MASK),
    /* SYSREAD    */ (OPpARG4_MASK),
    /* SYSWRITE   */ (OPpARG4_MASK),
    /* EOF        */ (OPpARG4_MASK),
    /* TELL       */ (OPpARG4_MASK),
    /* SEEK       */ (OPpARG4_MASK),
    /* TRUNCATE   */ (OPpARG4_MASK),
    /* FCNTL      */ (OPpARG4_MASK),
    /* IOCTL      */ (OPpARG4_MASK),
    /* FLOCK      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SEND       */ (OPpARG4_MASK),
    /* RECV       */ (OPpARG4_MASK),
    /* SOCKET     */ (OPpARG4_MASK),
    /* SOCKPAIR   */ (OPpARG4_MASK),
    /* BIND       */ (OPpARG4_MASK),
    /* CONNECT    */ (OPpARG4_MASK),
    /* LISTEN     */ (OPpARG4_MASK),
    /* ACCEPT     */ (OPpARG4_MASK),
    /* SHUTDOWN   */ (OPpARG4_MASK),
    /* GSOCKOPT   */ (OPpARG4_MASK),
    /* SSOCKOPT   */ (OPpARG4_MASK),
    /* GETSOCKNAME */ (OPpARG1_MASK),
    /* GETPEERNAME */ (OPpARG1_MASK),
    /* LSTAT      */ (OPpARG1_MASK),
    /* STAT       */ (OPpARG1_MASK),
    /* FTRREAD    */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTRWRITE   */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTREXEC    */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTEREAD    */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTEWRITE   */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTEEXEC    */ (OPpARG1_MASK|OPpFT_ACCESS|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTIS       */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTSIZE     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTMTIME    */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTATIME    */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTCTIME    */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTROWNED   */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTEOWNED   */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTZERO     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTSOCK     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTCHR      */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTBLK      */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTFILE     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTDIR      */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTPIPE     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTSUID     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTSGID     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTSVTX     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTLINK     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTTTY      */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTTEXT     */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* FTBINARY   */ (OPpARG1_MASK|OPpFT_STACKED|OPpFT_STACKING|OPpFT_AFTER_t),
    /* CHDIR      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* CHOWN      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* CHROOT     */ (OPpARG1_MASK|OPpTARGET_MY),
    /* UNLINK     */ (OPpARG4_MASK|OPpTARGET_MY),
    /* CHMOD      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* UTIME      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* RENAME     */ (OPpARG4_MASK|OPpTARGET_MY),
    /* LINK       */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SYMLINK    */ (OPpARG4_MASK|OPpTARGET_MY),
    /* READLINK   */ (OPpARG1_MASK),
    /* MKDIR      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* RMDIR      */ (OPpARG1_MASK|OPpTARGET_MY),
    /* OPEN_DIR   */ (OPpARG4_MASK),
    /* READDIR    */ (OPpARG1_MASK),
    /* TELLDIR    */ (OPpARG1_MASK),
    /* SEEKDIR    */ (OPpARG4_MASK),
    /* REWINDDIR  */ (OPpARG1_MASK),
    /* CLOSEDIR   */ (OPpARG1_MASK),
    /* FORK       */ (0),
    /* WAIT       */ (OPpTARGET_MY),
    /* WAITPID    */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SYSTEM     */ (OPpARG4_MASK|OPpTARGET_MY),
    /* EXEC       */ (OPpARG4_MASK|OPpTARGET_MY),
    /* KILL       */ (OPpARG4_MASK|OPpTARGET_MY),
    /* GETPPID    */ (OPpTARGET_MY),
    /* GETPGRP    */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SETPGRP    */ (OPpARG4_MASK|OPpTARGET_MY),
    /* GETPRIORITY */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SETPRIORITY */ (OPpARG4_MASK|OPpTARGET_MY),
    /* TIME       */ (OPpTARGET_MY),
    /* TMS        */ (0),
    /* LOCALTIME  */ (OPpARG1_MASK),
    /* GMTIME     */ (OPpARG4_MASK),
    /* ALARM      */ (OPpARG1_MASK),
    /* SLEEP      */ (OPpARG4_MASK|OPpTARGET_MY),
    /* SHMGET     */ (OPpARG4_MASK),
    /* SHMCTL     */ (OPpARG4_MASK),
    /* SHMREAD    */ (OPpARG4_MASK),
    /* SHMWRITE   */ (OPpARG4_MASK),
    /* MSGGET     */ (OPpARG4_MASK),
    /* MSGCTL     */ (OPpARG4_MASK),
    /* MSGSND     */ (OPpARG4_MASK),
    /* MSGRCV     */ (OPpARG4_MASK),
    /* SEMOP      */ (OPpARG4_MASK),
    /* SEMGET     */ (OPpARG4_MASK),
    /* SEMCTL     */ (OPpARG4_MASK),
    /* REQUIRE    */ (OPpARG1_MASK),
    /* DOFILE     */ (OPpARG1_MASK),
    /* HINTSEVAL  */ (0),
    /* ENTEREVAL  */ (OPpARG1_MASK|OPpEVAL_HAS_HH|OPpEVAL_UNICODE|OPpEVAL_BYTES|OPpEVAL_COPHH|OPpEVAL_RE_REPARSING),
    /* LEAVEEVAL  */ (OPpARG1_MASK|OPpREFCOUNTED),
    /* ENTERTRY   */ (OPpARG1_MASK),
    /* LEAVETRY   */ (0),
    /* GHBYNAME   */ (OPpARG1_MASK),
    /* GHBYADDR   */ (OPpARG4_MASK),
    /* GHOSTENT   */ (0),
    /* GNBYNAME   */ (OPpARG1_MASK),
    /* GNBYADDR   */ (OPpARG4_MASK),
    /* GNETENT    */ (0),
    /* GPBYNAME   */ (OPpARG1_MASK),
    /* GPBYNUMBER */ (OPpARG4_MASK),
    /* GPROTOENT  */ (0),
    /* GSBYNAME   */ (OPpARG4_MASK),
    /* GSBYPORT   */ (OPpARG4_MASK),
    /* GSERVENT   */ (0),
    /* SHOSTENT   */ (OPpARG1_MASK),
    /* SNETENT    */ (OPpARG1_MASK),
    /* SPROTOENT  */ (OPpARG1_MASK),
    /* SSERVENT   */ (OPpARG1_MASK),
    /* EHOSTENT   */ (0),
    /* ENETENT    */ (0),
    /* EPROTOENT  */ (0),
    /* ESERVENT   */ (0),
    /* GPWNAM     */ (OPpARG1_MASK),
    /* GPWUID     */ (OPpARG1_MASK),
    /* GPWENT     */ (0),
    /* SPWENT     */ (0),
    /* EPWENT     */ (0),
    /* GGRNAM     */ (OPpARG1_MASK),
    /* GGRGID     */ (OPpARG1_MASK),
    /* GGRENT     */ (0),
    /* SGRENT     */ (0),
    /* EGRENT     */ (0),
    /* GETLOGIN   */ (0),
    /* SYSCALL    */ (OPpARG4_MASK),
    /* LOCK       */ (OPpARG1_MASK),
    /* ONCE       */ (OPpARG1_MASK),
    /* CUSTOM     */ (0xff),
    /* REACH      */ (OPpARG1_MASK),
    /* RKEYS      */ (OPpARG1_MASK|OPpMAYBE_LVSUB),
    /* RVALUES    */ (OPpARG1_MASK),
    /* COREARGS   */ (OPpCOREARGS_DEREF1|OPpCOREARGS_DEREF2|OPpCOREARGS_SCALARMOD|OPpCOREARGS_PUSHMARK),
    /* RUNCV      */ (OPpOFFBYONE),
    /* FC         */ (OPpARG1_MASK),
    /* PADCV      */ (0),
    /* INTROCV    */ (0),
    /* CLONECV    */ (0),
    /* PADRANGE   */ (OPpPADRANGE_COUNTMASK|OPpLVAL_INTRO),
    /* REFASSIGN  */ (OPpARG2_MASK|OPpLVREF_ELEM|OPpLVREF_ITER|OPpLVREF_TYPE|OPpPAD_STATE|OPpLVAL_INTRO),
    /* LVREF      */ (OPpARG1_MASK|OPpLVREF_ELEM|OPpLVREF_ITER|OPpLVREF_TYPE|OPpPAD_STATE|OPpLVAL_INTRO),
    /* LVREFSLICE */ (OPpLVAL_INTRO),
    /* LVAVREF    */ (OPpARG1_MASK|OPpPAD_STATE|OPpLVAL_INTRO),
    /* ANONCONST  */ (OPpARG1_MASK),

};

#  endif /* !DOINIT */
#endif /* !PERL_GLOBAL_STRUCT_INIT */

END_EXTERN_C



/* ex: set ro: */
