{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1493816360,"metadata":{"github-id":"MDU6SXNzdWUyMjU5Nzc0NDc=","github-url":"https://github.com/perl11/cperl/issues/275","origin":"github"},"title":"fix the slow power2 calc in hv_ksplit","message":"with something faster than\n```\n   while ((newsize \u0026 (1 + ~newsize)) != newsize) {\n        newsize \u0026= ~(newsize \u0026 (1 + ~newsize));\t/* get proper power of 2 */\n    }\n    if (newsize \u003c newmax)\n\tnewsize *= 2;\n```\nThis is 2x faster: `1 \u003c\u003c ceil(log2(newsize))`.\nThis is a fallback without log2: `1 \u003c\u003c (U32)ceil((double)Perl_log((NV)k) * M_LOG2E)`\nThis is 10^8x faster: `1 \u003c\u003c (32 - __builtin_clz(newsize-1))`\n\nSee the TEST_POWER2 code in the study_shrink branch.\n\n----\n\nAlso fix the wrong overflow code for the largest possible hash: \n```\n    if (newsize \u003c newmax)\n\treturn;\t\t\t\t\t/* overflow detection */\n```\nwith \n```\n    if (newsize \u003c newmax)\n\tnewsize = U32_MAX;\t\t/* overflow detection */\n```","files":null}]}