{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1441997617,"metadata":{"github-id":"MDU6SXNzdWUxMDYwNzA1Mjc=","github-url":"https://github.com/perl11/cperl/issues/20","origin":"github"},"title":"use stricter","message":"stricter than strict. Fatalize stricter and misc warnings.\nlike javascript strong mode, but not so strict.\nSee https://github.com/rurban/stricter/\n\n```\nmy (@a, $x) = (0, 1);\n```\n\n=\u003e ERROR: Wrong slurpy assignment with @a in LIST, leaving $x uninitialized\n\nFATAL misc:\n\n```\nmy (%h) = 0; \n```\n\n=\u003e ERROR: Odd number of elements in hash assignment\n\nuse stricter adds stricter compile-time checks than strict, enables the default warnings, enables no multidimensional and fatalizes the compile-time warnings from this stricter and the misc category.\n\n```\nuse stricter;\n```\n\nmight be a better replacement for the typical idiom:\n\n```\nuse strict;\nuse warnings;\n```\n# plus\n\n```\nno multidimensional;\nuse warnings 'FATAL' =\u003e qw(stricter misc);\n```\n\ncommon::sense or strictures are similar but have misleading or bad names, and do not catch wrong slurpy assignments.\n\nstricter adds a new warnings category stricter, and throws a warning on the \"Possibly\" cases. In the non \"Possibly\" cases the warnings are FATAL.","files":null}]}