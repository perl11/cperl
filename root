{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1503739720,"metadata":{"github-id":"MDU6SXNzdWUyNTMwNzg1MjM=","github-url":"https://github.com/perl11/cperl/issues/329","origin":"github"},"title":"Optimize static methods to subs","message":"Was CM-885, part of the GH #23 inliner.\n\nSee http://blogs.perl.org/users/rurban/2011/06/how-perl-calls-subs-and-methods.html\n*It is better to do it with the inline peep check, and not in ck_subr.* (Now changed back to ck_subr)\nSo if any stash already contains the method, use it. No other stash can interfer with that during run-time method-dispatch.\n\nBut we cannot use the $obj-\u003emethod type info, because $obj may be a subtype\nof the declared type, which may have a different method.\n\nAdd several smaller optims:\n* convert pushmark-gv(packagename)-args-method_named(GV)-entersub\n  to pushmark-gv(packagename)-args-gv(GV)-entersub\n\n* use the faster cvref not the gv. the biggest problem was that destroying \u0026main::BEGIN cleared the attached GV (missing refcount bump): \nNot when a static method is allowed to be redefined. perlcc -O3 may disallow this for perf. reasons.\nt/op/symbolcache.t wants to redefine a sub at run-time and this can only be caught with the GV, not the old cvref.\n\n* convert entersub to enterxssub for XS methods.\n\n* detect class subs called as methods at compile-time already.\n\n* using a gv ALIAS e.g. *Carp::Import{CV} pointing to \u0026Exporter::import is forbidden. This needs to be resolved by method_named. \n\nThis should be merged earlier than the inliner, because the stable parts are needed for other branches to go on. `op_clone()` is needed to clone roles #311.","files":null}]}