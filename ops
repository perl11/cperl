{"version":1,"ops":[{"type":1,"author":{"id":"81b853802ee58295b1b56dc1253b74e7b177b9de"},"timestamp":1465057827,"metadata":{"github-id":"MDU6SXNzdWUxNTg1MTIxNDM=","github-url":"https://github.com/perl11/cperl/issues/151","origin":"github"},"title":"win32 File::Spec::Functions::rel2abs signature off-by-one SP (wrong hassig)","message":"https://ci.appveyor.com/project/rurban/cperl/build/5.24.0.1223/job/p6qutdc4a9sg0cgl\n\n```\n    link -out:..\\miniperl.exe @C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\nm4939.tmp\nGenerating code\nFinished generating code\nif exist ..\\miniperl.exe.manifest mt -nologo -manifest ..\\miniperl.exe.manifest -outputresource:..\\miniperl.exe;1 \u0026\u0026 if exist ..\\miniperl.exe.manifest del ..\\miniperl.exe.manifest\n..\\miniperl.exe -I..\\lib -f ..\\write_buildcustomize.pl ..\nPrototype mismatch: sub Cwd::fastgetcwd: none vs () at dist/PathTools/Cwd.pm line 690.\nPrototype mismatch: sub Cwd::cwd: none vs () at dist/PathTools/Cwd.pm line 690.\nCan't locate object method \"file_name_is_absolute\" via package \"lib\" (perhaps you forgot to load \"lib\"?) at dist/PathTools/lib/File/Spec/Win32.pm line 313.\nNMAKE : fatal error U1077: '..\\miniperl.exe' : return code '0xff'\nStop.\nCommand exited with code 2\n```\n\nThe \"Prototype mismatch: sub Cwd::cwd: none vs () at dist/PathTools/Cwd.pm line 690.\" is a warning that I dont think affects the problem. a `sub cwd ();` fixes it in `dist/PathTools/Cwd.pm`.\n\nA backtrace shows \n\nC:\\sources\\cperl\\win32\u003e..\\miniperl.exe -I..\\lib -f ..\\write_buildcustomize.pl ..\n\n```\n        File::Spec::Win32::rel2abs(** Incomplete caller override detected; @DB::\nargs were not set **) called at dist/PathTools/lib/File/Spec/Functions.pm line 6\n2\n        File::Spec::Functions::__ANON__(\"lib\", \"C:/sources/cperl\") called at ..\\\nwrite_buildcustomize.pl line 68\nSV = PV(0x958348) at 0xa37ab0\n  REFCNT = 1\n  FLAGS = 0x10004403 (POK,IsCOW,pPOK)\n  PV = 0xa19fe8 \"lib\"\\0\n  CUR = 3\n  LEN = 7\n  COW_REFCNT = 1\nCan't locate object method \"file_name_is_absolute\" via package \"lib\" (perhaps yo\nu forgot to load \"lib\"?) at dist/PathTools/lib/File/Spec/Win32.pm line 317.\n```\n\nSo method `rel2abs` in dist/PathTools/lib/File/Spec/Win32.pm isn't getting a class name from the sub to method translator stub sub created in File::Spec::Functions\n\n```\nforeach my $meth (@EXPORT, @EXPORT_OK) {\n    my $sub = File::Spec-\u003ecan($meth);\n    no strict 'refs';\n    if (exists($udeps{$meth}) \u0026\u0026 $sub == File::Spec::Unix-\u003ecan($meth) \u0026\u0026\n        !(grep {\n        File::Spec-\u003ecan($_) != File::Spec::Unix-\u003ecan($_)\n        } @{$udeps{$meth}}) \u0026\u0026\n        defined(\u0026{\"File::Spec::Unix::_fn_$meth\"})) {\n    *{$meth} = \\\u0026{\"File::Spec::Unix::_fn_$meth\"};\n    } else {\n    *{$meth} = sub {\u0026$sub('File::Spec', @_)};\n    }\n}\n```\n\nThe `File::Spec::Functions::rel2abs($_, $cwd)` in write_buildcustomize.pl seems correct as the idiom is used on CPAN in many places http://grep.cpan.me/?q=%3A%3Arel2abs . I dont know enough about prototypes/sigs/cperl sigs to understand the problem. But it seems like `*{$meth} = sub {\u0026$sub('File::Spec', @_)};` is actually executing like`*{$meth} = sub {\u0026$sub(@_)};`","files":null}]}