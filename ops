{"version":1,"ops":[{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544083477,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTI5Mzc4Ng=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer.\n\nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544083564,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTI5NDIzNA=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. Ep. since it's not only heap  but mostly stack sensitive (execve).\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544083807,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTI5NTQ2OA=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544172990,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTc4NjU2Mw=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544176051,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTgwNDM5MQ=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28\nmusl and libc rely in the kernel to catch overlarge env, but not every system is linux.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544176086,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTgwNDYxMg=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28\nmusl and glibc rely in the kernel to catch overlarge env, but not every system is linux.","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544176283,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTgwNTc2Mw=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28\nmusl and glibc rely in the kernel to catch overlarge env, but not every system is linux.\nSee also the POSIX rationale not to restrict to ARG_MAX those times, which does not apply to us.\nhttp://pubs.opengroup.org/onlinepubs/9699919799/functions/setenv.html\n  _The standard developers considered requiring that setenv() indicate an error when a call to it would result in exceeding {ARG_MAX}. The requirement was rejected since the condition might be temporary, with the application eventually reducing the environment size. The ultimate success or failure depends on the size at the time of a call to exec, which returns an indication of this error condition._","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544176457,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTgwNjc4Mg=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n* https://blog.dnsimple.com/2018/05/using-environment-as-configuration/\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28\nmusl and glibc rely in the kernel to catch overlarge env, but not every system is linux.\nSee also the POSIX rationale not to restrict to ARG_MAX those times, which does not apply to us.\nhttp://pubs.opengroup.org/onlinepubs/9699919799/functions/setenv.html\n  _The standard developers considered requiring that setenv() indicate an error when a call to it would result in exceeding {ARG_MAX}. The requirement was rejected since the condition might be temporary, with the application eventually reducing the environment size. The ultimate success or failure depends on the size at the time of a call to exec, which returns an indication of this error condition._","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544204141,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE1OTk3NDEwOA=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"p5p decided to allow ENV sizes of 1^32-1 in https://rt.perl.org/Public/Bug/Display.html?id=133204\nHowever the system limit seems to be ARG_MAX, see https://www.in-ulm.de/~mascheck/various/argmax/ which is a much lower and safer value. ~128KB\nEsp. since it's not only heap  but mostly stack sensitive (execve).\nIf you grow the environment too large, you may be unable to exec other programs properly - either the environment will be truncated or the exec operation will fail.\n\n* linux also has MAX_ARG_STRLEN\n* https://lists.gnu.org/archive/html/bug-make/2009-07/msg00012.html\n* https://blog.dnsimple.com/2018/05/using-environment-as-configuration/\n \nI think we should rather restrict it statically at ARG_MAX, even if the dynamic cfg would allow more.\nneeds to be backported to 5.26 and 5.28\nmusl and glibc rely in the kernel to catch overlarge env, but not every system is linux.\nSee also the POSIX rationale not to restrict to ARG_MAX those times, which does not apply to us.\nhttp://pubs.opengroup.org/onlinepubs/9699919799/functions/setenv.html\n  _The standard developers considered requiring that setenv() indicate an error when a call to it would result in exceeding {ARG_MAX}. The requirement was rejected since the condition might be temporary, with the application eventually reducing the environment size. The ultimate success or failure depends on the size at the time of a call to exec, which returns an indication of this error condition._","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143343,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU3NzM0OQ=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm `cperl5.28.1-nt -V::archlib:`/`cperl5.28.1-nt -V::libperl:`\" | grep Perl_is_uni_\nis missing. compare to 5.28.0\ne.g. Perl_is_uni_upper","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143343,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU3NzM1MA=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm `cperl5.28.1-nt -V::archlib:`/`cperl5.28.1-nt -V::libperl:`\" | grep Perl_is_uni_\nis missing, because of -DNO_MATHOMS. \ncompare to 5.28.0, e.g. Perl_is_uni_upper","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143396,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU3NzYyNg=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm `cperl5.28.1-nt -V::archlib:`/`cperl5.28.1-nt -V::libperl:`\" | grep Perl_is_uni_\nis missing, because of -DNO_MATHOMS. \ncompare to 5.28.0, e.g. Perl_is_uni_upper \n\nThis is needed for Perl-Tk, ie Perl-Tk fails to build with -DNO_MATHOMS","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143556,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU3ODM3Ng=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm \"`cperl5.28.1-nt -V::archlib:`/CORE/`cperl5.28.1-nt -V::libperl:`\" | grep Perl_is_uni_\nis missing, because of -DNO_MATHOMS. \ncompare to 5.28.0, e.g. Perl_is_uni_upper \n\nThis is needed for Perl-Tk, ie Perl-Tk fails to build with -DNO_MATHOMS","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143587,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU3ODU1Mw=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm \"\\`cperl5.28.1-nt -V::archlib:\\`/CORE/\\`cperl5.28.1-nt -V::libperl:\\`\" | grep Perl_is_uni_\nis missing, because of -DNO_MATHOMS. \ncompare to 5.28.0, e.g. Perl_is_uni_upper \n\nThis is needed for Perl-Tk, ie Perl-Tk fails to build with -DNO_MATHOMS","files":null},{"type":6,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1548143847,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE3NDU4MDAzMQ=="},"target":"aaa9a3aa90f440e10c11a7fcb0297289f6a4f41de078908b7999a5ab7c3fe21f","message":"nm \"\\`cperl5.28.1-nt -V::archlib:\\`/CORE/\\`cperl5.28.1-nt -V::libperl:\\`\" | grep Perl_is_uni_\nis missing, because of -DNO_MATHOMS. \ncompare to a perl without -DNO_MATHOMS, e.g. Perl_is_uni_upper \n\nThis is needed for Perl-Tk, ie Perl-Tk fails to build with -DNO_MATHOMS.\nMost other extensions build fine with -DNO_MATHOMS.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544083446,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMDkxNjIwMzI="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544176094,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMTIwMDI4Njk="},"added":["security"],"removed":[]},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544373102,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjAxNDQ2MDg0NA=="},"status":2},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1544373118,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ0NTU1MTQ4NA==","github-url":"https://github.com/perl11/cperl/issues/390#issuecomment-445551484"},"message":"merged into 5.29.1c and 5.28.2c","files":null}]}