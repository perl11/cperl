{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1491977082,"metadata":{"github-id":"MDU6SXNzdWUyMjExNjAwNDQ=","github-url":"https://github.com/perl11/cperl/issues/267","origin":"github"},"title":"Fixup macports usr vs opt precedence","message":"This is a severe Configure bug, both in perl5 and cperl.\n/usr/local/include vs /usr/local/lib and /opt/local vs /usr/local.\n\nTest: `egrep -- '-[IL]/.*/local/(include|lib)' config.sh`\n/opt/local vs /usr/local precedence needs to match.\n\nCurrently:\n\nccflags='-fno-common -DPERL_DARWIN -mmacosx-version-min=10.11 -DNO_MATHOMS -march=corei7 -fwrapv -fno-strict-aliasing -pipe -fstack-protector **-I/usr/local/include** -I/opt/local/include -DPERL_USE_SAFE_PUTENV'\n\nlddlflags=' -mmacosx-version-min=10.11 -bundle -undefined dynamic_lookup **-L/opt/local/lib** -L/usr/local/lib -L/opt/local/lib/libgcc -fstack-protector'\n\nldflags=' -mmacosx-version-min=10.11 -fstack-protector -L/opt/local/lib -L/usr/local/lib -L/opt/local/lib/libgcc'\n\nIt leads to wrong compile-time diagnostics with a run-time mismatch in a loaded dylib.\nProbably also on other platforms.\n\nPolicies:\n* either prefer stable libs over customized ones: then -L/opt/local/lib over -L/usr/local/lib\n* or prefer customized libs (default).\npackagers could enforce the first policy for stability, ignoring updates or old cruft in /usr/local.\n\nBut the mismatch with inc is a bug.\nNote that with -L/opt/local/lib the path to the dylib is enforced at compile-time, which leads to stable packaged-only dylibs, i.e. shared cpan XS libraries.\nWith -L/usr/local/lib preferred, which is in DYLD_FALLBACK_LIBRARY_PATH, the path is stripped, i.e.\nthe dylib is sensible to DYLD_LIBRARY_PATH overrides.\n\n`$ man dyld`\nDYLD_LIBRARY_PATH, DYLD_FALLBACK_FRAMEWORK_PATH and DYLD_FALLBACK_LIBRARY_PATH\n\ncheck:\n`otool -L blib/arch/auto/PATH/NAME.bundle`\n\n\nMakefile.PL recipe for your cpan module:\n```\n# fixup darwin macports usr vs opt precedence. /usr/local/include vs /usr/local/lib\nmy $ccflags = $Config{ccflags};\nmy $ldflags = $Config{ldflags};\nmy $lddlflags = $Config{lddlflags};\nif ($lddlflags =~ m| -L/opt/local/lib| and $ccflags =~ m| -I/opt/local/include|) {\n    # opt first?\n    if ($lddlflags =~ m| -L/opt/local/lib.*-L/usr/local/lib|\n        and $ccflags =~ m| -I/usr/local/include.*-I/opt/local/include|)\n    {\n        warn(\"Your perl has corrupt /opt/local vs /usr/local precedence!\\n\");\n        warn(\"include prefers /usr/local, but lib /opt/local\\n\");\n        warn(\"Fixing it up for you...\\n\");\n        $lddlflags =~ s|(-L/opt/local/lib.*)(-L/usr/local/lib)|$2 $1|;\n        if ($ldflags =~ m| -L/opt/local/lib.*-L/usr/local/lib|) {\n            $ldflags =~ s|(-L/opt/local/lib.*)(-L/usr/local/lib)|$2 $1|;\n        }\n    }\n}\n\nmy %WriteMakefileArgs = (\n...\n  'CCFLAGS'   =\u003e $ccflags,\n  'LDFLAGS' =\u003e $ldflags,\n  'LDDLFLAGS' =\u003e $lddlflags,\n```\n\nCause:\n\nlocincpth vs loclibpth is correct:\nlocincpth='/usr/local/include /opt/local/include /usr/gnu/include /opt/gnu/include /usr/GNU/include /opt/GNU/include'\nloclibpth='/usr/local/lib /opt/local/lib /usr/gnu/lib /opt/gnu/lib /usr/GNU/lib /opt/GNU/lib /opt/local/lib/libgcc'\n\nthe compiler settings incpth vs libpth are also correct:\n$ grep '^...pth=' config.sh\nincpth='/opt/local/lib/gcc6/gcc/x86_64-apple-darwin15/6.3.0/include /opt/local/include /opt/local/lib/gcc6/gcc/x86_64-apple-darwin15/6.3.0/include-fixed /usr/include'\nlibpth='/opt/local/lib /opt/local/lib/gcc6/gcc/x86_64-apple-darwin15/6.3.0/include-fixed /usr/lib /usr/local/lib /opt/local/lib/libgcc'\n\nOnly the merge logic for -I/usr/local/include is wrong.\n\nBut there are more errors in the hiding:\nThe libpth detection in Configure is lying. The paths in libpth are not actually searched, they are only constructed analog to incpth. e.g. macports gcc does not search -L/opt/local/lib","files":null}]}