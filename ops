{"version":1,"ops":[{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465194180,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyMzg3NzM0MA==","github-url":"https://github.com/perl11/cperl/issues/151#issuecomment-223877340"},"message":"Yes, I know. I'm already working on that last 5.24 blocker.\nThe problem is actually inside pp_signature, with msvc only.\n\ngood case: (-DXlvst on linux/darwin)\n\n```\n  CX 3: SUB    =\u003e PV(\"File::Spec\"\\0)  PV(\"lib\"\\0)  PV(\"/usr/src/perl/blead/cperl\"\\0)  \n  retop=leavesub\n\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)    signature($self, str $path, $base?)\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigpad padp 7bc15f00 curpad[1] $self\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigconst argp 7bc00e60\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigcopy padp 7bc15f00 $self = argp 7bc00e60\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigconst argp 7c3a3800\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigcopy padp 7bc15f40 $path = argp 7c3a3800\n(92243:dist/PathTools/lib/File/Spec/Functions.pm:64)      sigcopy padp 7bc15fa0 $base = argp 7c3a0d60\n```\n\n3 args copied, all good.\n\nbad case: (-DXlvst on msvc)\n\n```\n  CX 3: SUB    =\u003e PV(\"File::Spec\"\\0)  PV(\"lib\"\\0)  PV(\"C:/cygwin/usr/src/perl/blead/cperl\"\\0)  \n  retop=leavesub\n\n(2904:dist/PathTools/lib/File/Spec/Functions.pm:64) signature($self, str $path, $base?)\n(2904:dist/PathTools/lib/File/Spec/Functions.pm:64)   sigpad padp 9fe5e0 curpad[1] $self\n(2904:dist/PathTools/lib/File/Spec/Functions.pm:64)   sigconst argp 9bd2a8\n(2904:dist/PathTools/lib/File/Spec/Functions.pm:64)   sigcopy padp 9fe5e0 $self = argp 9bd2a8\n(2904:dist/PathTools/lib/File/Spec/Functions.pm:64)   sigcopy padp 9fe5f0 $path = argp 9b4f28\n```\n\nSo we are missing a whole argument here, the SP is off-by-one. There are only 2 sigcopy's, not 3.","files":null},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465194189,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4MjQzOTM3Nw=="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465194189,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4MjQzOTM3OA=="},"added":["blocking"],"removed":[]},{"type":3,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465200850,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIyMzg5NDY5OQ==","github-url":"https://github.com/perl11/cperl/issues/151#issuecomment-223894699"},"message":"The root cause was a missing cBOOL for CvHASSIG(cv) which returns an int \u003e char, and on MSVC only the assignment to bool set it to 0 and not 1. So on MSVC hassig was always false, and the args were always copied from @_ and not from the CX savearray.\n\ngcc and clang really needs to add some kind of new -Wcompat warning for this.","files":null},{"type":2,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465200923,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50NjgyNTI2NTU0"},"title":"win32 File::Spec::Functions::rel2abs signature off-by-one SP (wrong hassig)","was":"win32 File::Spec::Functions::rel2abs signature off-by-one SP (wrong hassig)"},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465212134,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4MjcxNDE1MA=="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465212134,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4MjcxNDE1MQ=="},"added":["windows"],"removed":[]},{"type":5,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465213752,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDY4MjczNzk3NQ=="},"added":["blocking"],"removed":[]},{"type":4,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1465373467,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50Njg1NDMwOTUx"},"status":2}]}