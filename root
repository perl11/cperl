{"version":1,"ops":[{"type":1,"author":{"id":"04135dc995e2fdcd322aaf4268dbf04630a3cc7c"},"timestamp":1489736408,"metadata":{"github-id":"MDU6SXNzdWUyMTQ5Mjg3Njc=","github-url":"https://github.com/perl11/cperl/issues/263","origin":"github"},"title":"Safer -c: avoid undoable sideeffects (io, ...)","message":"The -c CHECK flag is used to run the compiler for type and syntax checks, and then it stops before switching to the run-time phase.\nBut unfortunately it runs code inside BEGIN and CHECK blocks. This code might not be safe for environments relying on syntax check/type check diagnostics.\nOn the other hand BEGIN and CHECK block side-effects may be needed to drive the compilers, e.g. to dump the state of the program.\n\nAdd a possibility to limit not-undoable, destructive sideffects, such is deleting a file, renaming a file, chdir, running system/exec/qx to limit the consequences of `perl -c`. \nchdir in particular is very often used in BEGIN blocks.\n\nImportant for syntax-checking editors such as padre, build tools and git hooks.\nE.g. `-c -Mops=:browse,:load,print`, but shorter so people will actually use the safer variant.\n\n`-c:s` would be a good name, I think. -s is for switch parsing, -S for PATH search, and both are valid combinations with -c.","files":null}]}