<<<<<<<
#!/bin/bash
# rbi all our branches
# sometimes cp-rb leaves a wrong first commit, fix it manually

trap do_exit ERR
set -e

function rb {
    b=$1
    m=$2
    echo git rebase $m --onto $b
    git checkout $b && git rebase --interactive $m
    if [ x$? != x0 ]; then
    	echo "rebase exit code:" $?
    	do_exit
    fi
}

# merge-upstream is before master, the commits which can upstream now
# master is stable
# changes to merge-upstream are now forbidden, published on github
#rb master merge-upstream

# not yet merged features or bugfixes, branched of from master or merge-upstream
git checkout master
#for b in `git branch | grep bugfix/`; do
#    rb $b master
#done

# compiler branches:
rb feature/CM-600-cperl-cowrefcnt-stats     master
rb bugfix/CM-600-cperl-cowrefcnt	    feature/CM-600-cperl-cowrefcnt-stats

# speed branches:
# unstable side-branches, branching off somewhere
rb feature/CM-626-cperl-use-dots    master
rb feature/CM-317-cperl-signatures  master
rb feature/CM-712-cperl-types-proto      master
rb feature/CM-322-cperl-new-hash-table   master
rb feature/CM-707-cperl-inline-subs      master
rb feature/CM-713-cperl-native-types     master
rb feature/CM-916-cperl-no-miniperl      master

# memory branches:
rb feature/CM-367-cperl-carp-builtin     master
rb feature/CM-367-cperl-warnings-xs-carp feature/CM-367-cperl-carp-builtin
rb feature/CM-370-cperl-warnings-xs      master

# speed and feature list: our previous pretty stable branch linear hierarchy
# (for later deeper subtrees)
declare -a feat
feat=(master
      feature/CM-317-cperl-signatures3
      feature/CM-317-cperl-signatures3-CM-690-nl
      feature/CM-910-cperl-multi
     )
N=${#feat[@]}
for i in `seq 0 $(($N - 2))`; do
    n=$(($i + 1))
    rb ${feat[$n]} ${feat[$i]}
done

rb feature/CM-317-cperl-signatures3-CM-690-nl1 feature/CM-317-cperl-signatures3
git checkout master

git branch | egrep 'master|bugfix/|feature/|merge-'
=======
#!/bin/bash
# rbi all our branches
# sometimes cp-rb leaves a wrong first commit, fix it manually

trap do_exit ERR
set -e

function rb {
    b=$1
    m=$2
    echo git rebase $m --onto $b
    git checkout $b && git rebase --interactive $m
    if [ x$? != x0 ]; then
    	echo "rebase exit code:" $?
    	do_exit
    fi
}

# merge-upstream is before master, the commits which can upstream now
# master is stable
# changes to merge-upstream are now forbidden, published on github
#rb master merge-upstream

# not yet merged features or bugfixes, branched of from master or merge-upstream
git checkout master
#for b in `git branch | grep bugfix/`; do
#    rb $b master
#done

# compiler branches:
rb feature/gh8-cowrefcnt-stats     master
rb bugfix/gh8-cowrefcnt	           feature/gh8-cowrefcnt-stats

# speed branches:
# unstable side-branches, branching off somewhere
rb feature/CM-626-cperl-use-dots      master
rb feature/CM-712-cperl-types-proto   master
rb feature/gh9-signatures             master
rb feature/gh24-new-hash-table        master
rb feature/gh23-inline-subs           master
rb feature/gh14-native-types          master
rb feature/gh6-no-miniperl            master

# memory branches:
rb feature/CM-367-cperl-carp-builtin     master
rb feature/CM-367-cperl-warnings-xs-carp feature/CM-367-cperl-carp-builtin
rb feature/gh9-warnings-xs               master

# speed and feature list: our previous pretty stable branch linear hierarchy
# (for later deeper subtrees)
declare -a feat
feat=(master
      feature/gh9-signatures3
      feature/gh9-signatures3-gh25-nl
      feature/gh16-multi
     )
N=${#feat[@]}
for i in `seq 0 $(($N - 2))`; do
    n=$(($i + 1))
    rb ${feat[$n]} ${feat[$i]}
done

rb feature/CM-317-cperl-signatures3-gh25-nl1 feature/CM-317-cperl-signatures3
git checkout master

git branch | egrep 'master|bugfix/|feature/|merge-'
>>>>>>>
